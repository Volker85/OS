ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"os_task_scheduler.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.p2align 2,,3
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	TASK_0:
  23              	.LFB9:
  24              		.file 1 "E:\\NeuOrga\\Programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_task_scheduler.c"
   1:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** #include "os_firstinc.h"
   2:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** #include "os_common.h"
   3:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** #include "os_task_common.h"
   4:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** #include "os_task_scheduler.h"
   5:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** #include "os_task_queue.h"
   6:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** #include "os_stack.h"
   7:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
   8:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** /*
   9:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 1. running     --(terminate)--> suspend : delete scheduling element
  10:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 2. running     --(preempt  )--> ready
  11:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 3. suspend     --(activate )--> ready   : create scheduling element
  12:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 4. ready       --(start    )--> running : use scheduling element
  13:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 5. unspecified --(create   )--> suspend
  14:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** */
  15:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  16:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  17:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_0(void* task_ptr);
  18:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_1(void* task_ptr);
  19:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_2(void* task_ptr);
  20:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local task_t** OS_TaskScheduler();
  21:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void OS_PreemptTask(task_t* task, scheduling_t* scheduling_task);
  22:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_ActivateDispatcher(void)
  23:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
  24:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  25:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* configure the TCMP */
  26:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*
  27:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    Dispatcher function for Core 0:
  28:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    Write Adresse into the config register (interrupts are requested by SWI/SVC???)
  29:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    */
  30:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #define SYSTICK_CTRL_STAT_REG ((uint32*)0xE000E010)
  31:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #define SYSTICK_RLD_VAL_REG   ((uint32*)0xE000E014)
  32:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #define SYSTICK_CURRENT_VAL_REG ((uint32*)0xE000E018)
  33:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #define SYSTICK_STAT_REG_TICKINT ((uint32)0x00000002)
  34:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #define SYSTICK_STAT_REG_ENABLE  ((uint32)0x00000001)
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 2


  35:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #define LOOPTIME_IN_USEC ((uint32)10000u)
  36:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*
  37:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    CLOCK = HCLK / 8
  38:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    vermutlich: CLOCK = 150Mhz / 8 = 18,75 Mhz
  39:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    */
  40:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #if(CFG_PROCESSOR == cMCU_CORTEX_M4)
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_RLD_VAL_REG = (*SYSTICK_RLD_VAL_REG & 0xFF000000 )| (((uint32)MCU_CLOCK_IN_HZ / ((uint3
  42:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CURRENT_VAL_REG = ((uint32)0x00000000);
  43:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CTRL_STAT_REG = *SYSTICK_CTRL_STAT_REG | SYSTICK_STAT_REG_TICKINT | SYSTICK_STAT_REG_EN
  44:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #endif
  45:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
  46:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  47:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  48:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_SleepTask(task_t* task, timebig_t usec, scheduling_t* scheduling_task_ptr)
  49:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
  50:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    timebig_t time;
  51:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_GetCurrentTime(&time);   
  52:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* sleep Task shall do a preempt task with a defined minimum wait time, the actual wait time is 
  53:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    IntAdd(&task->WaitActUntil, &time, &usec);
  54:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_PreemptTask(task,scheduling_task_ptr);
  55:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
  56:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  57:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** unsigned_char_t task_state_request(void* temp_task, task_state_t requested_state)
  58:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
  59:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    unsigned_char_t RequestState = Rejected;
  60:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  61:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_t* task = (task_t*) temp_task;
  62:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  63:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    switch(requested_state)
  64:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
  65:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    case Task_unspecified:/* 1. create new task */
  66:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
  67:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       switch(task->task_state)
  68:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
  69:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_ready:
  70:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_running:
  71:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_suspended:
  72:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
  73:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState = Rejected;
  74:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
  75:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
  76:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       default:
  77:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
  78:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          task->task_state = Task_unspecified;
  79:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState = Accepted;
  80:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
  81:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
  82:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
  83:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       break;
  84:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
  85:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    case Task_suspended:
  86:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
  87:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       switch(task->task_state)
  88:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
  89:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_unspecified: /* 2. create task transition */
  90:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
  91:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* no checks */
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 3


  92:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          task->task_state = Task_suspended;
  93:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState = Accepted;
  94:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
  95:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
  96:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_running: /* 3. terminate task */
  97:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
  98:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          task->task_state = Task_suspended;
  99:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState = Accepted;
 100:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 101:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 102:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       default:
 103:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 104:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* no change in states allowed */
 105:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          OS_SetSwBug(os_bug_taskstate_request_denied, Func_TaskStateRequest);
 106:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 107:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 108:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 109:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       break;
 110:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 111:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    case Task_running:
 112:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 113:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       switch(task->task_state)
 114:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 115:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_ready: /* 4. start task transition */
 116:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 117:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          task->task_state = Task_running;
 118:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState   = Accepted;
 119:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 120:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 121:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       default:
 122:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 123:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* no change in states allowed */
 124:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 125:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 126:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 127:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       break;
 128:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 129:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 130:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    case Task_ready:
 131:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 132:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       switch(task->task_state)
 133:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 134:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_suspended: /* activate task transition */
 135:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 136:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          task->task_state = Task_ready;
 137:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState   = Accepted;
 138:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 139:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 140:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_running: /* preempt task transition */
 141:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 142:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          task->task_state = Task_ready;
 143:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState   = Accepted;
 144:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 145:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 146:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_unspecified:
 147:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 148:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****           task->task_state = Task_ready;
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 4


 149:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****           RequestState = Accepted;
 150:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****           break;
 151:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 152:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       default:
 153:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 154:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* no change in states allowed */
 155:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 156:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 157:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 158:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       break;
 159:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 160:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    default:
 161:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 162:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       break;
 163:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 164:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 165:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    if(RequestState == Rejected)
 166:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 167:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       TASK_TRANSITION_REJECTED_TASK_ADDR  = task;
 168:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       TASK_TRANSITION_REJECTED_STATE      = requested_state;
 169:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       TASK_TRANSITION_CURRENT_STATE       = task->task_state;
 170:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       OS_SetSwBug(os_bug_taskstate_request_denied, Func_TaskStateRequest);
 171:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 172:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    return RequestState;
 173:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 174:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 175:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_CreateTask(task_t* task)
 176:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 177:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*5. unspecified --(create   )--> suspend*/
 178:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    if(task != 0)
 179:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 180:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       if(task->state_request != 0)
 181:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 182:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->state_request(task, Task_suspended)== Accepted)
 183:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 184:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /*QAC*/
 185:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 186:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          else
 187:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 188:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_SetSwBug(os_bug_taskstate_request_denied, Func_CreateTask);
 189:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 190:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 191:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       else
 192:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 193:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          OS_SetSwBug(os_bug_null_pointer, Func_CreateTask);
 194:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 195:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 196:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    else
 197:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 198:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       OS_SetSwBug(os_bug_null_pointer, Func_CreateTask);
 199:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 200:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 201:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_PreemptTask(task_t* task, scheduling_t* scheduling_task)
 202:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 203:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*2. running     --(preempt  )--> ready*/
 204:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* Preempt task
 205:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - Disable Interrupts
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 5


 206:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - OS_TaskSaveTaskEnvironment
 207:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - add to Schedule Queue / delete from RunQueue
 208:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - delete active flag
 209:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - enable Interrupts
 210:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    */
 211:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    if(task != 0 && scheduling_task != 0)
 212:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 213:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       if(task->state_request != 0)
 214:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 215:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->state_request(task, Task_ready)== Accepted)
 216:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 217:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DisableInterrupts();
 218:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TaskSaveTaskEnvironment(task);
 219:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_RESTORE_SYSTEM_STACK((uint8*)&OS_MAIN_STACK);
 220:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 221:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->active = False;
 222:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* reset the prio increase for waiting */
 223:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->current_prio = task->default_prio;
 224:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             EnableInterrupts();
 225:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 226:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          else
 227:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 228:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_SetSwBug(os_bug_taskstate_request_denied, Func_Preempt_Task);
 229:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 230:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 231:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       else
 232:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 233:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          OS_SetSwBug(os_bug_null_pointer, Func_Preempt_Task);
 234:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 235:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 236:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    else
 237:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 238:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       OS_SetSwBug(os_bug_null_pointer, Func_Preempt_Task);
 239:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 240:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 241:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 242:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_ActivateTask(task_t* task)
 243:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 244:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*
 245:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    Activate Task:
 246:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - Disable Interrupts
 247:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - Add to schedule Queue
 248:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - Enable Interrupts
 249:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 250:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    in case of valid request, the content, where the "task_t* task" is point to is stored in TASK_RU
 251:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    */
 252:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    if(task != 0)
 253:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 254:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       if(task->state_request(task, Task_ready)==Accepted)
 255:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 256:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          DisableInterrupts();
 257:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* 3. suspended to ready (add to runqueue) */
 258:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->IdleTask == False)
 259:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 260:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             if( (task->active == False)
 261:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                   || ( (task->active == True) && (task->NrOfInsAllowed > task->NrOfInsActivated) )/
 262:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****               )
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 6


 263:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             {
 264:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                /* only activate if allowed by rule */
 265:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                task = AddToTaskQueue(task);
 266:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                AddToSchedulingQueue(task);
 267:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                if(task != 0)
 268:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                {
 269:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                   task->NrOfInsActivated++;
 270:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                }
 271:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                else
 272:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                {
 273:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                   OS_SetSwBug(os_bug_null_pointer,Func_ActivateTask);
 274:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                }
 275:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             }
 276:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             else
 277:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             {
 278:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                /* multiple activation bug occured */
 279:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                OS_SetSwBug(os_bug_taskstate_request_denied, Func_ActivateTask);
 280:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             }
 281:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 282:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          else
 283:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 284:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             AddToIdleTaskQueue(task);
 285:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 286:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          EnableInterrupts();
 287:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 288:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       else
 289:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 290:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          OS_SetSwBug(os_bug_taskstate_request_denied, Func_ActivateTask);
 291:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 292:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 293:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 294:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_StartTask(task_t* task, scheduling_t* scheduling_task)
 295:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 296:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* OS_StartTask
 297:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - Disable interrupts
 298:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - restore Environment
 299:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - enable interrupts
 300:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 301:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - Start Task
 302:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****     */
 303:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    timebig_t time;
 304:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    
 305:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    if( (task != 0) && (scheduling_task != 0)&& ((task->task_queued != False)||(task->IdleTask != Fa
 306:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 307:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       if(task->state_request !=0)
 308:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 309:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->state_request(task, Task_running)== Accepted)
 310:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 311:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DisableInterrupts();
 312:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->active =  True;
 313:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             AssignNull(&task->wait_time);
 314:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->current_prio = task->default_prio;
 315:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_SAVE_SYSTEM_STACK((uint8*)&OS_MAIN_STACK);
 316:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_RESTORETASK_ENVIRONMENT(task);
 317:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_GetCurrentTime(&time);
 318:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             Assign(&task->start_time, &time);
 319:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             EnableInterrupts();
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 7


 320:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 321:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* task execution shall not happen with disabled interrupts */
 322:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             SET_RUNNING_TASK(task, scheduling_task);
 323:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* change to user mode... */
 324:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             if(task->privilige_mode == ePriviligeMode_unpriviliged_thread_mode)
 325:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             {
 326:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                LLF_CHANGE_TO_UNPRIVILIGED_THREAD_MODE();
 327:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             }
 328:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 329:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* call the task entry function */
 330:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->fp(task);
 331:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 332:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          else
 333:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 334:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_SetSwBug(os_bug_taskstate_request_denied, Func_StartTask);
 335:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 336:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 337:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       else
 338:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 339:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          OS_SetSwBug(os_bug_null_pointer, Func_StartTask);
 340:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 341:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 342:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* allowed in case of empty QUEUE elements (queue elements which have no activate_task yet recei
 343:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    else
 344:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 345:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****        OS_SetSwBug(os_bug_null_pointer, Func_StartTask);
 346:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 347:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    */
 348:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 349:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_TerminateTask(task_t* task, scheduling_t* scheduling_task)
 350:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 351:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* Preempt task
 352:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - Disable Interrupts
 353:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - OS_TaskSaveTaskEnvironment
 354:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - add to Schedule Queue / delete from RunQueue
 355:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - delete active flag
 356:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - enable Interrupts
 357:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    */
 358:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    if(task != 0 && scheduling_task != 0)
 359:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 360:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       if(task->state_request != 0)
 361:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 362:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->state_request(task, Task_suspended)== Accepted)
 363:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 364:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DisableInterrupts();
 365:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TaskSaveTaskEnvironment(task);
 366:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_RESTORE_SYSTEM_STACK((uint8*)&OS_MAIN_STACK);
 367:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DeleteFromTaskQueue(task);
 368:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DeleteFromSchedulingQueue(scheduling_task);
 369:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 370:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->active = False;
 371:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* reset the prio increase for waiting */
 372:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->current_prio = task->default_prio;
 373:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             EnableInterrupts();
 374:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 375:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          else
 376:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 8


 377:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_SetSwBug(os_bug_taskstate_request_denied, Func_TerminateTask);
 378:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 379:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 380:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       else
 381:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 382:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          OS_SetSwBug(os_bug_null_pointer, Func_TerminateTask);
 383:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 384:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 385:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    else
 386:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 387:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       OS_SetSwBug(os_bug_null_pointer, Func_TerminateTask);
 388:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 389:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 390:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_TaskDispatcher(void)
 391:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 392:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* called in an certain core context (Core_0/1/2/3)*/
 393:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 394:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 395:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*
 396:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    1. running     --(terminate)--> suspend
 397:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    2. running     --(preempt  )--> ready
 398:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    3. suspend     --(activate )--> ready
 399:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    4. ready       --(start    )--> running
 400:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    5. unspecified --(create   )--> suspend
 401:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    */
 402:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_t* scheduling_task_ptr;
 403:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_t* task = 0;
 404:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* get running task */
 405:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task         = GetRunningTask();
 406:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_task_ptr = GetRunningSchedulingQueueElementPtr();
 407:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* Preempt Task */
 408:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    if(task!=0 && scheduling_task_ptr != 0)
 409:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 410:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       OS_TerminateTask(task, scheduling_task_ptr);
 411:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 412:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* ask for the next task to be activated... */
 413:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_task_ptr = OS_TaskScheduler();
 414:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    if(scheduling_task_ptr != 0)
 415:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 416:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       task = GetFromTaskQueue(scheduling_task_ptr);
 417:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 418:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    if(task != 0 && scheduling_task_ptr != 0)
 419:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 420:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****        OS_StartTask(task, scheduling_task_ptr);
 421:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 422:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 423:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_0(void* task_ptr)
 424:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
  25              		.loc 1 424 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
 425:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter(task_ptr);
 426:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    HaltMcu();/* HLT will be ended by timer interrupt, what shall be done with the rest of the funct
  31              		.loc 1 426 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 9


  32 0000 FFF7FEBF 		b	LLF_WAIT_FOR_INTERRUPT
  33              	.LVL1:
  34              		.cfi_endproc
  35              	.LFE9:
  37              		.align	1
  38              		.p2align 2,,3
  39              		.syntax unified
  40              		.thumb
  41              		.thumb_func
  42              		.fpu softvfp
  44              	TASK_2:
  45              	.LFB18:
  46              		.cfi_startproc
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 0, uses_anonymous_args = 0
  49 0004 38B5     		push	{r3, r4, r5, lr}
  50              		.cfi_def_cfa_offset 16
  51              		.cfi_offset 3, -16
  52              		.cfi_offset 4, -12
  53              		.cfi_offset 5, -8
  54              		.cfi_offset 14, -4
  55 0006 0446     		mov	r4, r0
  56 0008 FFF7FEFF 		bl	GetRunningSchedulingQueueElementPtr
  57 000c 194A     		ldr	r2, .L17
  58 000e 1368     		ldr	r3, [r2]
  59 0010 0133     		adds	r3, r3, #1
  60 0012 1360     		str	r3, [r2]
  61 0014 74B1     		cbz	r4, .L4
  62 0016 0546     		mov	r5, r0
  63 0018 60B1     		cbz	r0, .L4
  64 001a A36F     		ldr	r3, [r4, #120]
  65 001c 53B1     		cbz	r3, .L4
  66 001e 0121     		movs	r1, #1
  67 0020 2046     		mov	r0, r4
  68 0022 9847     		blx	r3
  69 0024 0128     		cmp	r0, #1
  70 0026 0BD0     		beq	.L16
  71 0028 0821     		movs	r1, #8
  72 002a 0120     		movs	r0, #1
  73 002c BDE83840 		pop	{r3, r4, r5, lr}
  74              		.cfi_remember_state
  75              		.cfi_restore 14
  76              		.cfi_restore 5
  77              		.cfi_restore 4
  78              		.cfi_restore 3
  79              		.cfi_def_cfa_offset 0
  80 0030 FFF7FEBF 		b	OS_SetSwBug
  81              	.L4:
  82              		.cfi_restore_state
  83 0034 0821     		movs	r1, #8
  84 0036 0220     		movs	r0, #2
  85 0038 BDE83840 		pop	{r3, r4, r5, lr}
  86              		.cfi_remember_state
  87              		.cfi_restore 14
  88              		.cfi_restore 5
  89              		.cfi_restore 4
  90              		.cfi_restore 3
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 10


  91              		.cfi_def_cfa_offset 0
  92 003c FFF7FEBF 		b	OS_SetSwBug
  93              	.L16:
  94              		.cfi_restore_state
  95 0040 FFF7FEFF 		bl	LLF_INT_DISABLE
  96 0044 2046     		mov	r0, r4
  97 0046 FFF7FEFF 		bl	OS_TaskSaveTaskEnvironment
  98 004a 0B48     		ldr	r0, .L17+4
  99 004c FFF7FEFF 		bl	OS_TASK_RESTORE_SYSTEM_STACK
 100 0050 2046     		mov	r0, r4
 101 0052 FFF7FEFF 		bl	DeleteFromTaskQueue
 102 0056 2846     		mov	r0, r5
 103 0058 FFF7FEFF 		bl	DeleteFromSchedulingQueue
 104 005c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 105 005e 94F86D20 		ldrb	r2, [r4, #109]	@ zero_extendqisi2
 106 0062 84F86C20 		strb	r2, [r4, #108]
 107 0066 6FF30003 		bfc	r3, #0, #1
 108 006a 2370     		strb	r3, [r4]
 109 006c BDE83840 		pop	{r3, r4, r5, lr}
 110              		.cfi_restore 14
 111              		.cfi_restore 5
 112              		.cfi_restore 4
 113              		.cfi_restore 3
 114              		.cfi_def_cfa_offset 0
 115 0070 FFF7FEBF 		b	LLF_INT_ENABLE
 116              	.L18:
 117              		.align	2
 118              	.L17:
 119 0074 00000000 		.word	TASK1_CALL_NR
 120 0078 00000000 		.word	OS_MAIN_STACK
 121              		.cfi_endproc
 122              	.LFE18:
 124              		.align	1
 125              		.p2align 2,,3
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 129              		.fpu softvfp
 131              	TASK_3:
 132              	.LFB20:
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136 007c 38B5     		push	{r3, r4, r5, lr}
 137              		.cfi_def_cfa_offset 16
 138              		.cfi_offset 3, -16
 139              		.cfi_offset 4, -12
 140              		.cfi_offset 5, -8
 141              		.cfi_offset 14, -4
 142 007e 0446     		mov	r4, r0
 143 0080 FFF7FEFF 		bl	GetRunningSchedulingQueueElementPtr
 144 0084 194A     		ldr	r2, .L33
 145 0086 1368     		ldr	r3, [r2]
 146 0088 0133     		adds	r3, r3, #1
 147 008a 1360     		str	r3, [r2]
 148 008c 74B1     		cbz	r4, .L20
 149 008e 0546     		mov	r5, r0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 11


 150 0090 60B1     		cbz	r0, .L20
 151 0092 A36F     		ldr	r3, [r4, #120]
 152 0094 53B1     		cbz	r3, .L20
 153 0096 0121     		movs	r1, #1
 154 0098 2046     		mov	r0, r4
 155 009a 9847     		blx	r3
 156 009c 0128     		cmp	r0, #1
 157 009e 0BD0     		beq	.L32
 158 00a0 0821     		movs	r1, #8
 159 00a2 0120     		movs	r0, #1
 160 00a4 BDE83840 		pop	{r3, r4, r5, lr}
 161              		.cfi_remember_state
 162              		.cfi_restore 14
 163              		.cfi_restore 5
 164              		.cfi_restore 4
 165              		.cfi_restore 3
 166              		.cfi_def_cfa_offset 0
 167 00a8 FFF7FEBF 		b	OS_SetSwBug
 168              	.L20:
 169              		.cfi_restore_state
 170 00ac 0821     		movs	r1, #8
 171 00ae 0220     		movs	r0, #2
 172 00b0 BDE83840 		pop	{r3, r4, r5, lr}
 173              		.cfi_remember_state
 174              		.cfi_restore 14
 175              		.cfi_restore 5
 176              		.cfi_restore 4
 177              		.cfi_restore 3
 178              		.cfi_def_cfa_offset 0
 179 00b4 FFF7FEBF 		b	OS_SetSwBug
 180              	.L32:
 181              		.cfi_restore_state
 182 00b8 FFF7FEFF 		bl	LLF_INT_DISABLE
 183 00bc 2046     		mov	r0, r4
 184 00be FFF7FEFF 		bl	OS_TaskSaveTaskEnvironment
 185 00c2 0B48     		ldr	r0, .L33+4
 186 00c4 FFF7FEFF 		bl	OS_TASK_RESTORE_SYSTEM_STACK
 187 00c8 2046     		mov	r0, r4
 188 00ca FFF7FEFF 		bl	DeleteFromTaskQueue
 189 00ce 2846     		mov	r0, r5
 190 00d0 FFF7FEFF 		bl	DeleteFromSchedulingQueue
 191 00d4 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 192 00d6 94F86D20 		ldrb	r2, [r4, #109]	@ zero_extendqisi2
 193 00da 84F86C20 		strb	r2, [r4, #108]
 194 00de 6FF30003 		bfc	r3, #0, #1
 195 00e2 2370     		strb	r3, [r4]
 196 00e4 BDE83840 		pop	{r3, r4, r5, lr}
 197              		.cfi_restore 14
 198              		.cfi_restore 5
 199              		.cfi_restore 4
 200              		.cfi_restore 3
 201              		.cfi_def_cfa_offset 0
 202 00e8 FFF7FEBF 		b	LLF_INT_ENABLE
 203              	.L34:
 204              		.align	2
 205              	.L33:
 206 00ec 00000000 		.word	TASK1_CALL_NR
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 12


 207 00f0 00000000 		.word	OS_MAIN_STACK
 208              		.cfi_endproc
 209              	.LFE20:
 211              		.align	1
 212              		.p2align 2,,3
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 216              		.fpu softvfp
 218              	TASK_1:
 219              	.LFB10:
 427:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 428:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_1(void* task_ptr)
 429:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 220              		.loc 1 429 0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224              	.LVL2:
 225              		.loc 1 429 0
 226 00f4 38B5     		push	{r3, r4, r5, lr}
 227              		.cfi_def_cfa_offset 16
 228              		.cfi_offset 3, -16
 229              		.cfi_offset 4, -12
 230              		.cfi_offset 5, -8
 231              		.cfi_offset 14, -4
 232              		.loc 1 429 0
 233 00f6 0446     		mov	r4, r0
 430:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_t* scheduling_task_ptr = 0;
 431:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter(task_ptr);
 432:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* worker task */
 433:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_task_ptr = GetRunningSchedulingQueueElementPtr();
 234              		.loc 1 433 0
 235 00f8 FFF7FEFF 		bl	GetRunningSchedulingQueueElementPtr
 236              	.LVL3:
 434:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* do some things */
 435:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    TASK1_CALL_NR++;
 237              		.loc 1 435 0
 238 00fc 194A     		ldr	r2, .L49
 239 00fe 1368     		ldr	r3, [r2]
 240 0100 0133     		adds	r3, r3, #1
 241 0102 1360     		str	r3, [r2]
 242              	.LVL4:
 243              	.LBB6:
 244              	.LBB7:
 358:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 245              		.loc 1 358 0
 246 0104 74B1     		cbz	r4, .L36
 247 0106 0546     		mov	r5, r0
 248 0108 60B1     		cbz	r0, .L36
 360:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 249              		.loc 1 360 0
 250 010a A36F     		ldr	r3, [r4, #120]
 251 010c 53B1     		cbz	r3, .L36
 362:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 252              		.loc 1 362 0
 253 010e 0121     		movs	r1, #1
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 13


 254 0110 2046     		mov	r0, r4
 255              	.LVL5:
 256 0112 9847     		blx	r3
 257              	.LVL6:
 258 0114 0128     		cmp	r0, #1
 259 0116 0BD0     		beq	.L48
 377:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 260              		.loc 1 377 0
 261 0118 0821     		movs	r1, #8
 262 011a 0120     		movs	r0, #1
 263              	.LBE7:
 264              	.LBE6:
 436:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 437:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 438:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* end */
 439:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_TerminateTask(task_ptr,scheduling_task_ptr);
 440:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 265              		.loc 1 440 0
 266 011c BDE83840 		pop	{r3, r4, r5, lr}
 267              		.cfi_remember_state
 268              		.cfi_restore 14
 269              		.cfi_restore 5
 270              		.cfi_restore 4
 271              		.cfi_restore 3
 272              		.cfi_def_cfa_offset 0
 273              	.LVL7:
 274              	.LBB15:
 275              	.LBB12:
 377:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 276              		.loc 1 377 0
 277 0120 FFF7FEBF 		b	OS_SetSwBug
 278              	.LVL8:
 279              	.L36:
 280              		.cfi_restore_state
 281              	.LBB8:
 282              	.LBB9:
 382:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 283              		.loc 1 382 0
 284 0124 0821     		movs	r1, #8
 285 0126 0220     		movs	r0, #2
 286              	.LVL9:
 287              	.LBE9:
 288              	.LBE8:
 289              	.LBE12:
 290              	.LBE15:
 291              		.loc 1 440 0
 292 0128 BDE83840 		pop	{r3, r4, r5, lr}
 293              		.cfi_remember_state
 294              		.cfi_restore 14
 295              		.cfi_restore 5
 296              		.cfi_restore 4
 297              		.cfi_restore 3
 298              		.cfi_def_cfa_offset 0
 299              	.LVL10:
 300              	.LBB16:
 301              	.LBB13:
 302              	.LBB11:
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 14


 303              	.LBB10:
 382:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 304              		.loc 1 382 0
 305 012c FFF7FEBF 		b	OS_SetSwBug
 306              	.LVL11:
 307              	.L48:
 308              		.cfi_restore_state
 309              	.LBE10:
 310              	.LBE11:
 364:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TaskSaveTaskEnvironment(task);
 311              		.loc 1 364 0
 312 0130 FFF7FEFF 		bl	LLF_INT_DISABLE
 313              	.LVL12:
 365:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_RESTORE_SYSTEM_STACK((uint8*)&OS_MAIN_STACK);
 314              		.loc 1 365 0
 315 0134 2046     		mov	r0, r4
 316 0136 FFF7FEFF 		bl	OS_TaskSaveTaskEnvironment
 317              	.LVL13:
 366:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DeleteFromTaskQueue(task);
 318              		.loc 1 366 0
 319 013a 0B48     		ldr	r0, .L49+4
 320 013c FFF7FEFF 		bl	OS_TASK_RESTORE_SYSTEM_STACK
 321              	.LVL14:
 367:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DeleteFromSchedulingQueue(scheduling_task);
 322              		.loc 1 367 0
 323 0140 2046     		mov	r0, r4
 324 0142 FFF7FEFF 		bl	DeleteFromTaskQueue
 325              	.LVL15:
 368:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 326              		.loc 1 368 0
 327 0146 2846     		mov	r0, r5
 328 0148 FFF7FEFF 		bl	DeleteFromSchedulingQueue
 329              	.LVL16:
 370:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* reset the prio increase for waiting */
 330              		.loc 1 370 0
 331 014c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 372:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             EnableInterrupts();
 332              		.loc 1 372 0
 333 014e 94F86D20 		ldrb	r2, [r4, #109]	@ zero_extendqisi2
 334 0152 84F86C20 		strb	r2, [r4, #108]
 370:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* reset the prio increase for waiting */
 335              		.loc 1 370 0
 336 0156 6FF30003 		bfc	r3, #0, #1
 337 015a 2370     		strb	r3, [r4]
 338              	.LBE13:
 339              	.LBE16:
 340              		.loc 1 440 0
 341 015c BDE83840 		pop	{r3, r4, r5, lr}
 342              		.cfi_restore 14
 343              		.cfi_restore 5
 344              		.cfi_restore 4
 345              		.cfi_restore 3
 346              		.cfi_def_cfa_offset 0
 347              	.LVL17:
 348              	.LBB17:
 349              	.LBB14:
 373:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 15


 350              		.loc 1 373 0
 351 0160 FFF7FEBF 		b	LLF_INT_ENABLE
 352              	.LVL18:
 353              	.L50:
 354              		.align	2
 355              	.L49:
 356 0164 00000000 		.word	TASK1_CALL_NR
 357 0168 00000000 		.word	OS_MAIN_STACK
 358              	.LBE14:
 359              	.LBE17:
 360              		.cfi_endproc
 361              	.LFE10:
 363              		.align	1
 364              		.p2align 2,,3
 365              		.global	OS_ActivateDispatcher
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu softvfp
 371              	OS_ActivateDispatcher:
 372              	.LFB0:
  23:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 373              		.loc 1 23 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377              		@ link register save eliminated.
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CURRENT_VAL_REG = ((uint32)0x00000000);
 378              		.loc 1 41 0
 379 016c 0948     		ldr	r0, .L53
  43:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #endif
 380              		.loc 1 43 0
 381 016e 0A49     		ldr	r1, .L53+4
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CURRENT_VAL_REG = ((uint32)0x00000000);
 382              		.loc 1 41 0
 383 0170 0368     		ldr	r3, [r0]
  43:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #endif
 384              		.loc 1 43 0
 385 0172 0A68     		ldr	r2, [r1]
  23:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 386              		.loc 1 23 0
 387 0174 30B4     		push	{r4, r5}
 388              		.cfi_def_cfa_offset 8
 389              		.cfi_offset 4, -8
 390              		.cfi_offset 5, -4
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CURRENT_VAL_REG = ((uint32)0x00000000);
 391              		.loc 1 41 0
 392 0176 03F07F43 		and	r3, r3, #-16777216
  42:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CTRL_STAT_REG = *SYSTICK_CTRL_STAT_REG | SYSTICK_STAT_REG_TICKINT | SYSTICK_STAT_REG_EN
 393              		.loc 1 42 0
 394 017a 084C     		ldr	r4, .L53+8
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CURRENT_VAL_REG = ((uint32)0x00000000);
 395              		.loc 1 41 0
 396 017c 43F4CD13 		orr	r3, r3, #1679360
  42:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CTRL_STAT_REG = *SYSTICK_CTRL_STAT_REG | SYSTICK_STAT_REG_TICKINT | SYSTICK_STAT_REG_EN
 397              		.loc 1 42 0
 398 0180 0025     		movs	r5, #0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 16


  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CURRENT_VAL_REG = ((uint32)0x00000000);
 399              		.loc 1 41 0
 400 0182 43F42073 		orr	r3, r3, #640
  43:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #endif
 401              		.loc 1 43 0
 402 0186 42F00302 		orr	r2, r2, #3
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CURRENT_VAL_REG = ((uint32)0x00000000);
 403              		.loc 1 41 0
 404 018a 0360     		str	r3, [r0]
  43:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #endif
 405              		.loc 1 43 0
 406 018c 0A60     		str	r2, [r1]
  42:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CTRL_STAT_REG = *SYSTICK_CTRL_STAT_REG | SYSTICK_STAT_REG_TICKINT | SYSTICK_STAT_REG_EN
 407              		.loc 1 42 0
 408 018e 2560     		str	r5, [r4]
  45:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 409              		.loc 1 45 0
 410 0190 30BC     		pop	{r4, r5}
 411              		.cfi_restore 5
 412              		.cfi_restore 4
 413              		.cfi_def_cfa_offset 0
 414 0192 7047     		bx	lr
 415              	.L54:
 416              		.align	2
 417              	.L53:
 418 0194 14E000E0 		.word	-536813548
 419 0198 10E000E0 		.word	-536813552
 420 019c 18E000E0 		.word	-536813544
 421              		.cfi_endproc
 422              	.LFE0:
 424              		.align	1
 425              		.p2align 2,,3
 426              		.global	OS_SleepTask
 427              		.syntax unified
 428              		.thumb
 429              		.thumb_func
 430              		.fpu softvfp
 432              	OS_SleepTask:
 433              	.LFB1:
  49:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    timebig_t time;
 434              		.loc 1 49 0
 435              		.cfi_startproc
 436              		@ args = 24, pretend = 16, frame = 16
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438              	.LVL19:
 439 01a0 84B0     		sub	sp, sp, #16
 440              		.cfi_def_cfa_offset 16
 441 01a2 30B5     		push	{r4, r5, lr}
 442              		.cfi_def_cfa_offset 28
 443              		.cfi_offset 4, -28
 444              		.cfi_offset 5, -24
 445              		.cfi_offset 14, -20
 446 01a4 85B0     		sub	sp, sp, #20
 447              		.cfi_def_cfa_offset 48
  49:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    timebig_t time;
 448              		.loc 1 49 0
 449 01a6 0446     		mov	r4, r0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 17


 450 01a8 09AD     		add	r5, sp, #36
  51:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* sleep Task shall do a preempt task with a defined minimum wait time, the actual wait time is 
 451              		.loc 1 51 0
 452 01aa 6846     		mov	r0, sp
 453              	.LVL20:
  49:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    timebig_t time;
 454              		.loc 1 49 0
 455 01ac 85E80E00 		stm	r5, {r1, r2, r3}
  51:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* sleep Task shall do a preempt task with a defined minimum wait time, the actual wait time is 
 456              		.loc 1 51 0
 457 01b0 FFF7FEFF 		bl	OS_GetCurrentTime
 458              	.LVL21:
  53:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_PreemptTask(task,scheduling_task_ptr);
 459              		.loc 1 53 0
 460 01b4 2A46     		mov	r2, r5
 461 01b6 6946     		mov	r1, sp
 462 01b8 A01D     		adds	r0, r4, #6
 463 01ba FFF7FEFF 		bl	IntAdd
 464              	.LVL22:
 465              	.LBB20:
 466              	.LBB21:
 211:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 467              		.loc 1 211 0
 468 01be 8CB1     		cbz	r4, .L56
 469 01c0 0D9B     		ldr	r3, [sp, #52]
 470 01c2 7BB1     		cbz	r3, .L56
 213:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 471              		.loc 1 213 0
 472 01c4 A36F     		ldr	r3, [r4, #120]
 473 01c6 6BB1     		cbz	r3, .L56
 215:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 474              		.loc 1 215 0
 475 01c8 0221     		movs	r1, #2
 476 01ca 2046     		mov	r0, r4
 477 01cc 9847     		blx	r3
 478              	.LVL23:
 479 01ce 0128     		cmp	r0, #1
 480 01d0 11D0     		beq	.L69
 228:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 481              		.loc 1 228 0
 482 01d2 0D21     		movs	r1, #13
 483 01d4 0120     		movs	r0, #1
 484 01d6 FFF7FEFF 		bl	OS_SetSwBug
 485              	.LVL24:
 486              	.LBE21:
 487              	.LBE20:
  55:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 488              		.loc 1 55 0
 489 01da 05B0     		add	sp, sp, #20
 490              		.cfi_remember_state
 491              		.cfi_def_cfa_offset 28
 492              		@ sp needed
 493 01dc BDE83040 		pop	{r4, r5, lr}
 494              		.cfi_restore 14
 495              		.cfi_restore 5
 496              		.cfi_restore 4
 497              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 18


 498              	.LVL25:
 499 01e0 04B0     		add	sp, sp, #16
 500              		.cfi_def_cfa_offset 0
 501 01e2 7047     		bx	lr
 502              	.LVL26:
 503              	.L56:
 504              		.cfi_restore_state
 505              	.LBB24:
 506              	.LBB22:
 233:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 507              		.loc 1 233 0
 508 01e4 0D21     		movs	r1, #13
 509 01e6 0220     		movs	r0, #2
 510 01e8 FFF7FEFF 		bl	OS_SetSwBug
 511              	.LVL27:
 512              	.LBE22:
 513              	.LBE24:
  55:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 514              		.loc 1 55 0
 515 01ec 05B0     		add	sp, sp, #20
 516              		.cfi_remember_state
 517              		.cfi_def_cfa_offset 28
 518              		@ sp needed
 519 01ee BDE83040 		pop	{r4, r5, lr}
 520              		.cfi_restore 14
 521              		.cfi_restore 5
 522              		.cfi_restore 4
 523              		.cfi_def_cfa_offset 16
 524              	.LVL28:
 525 01f2 04B0     		add	sp, sp, #16
 526              		.cfi_def_cfa_offset 0
 527 01f4 7047     		bx	lr
 528              	.LVL29:
 529              	.L69:
 530              		.cfi_restore_state
 531              	.LBB25:
 532              	.LBB23:
 217:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TaskSaveTaskEnvironment(task);
 533              		.loc 1 217 0
 534 01f6 FFF7FEFF 		bl	LLF_INT_DISABLE
 535              	.LVL30:
 218:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_RESTORE_SYSTEM_STACK((uint8*)&OS_MAIN_STACK);
 536              		.loc 1 218 0
 537 01fa 2046     		mov	r0, r4
 538 01fc FFF7FEFF 		bl	OS_TaskSaveTaskEnvironment
 539              	.LVL31:
 219:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 540              		.loc 1 219 0
 541 0200 0848     		ldr	r0, .L70
 542 0202 FFF7FEFF 		bl	OS_TASK_RESTORE_SYSTEM_STACK
 543              	.LVL32:
 221:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* reset the prio increase for waiting */
 544              		.loc 1 221 0
 545 0206 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 223:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             EnableInterrupts();
 546              		.loc 1 223 0
 547 0208 94F86D20 		ldrb	r2, [r4, #109]	@ zero_extendqisi2
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 19


 548 020c 84F86C20 		strb	r2, [r4, #108]
 221:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* reset the prio increase for waiting */
 549              		.loc 1 221 0
 550 0210 6FF30003 		bfc	r3, #0, #1
 551 0214 2370     		strb	r3, [r4]
 224:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 552              		.loc 1 224 0
 553 0216 FFF7FEFF 		bl	LLF_INT_ENABLE
 554              	.LVL33:
 555              	.LBE23:
 556              	.LBE25:
  55:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 557              		.loc 1 55 0
 558 021a 05B0     		add	sp, sp, #20
 559              		.cfi_def_cfa_offset 28
 560              		@ sp needed
 561 021c BDE83040 		pop	{r4, r5, lr}
 562              		.cfi_restore 14
 563              		.cfi_restore 5
 564              		.cfi_restore 4
 565              		.cfi_def_cfa_offset 16
 566              	.LVL34:
 567 0220 04B0     		add	sp, sp, #16
 568              		.cfi_def_cfa_offset 0
 569 0222 7047     		bx	lr
 570              	.L71:
 571              		.align	2
 572              	.L70:
 573 0224 00000000 		.word	OS_MAIN_STACK
 574              		.cfi_endproc
 575              	.LFE1:
 577              		.align	1
 578              		.p2align 2,,3
 579              		.global	task_state_request
 580              		.syntax unified
 581              		.thumb
 582              		.thumb_func
 583              		.fpu softvfp
 585              	task_state_request:
 586              	.LFB2:
  58:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    unsigned_char_t RequestState = Rejected;
 587              		.loc 1 58 0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 0
 590              		@ frame_needed = 0, uses_anonymous_args = 0
 591              	.LVL35:
 592 0228 70B5     		push	{r4, r5, r6, lr}
 593              		.cfi_def_cfa_offset 16
 594              		.cfi_offset 4, -16
 595              		.cfi_offset 5, -12
 596              		.cfi_offset 6, -8
 597              		.cfi_offset 14, -4
 598 022a 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
  58:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    unsigned_char_t RequestState = Rejected;
 599              		.loc 1 58 0
 600 022e 0546     		mov	r5, r0
 601              	.LVL36:
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 20


 602 0230 0C46     		mov	r4, r1
  63:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 603              		.loc 1 63 0
 604 0232 0329     		cmp	r1, #3
 605 0234 0CD8     		bhi	.L73
 606 0236 DFE801F0 		tbb	[pc, r1]
 607              	.L75:
 608 023a 27       		.byte	(.L74-.L75)/2
 609 023b 02       		.byte	(.L76-.L75)/2
 610 023c 1E       		.byte	(.L77-.L75)/2
 611 023d 17       		.byte	(.L78-.L75)/2
 612              		.p2align 1
 613              	.L76:
  87:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 614              		.loc 1 87 0
 615 023e 5BB3     		cbz	r3, .L82
 616 0240 032B     		cmp	r3, #3
 617 0242 29D0     		beq	.L82
 105:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 618              		.loc 1 105 0
 619 0244 0C21     		movs	r1, #12
 620              	.LVL37:
 621 0246 0120     		movs	r0, #1
 622              	.LVL38:
 623 0248 FFF7FEFF 		bl	OS_SetSwBug
 624              	.LVL39:
 625 024c 95F87C30 		ldrb	r3, [r5, #124]	@ zero_extendqisi2
 626              	.L73:
 167:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       TASK_TRANSITION_REJECTED_STATE      = requested_state;
 627              		.loc 1 167 0
 628 0250 1349     		ldr	r1, .L96
 169:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       OS_SetSwBug(os_bug_taskstate_request_denied, Func_TaskStateRequest);
 629              		.loc 1 169 0
 630 0252 144A     		ldr	r2, .L96+4
 168:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       TASK_TRANSITION_CURRENT_STATE       = task->task_state;
 631              		.loc 1 168 0
 632 0254 144E     		ldr	r6, .L96+8
 167:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       TASK_TRANSITION_REJECTED_STATE      = requested_state;
 633              		.loc 1 167 0
 634 0256 0D60     		str	r5, [r1]
 170:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 635              		.loc 1 170 0
 636 0258 0120     		movs	r0, #1
 637 025a 0C21     		movs	r1, #12
 168:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       TASK_TRANSITION_CURRENT_STATE       = task->task_state;
 638              		.loc 1 168 0
 639 025c 3470     		strb	r4, [r6]
 169:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       OS_SetSwBug(os_bug_taskstate_request_denied, Func_TaskStateRequest);
 640              		.loc 1 169 0
 641 025e 1370     		strb	r3, [r2]
 170:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 642              		.loc 1 170 0
 643 0260 FFF7FEFF 		bl	OS_SetSwBug
 644              	.LVL40:
 645 0264 0020     		movs	r0, #0
 173:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 646              		.loc 1 173 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 21


 647 0266 70BD     		pop	{r4, r5, r6, pc}
 648              	.LVL41:
 649              	.L78:
 113:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 650              		.loc 1 113 0
 651 0268 022B     		cmp	r3, #2
 652 026a F1D1     		bne	.L73
 117:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState   = Accepted;
 653              		.loc 1 117 0
 654 026c 0323     		movs	r3, #3
 655 026e 80F87C30 		strb	r3, [r0, #124]
 656              	.LVL42:
 118:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 657              		.loc 1 118 0
 658 0272 0120     		movs	r0, #1
 659              	.LVL43:
 173:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 660              		.loc 1 173 0
 661 0274 70BD     		pop	{r4, r5, r6, pc}
 662              	.LVL44:
 663              	.L77:
 132:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 664              		.loc 1 132 0
 665 0276 012B     		cmp	r3, #1
 666 0278 01D9     		bls	.L84
 667 027a 032B     		cmp	r3, #3
 668 027c E8D1     		bne	.L73
 669              	.L84:
 136:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState   = Accepted;
 670              		.loc 1 136 0
 671 027e 0223     		movs	r3, #2
 672 0280 85F87C30 		strb	r3, [r5, #124]
 673              	.LVL45:
 137:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 674              		.loc 1 137 0
 675 0284 0120     		movs	r0, #1
 676              	.LVL46:
 173:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 677              		.loc 1 173 0
 678 0286 70BD     		pop	{r4, r5, r6, pc}
 679              	.LVL47:
 680              	.L74:
  67:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 681              		.loc 1 67 0
 682 0288 5A1E     		subs	r2, r3, #1
 683 028a 022A     		cmp	r2, #2
 684 028c E0D9     		bls	.L73
  78:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState = Accepted;
 685              		.loc 1 78 0
 686 028e 0023     		movs	r3, #0
 687 0290 80F87C30 		strb	r3, [r0, #124]
 688              	.LVL48:
  79:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 689              		.loc 1 79 0
 690 0294 0120     		movs	r0, #1
 691              	.LVL49:
 173:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 22


 692              		.loc 1 173 0
 693 0296 70BD     		pop	{r4, r5, r6, pc}
 694              	.LVL50:
 695              	.L82:
  92:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState = Accepted;
 696              		.loc 1 92 0
 697 0298 0120     		movs	r0, #1
 698              	.LVL51:
 699 029a 85F87C00 		strb	r0, [r5, #124]
 700              	.LVL52:
 173:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 701              		.loc 1 173 0
 702 029e 70BD     		pop	{r4, r5, r6, pc}
 703              	.LVL53:
 704              	.L97:
 705              		.align	2
 706              	.L96:
 707 02a0 00000000 		.word	TASK_TRANSITION_REJECTED_TASK_ADDR
 708 02a4 00000000 		.word	TASK_TRANSITION_CURRENT_STATE
 709 02a8 00000000 		.word	TASK_TRANSITION_REJECTED_STATE
 710              		.cfi_endproc
 711              	.LFE2:
 713              		.align	1
 714              		.p2align 2,,3
 715              		.global	OS_CreateTask
 716              		.syntax unified
 717              		.thumb
 718              		.thumb_func
 719              		.fpu softvfp
 721              	OS_CreateTask:
 722              	.LFB3:
 176:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*5. unspecified --(create   )--> suspend*/
 723              		.loc 1 176 0
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 0
 726              		@ frame_needed = 0, uses_anonymous_args = 0
 727              	.LVL54:
 178:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 728              		.loc 1 178 0
 729 02ac 98B1     		cbz	r0, .L108
 176:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*5. unspecified --(create   )--> suspend*/
 730              		.loc 1 176 0
 731 02ae 08B5     		push	{r3, lr}
 732              		.cfi_def_cfa_offset 8
 733              		.cfi_offset 3, -8
 734              		.cfi_offset 14, -4
 180:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 735              		.loc 1 180 0
 736 02b0 836F     		ldr	r3, [r0, #120]
 737 02b2 53B1     		cbz	r3, .L99
 182:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 738              		.loc 1 182 0
 739 02b4 0121     		movs	r1, #1
 740 02b6 9847     		blx	r3
 741              	.LVL55:
 742 02b8 0128     		cmp	r0, #1
 743 02ba 00D1     		bne	.L111
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 23


 200:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_PreemptTask(task_t* task, scheduling_t* scheduling_task)
 744              		.loc 1 200 0
 745 02bc 08BD     		pop	{r3, pc}
 746              	.L111:
 188:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 747              		.loc 1 188 0
 748 02be 0F21     		movs	r1, #15
 749 02c0 0120     		movs	r0, #1
 200:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_PreemptTask(task_t* task, scheduling_t* scheduling_task)
 750              		.loc 1 200 0
 751 02c2 BDE80840 		pop	{r3, lr}
 752              		.cfi_remember_state
 753              		.cfi_restore 14
 754              		.cfi_restore 3
 755              		.cfi_def_cfa_offset 0
 188:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 756              		.loc 1 188 0
 757 02c6 FFF7FEBF 		b	OS_SetSwBug
 758              	.LVL56:
 759              	.L99:
 760              		.cfi_restore_state
 193:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 761              		.loc 1 193 0
 762 02ca 0F21     		movs	r1, #15
 763 02cc 0220     		movs	r0, #2
 764              	.LVL57:
 200:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_PreemptTask(task_t* task, scheduling_t* scheduling_task)
 765              		.loc 1 200 0
 766 02ce BDE80840 		pop	{r3, lr}
 767              		.cfi_restore 14
 768              		.cfi_restore 3
 769              		.cfi_def_cfa_offset 0
 193:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 770              		.loc 1 193 0
 771 02d2 FFF7FEBF 		b	OS_SetSwBug
 772              	.LVL58:
 773              	.L108:
 774 02d6 0F21     		movs	r1, #15
 775 02d8 0220     		movs	r0, #2
 776              	.LVL59:
 777 02da FFF7FEBF 		b	OS_SetSwBug
 778              	.LVL60:
 779              		.cfi_endproc
 780              	.LFE3:
 782              		.align	1
 783 02de 00BF     		.p2align 2,,3
 784              		.global	OS_ActivateTask
 785              		.syntax unified
 786              		.thumb
 787              		.thumb_func
 788              		.fpu softvfp
 790              	OS_ActivateTask:
 791              	.LFB5:
 243:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*
 792              		.loc 1 243 0
 793              		.cfi_startproc
 794              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 24


 795              		@ frame_needed = 0, uses_anonymous_args = 0
 796              	.LVL61:
 252:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 797              		.loc 1 252 0
 798 02e0 68B3     		cbz	r0, .L112
 243:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*
 799              		.loc 1 243 0
 800 02e2 38B5     		push	{r3, r4, r5, lr}
 801              		.cfi_def_cfa_offset 16
 802              		.cfi_offset 3, -16
 803              		.cfi_offset 4, -12
 804              		.cfi_offset 5, -8
 805              		.cfi_offset 14, -4
 254:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 806              		.loc 1 254 0
 807 02e4 0221     		movs	r1, #2
 808 02e6 836F     		ldr	r3, [r0, #120]
 809 02e8 0446     		mov	r4, r0
 810 02ea 9847     		blx	r3
 811              	.LVL62:
 812 02ec 0128     		cmp	r0, #1
 813 02ee 0546     		mov	r5, r0
 814 02f0 05D0     		beq	.L126
 290:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 815              		.loc 1 290 0
 816 02f2 0B21     		movs	r1, #11
 817 02f4 0120     		movs	r0, #1
 293:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_StartTask(task_t* task, scheduling_t* scheduling_task)
 818              		.loc 1 293 0
 819 02f6 BDE83840 		pop	{r3, r4, r5, lr}
 820              		.cfi_remember_state
 821              		.cfi_restore 14
 822              		.cfi_restore 5
 823              		.cfi_restore 4
 824              		.cfi_restore 3
 825              		.cfi_def_cfa_offset 0
 826              	.LVL63:
 290:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 827              		.loc 1 290 0
 828 02fa FFF7FEBF 		b	OS_SetSwBug
 829              	.LVL64:
 830              	.L126:
 831              		.cfi_restore_state
 256:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* 3. suspended to ready (add to runqueue) */
 832              		.loc 1 256 0
 833 02fe FFF7FEFF 		bl	LLF_INT_DISABLE
 834              	.LVL65:
 258:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 835              		.loc 1 258 0
 836 0302 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 837 0304 5A07     		lsls	r2, r3, #29
 838 0306 13D4     		bmi	.L115
 260:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                   || ( (task->active == True) && (task->NrOfInsAllowed > task->NrOfInsActivated) )/
 839              		.loc 1 260 0
 840 0308 DB07     		lsls	r3, r3, #31
 841 030a 03D5     		bpl	.L116
 261:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****               )
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 25


 842              		.loc 1 261 0
 843 030c 2279     		ldrb	r2, [r4, #4]	@ zero_extendqisi2
 844 030e 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 845 0310 9A42     		cmp	r2, r3
 846 0312 15D9     		bls	.L117
 847              	.L116:
 265:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                AddToSchedulingQueue(task);
 848              		.loc 1 265 0
 849 0314 2046     		mov	r0, r4
 850 0316 FFF7FEFF 		bl	AddToTaskQueue
 851              	.LVL66:
 852 031a 0446     		mov	r4, r0
 853              	.LVL67:
 266:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                if(task != 0)
 854              		.loc 1 266 0
 855 031c FFF7FEFF 		bl	AddToSchedulingQueue
 856              	.LVL68:
 267:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                {
 857              		.loc 1 267 0
 858 0320 9CB1     		cbz	r4, .L118
 269:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                }
 859              		.loc 1 269 0
 860 0322 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 861 0324 0133     		adds	r3, r3, #1
 862 0326 6371     		strb	r3, [r4, #5]
 863              	.L119:
 293:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_StartTask(task_t* task, scheduling_t* scheduling_task)
 864              		.loc 1 293 0
 865 0328 BDE83840 		pop	{r3, r4, r5, lr}
 866              		.cfi_remember_state
 867              		.cfi_restore 14
 868              		.cfi_restore 5
 869              		.cfi_restore 4
 870              		.cfi_restore 3
 871              		.cfi_def_cfa_offset 0
 872              	.LVL69:
 286:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 873              		.loc 1 286 0
 874 032c FFF7FEBF 		b	LLF_INT_ENABLE
 875              	.LVL70:
 876              	.L115:
 877              		.cfi_restore_state
 284:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 878              		.loc 1 284 0
 879 0330 2046     		mov	r0, r4
 880 0332 FFF7FEFF 		bl	AddToIdleTaskQueue
 881              	.LVL71:
 293:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_StartTask(task_t* task, scheduling_t* scheduling_task)
 882              		.loc 1 293 0
 883 0336 BDE83840 		pop	{r3, r4, r5, lr}
 884              		.cfi_restore 14
 885              		.cfi_restore 5
 886              		.cfi_restore 4
 887              		.cfi_restore 3
 888              		.cfi_def_cfa_offset 0
 889              	.LVL72:
 286:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 26


 890              		.loc 1 286 0
 891 033a FFF7FEBF 		b	LLF_INT_ENABLE
 892              	.LVL73:
 893              	.L112:
 894 033e 7047     		bx	lr
 895              	.LVL74:
 896              	.L117:
 897              		.cfi_def_cfa_offset 16
 898              		.cfi_offset 3, -16
 899              		.cfi_offset 4, -12
 900              		.cfi_offset 5, -8
 901              		.cfi_offset 14, -4
 279:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             }
 902              		.loc 1 279 0
 903 0340 2846     		mov	r0, r5
 904 0342 0B21     		movs	r1, #11
 905 0344 FFF7FEFF 		bl	OS_SetSwBug
 906              	.LVL75:
 907 0348 EEE7     		b	.L119
 908              	.L118:
 273:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                }
 909              		.loc 1 273 0
 910 034a 0B21     		movs	r1, #11
 911 034c 0220     		movs	r0, #2
 912 034e FFF7FEFF 		bl	OS_SetSwBug
 913              	.LVL76:
 914 0352 E9E7     		b	.L119
 915              		.cfi_endproc
 916              	.LFE5:
 918              		.align	1
 919              		.p2align 2,,3
 920              		.global	OS_StartTask
 921              		.syntax unified
 922              		.thumb
 923              		.thumb_func
 924              		.fpu softvfp
 926              	OS_StartTask:
 927              	.LFB6:
 295:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* OS_StartTask
 928              		.loc 1 295 0
 929              		.cfi_startproc
 930              		@ args = 0, pretend = 0, frame = 16
 931              		@ frame_needed = 0, uses_anonymous_args = 0
 932              	.LVL77:
 305:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 933              		.loc 1 305 0
 934 0354 A0B1     		cbz	r0, .L142
 305:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 935              		.loc 1 305 0 is_stmt 0 discriminator 1
 936 0356 99B1     		cbz	r1, .L142
 295:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* OS_StartTask
 937              		.loc 1 295 0 is_stmt 1 discriminator 2
 938 0358 30B5     		push	{r4, r5, lr}
 939              		.cfi_def_cfa_offset 12
 940              		.cfi_offset 4, -12
 941              		.cfi_offset 5, -8
 942              		.cfi_offset 14, -4
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 27


 305:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 943              		.loc 1 305 0 discriminator 2
 944 035a 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 945 035c 12F0060F 		tst	r2, #6
 295:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* OS_StartTask
 946              		.loc 1 295 0 discriminator 2
 947 0360 85B0     		sub	sp, sp, #20
 948              		.cfi_def_cfa_offset 32
 949 0362 0546     		mov	r5, r0
 305:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 950              		.loc 1 305 0 discriminator 2
 951 0364 0AD0     		beq	.L127
 307:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 952              		.loc 1 307 0
 953 0366 836F     		ldr	r3, [r0, #120]
 954 0368 0C46     		mov	r4, r1
 955 036a B3B3     		cbz	r3, .L129
 309:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 956              		.loc 1 309 0
 957 036c 0321     		movs	r1, #3
 958              	.LVL78:
 959 036e 9847     		blx	r3
 960              	.LVL79:
 961 0370 0128     		cmp	r0, #1
 962 0372 06D0     		beq	.L145
 334:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 963              		.loc 1 334 0
 964 0374 0621     		movs	r1, #6
 965 0376 0120     		movs	r0, #1
 966 0378 FFF7FEFF 		bl	OS_SetSwBug
 967              	.LVL80:
 968              	.L127:
 348:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_TerminateTask(task_t* task, scheduling_t* scheduling_task)
 969              		.loc 1 348 0
 970 037c 05B0     		add	sp, sp, #20
 971              		.cfi_def_cfa_offset 12
 972              		@ sp needed
 973 037e 30BD     		pop	{r4, r5, pc}
 974              	.LVL81:
 975              	.L142:
 976              		.cfi_def_cfa_offset 0
 977              		.cfi_restore 4
 978              		.cfi_restore 5
 979              		.cfi_restore 14
 980 0380 7047     		bx	lr
 981              	.LVL82:
 982              	.L145:
 983              		.cfi_def_cfa_offset 32
 984              		.cfi_offset 4, -12
 985              		.cfi_offset 5, -8
 986              		.cfi_offset 14, -4
 987              	.LBB28:
 988              	.LBB29:
 311:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->active =  True;
 989              		.loc 1 311 0
 990 0382 FFF7FEFF 		bl	LLF_INT_DISABLE
 991              	.LVL83:
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 28


 312:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             AssignNull(&task->wait_time);
 992              		.loc 1 312 0
 993 0386 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 994 0388 2846     		mov	r0, r5
 995 038a 43F00103 		orr	r3, r3, #1
 996 038e 00F8163B 		strb	r3, [r0], #22
 313:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->current_prio = task->default_prio;
 997              		.loc 1 313 0
 998 0392 FFF7FEFF 		bl	AssignNull
 999              	.LVL84:
 314:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_SAVE_SYSTEM_STACK((uint8*)&OS_MAIN_STACK);
 1000              		.loc 1 314 0
 1001 0396 95F86D30 		ldrb	r3, [r5, #109]	@ zero_extendqisi2
 1002 039a 85F86C30 		strb	r3, [r5, #108]
 315:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_RESTORETASK_ENVIRONMENT(task);
 1003              		.loc 1 315 0
 1004 039e 1148     		ldr	r0, .L146
 1005 03a0 FFF7FEFF 		bl	OS_TASK_SAVE_SYSTEM_STACK
 1006              	.LVL85:
 316:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_GetCurrentTime(&time);
 1007              		.loc 1 316 0
 1008 03a4 2846     		mov	r0, r5
 1009 03a6 FFF7FEFF 		bl	OS_TASK_RESTORETASK_ENVIRONMENT
 1010              	.LVL86:
 317:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             Assign(&task->start_time, &time);
 1011              		.loc 1 317 0
 1012 03aa 6846     		mov	r0, sp
 1013 03ac FFF7FEFF 		bl	OS_GetCurrentTime
 1014              	.LVL87:
 318:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             EnableInterrupts();
 1015              		.loc 1 318 0
 1016 03b0 6946     		mov	r1, sp
 1017 03b2 05F15C00 		add	r0, r5, #92
 1018 03b6 FFF7FEFF 		bl	Assign
 1019              	.LVL88:
 319:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 1020              		.loc 1 319 0
 1021 03ba FFF7FEFF 		bl	LLF_INT_ENABLE
 1022              	.LVL89:
 322:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* change to user mode... */
 1023              		.loc 1 322 0
 1024 03be 2146     		mov	r1, r4
 1025 03c0 2846     		mov	r0, r5
 1026 03c2 FFF7FEFF 		bl	SET_RUNNING_TASK
 1027              	.LVL90:
 324:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             {
 1028              		.loc 1 324 0
 1029 03c6 95F8CC30 		ldrb	r3, [r5, #204]	@ zero_extendqisi2
 1030 03ca 0BB9     		cbnz	r3, .L131
 326:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             }
 1031              		.loc 1 326 0
 1032 03cc FFF7FEFF 		bl	LLF_CHANGE_TO_UNPRIVILIGED_THREAD_MODE
 1033              	.LVL91:
 1034              	.L131:
 330:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 1035              		.loc 1 330 0
 1036 03d0 6B6F     		ldr	r3, [r5, #116]
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 29


 1037 03d2 2846     		mov	r0, r5
 1038 03d4 9847     		blx	r3
 1039              	.LVL92:
 1040              	.LBE29:
 1041              	.LBE28:
 348:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_TerminateTask(task_t* task, scheduling_t* scheduling_task)
 1042              		.loc 1 348 0
 1043 03d6 05B0     		add	sp, sp, #20
 1044              		.cfi_remember_state
 1045              		.cfi_def_cfa_offset 12
 1046              		@ sp needed
 1047 03d8 30BD     		pop	{r4, r5, pc}
 1048              	.LVL93:
 1049              	.L129:
 1050              		.cfi_restore_state
 339:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 1051              		.loc 1 339 0
 1052 03da 0621     		movs	r1, #6
 1053              	.LVL94:
 1054 03dc 0220     		movs	r0, #2
 1055              	.LVL95:
 1056 03de FFF7FEFF 		bl	OS_SetSwBug
 1057              	.LVL96:
 348:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_TerminateTask(task_t* task, scheduling_t* scheduling_task)
 1058              		.loc 1 348 0
 1059 03e2 CBE7     		b	.L127
 1060              	.L147:
 1061              		.align	2
 1062              	.L146:
 1063 03e4 00000000 		.word	OS_MAIN_STACK
 1064              		.cfi_endproc
 1065              	.LFE6:
 1067              		.align	1
 1068              		.p2align 2,,3
 1069              		.global	OS_TerminateTask
 1070              		.syntax unified
 1071              		.thumb
 1072              		.thumb_func
 1073              		.fpu softvfp
 1075              	OS_TerminateTask:
 1076              	.LFB7:
 350:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* Preempt task
 1077              		.loc 1 350 0
 1078              		.cfi_startproc
 1079              		@ args = 0, pretend = 0, frame = 0
 1080              		@ frame_needed = 0, uses_anonymous_args = 0
 1081              	.LVL97:
 358:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 1082              		.loc 1 358 0
 1083 03e8 78B3     		cbz	r0, .L161
 358:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 1084              		.loc 1 358 0 is_stmt 0 discriminator 1
 1085 03ea 71B3     		cbz	r1, .L161
 360:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 1086              		.loc 1 360 0 is_stmt 1
 1087 03ec 826F     		ldr	r2, [r0, #120]
 350:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* Preempt task
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 30


 1088              		.loc 1 350 0
 1089 03ee 38B5     		push	{r3, r4, r5, lr}
 1090              		.cfi_def_cfa_offset 16
 1091              		.cfi_offset 3, -16
 1092              		.cfi_offset 4, -12
 1093              		.cfi_offset 5, -8
 1094              		.cfi_offset 14, -4
 1095 03f0 0446     		mov	r4, r0
 360:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 1096              		.loc 1 360 0
 1097 03f2 52B1     		cbz	r2, .L149
 1098 03f4 0D46     		mov	r5, r1
 362:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 1099              		.loc 1 362 0
 1100 03f6 0121     		movs	r1, #1
 1101              	.LVL98:
 1102 03f8 9047     		blx	r2
 1103              	.LVL99:
 1104 03fa 0128     		cmp	r0, #1
 1105 03fc 0BD0     		beq	.L164
 377:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 1106              		.loc 1 377 0
 1107 03fe 0821     		movs	r1, #8
 1108 0400 0120     		movs	r0, #1
 389:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_TaskDispatcher(void)
 1109              		.loc 1 389 0
 1110 0402 BDE83840 		pop	{r3, r4, r5, lr}
 1111              		.cfi_remember_state
 1112              		.cfi_restore 14
 1113              		.cfi_restore 5
 1114              		.cfi_restore 4
 1115              		.cfi_restore 3
 1116              		.cfi_def_cfa_offset 0
 1117              	.LVL100:
 377:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 1118              		.loc 1 377 0
 1119 0406 FFF7FEBF 		b	OS_SetSwBug
 1120              	.LVL101:
 1121              	.L149:
 1122              		.cfi_restore_state
 1123              	.LBB32:
 1124              	.LBB33:
 382:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 1125              		.loc 1 382 0
 1126 040a 0821     		movs	r1, #8
 1127              	.LVL102:
 1128 040c 0220     		movs	r0, #2
 1129              	.LVL103:
 1130              	.LBE33:
 1131              	.LBE32:
 389:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_TaskDispatcher(void)
 1132              		.loc 1 389 0
 1133 040e BDE83840 		pop	{r3, r4, r5, lr}
 1134              		.cfi_remember_state
 1135              		.cfi_restore 14
 1136              		.cfi_restore 5
 1137              		.cfi_restore 4
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 31


 1138              		.cfi_restore 3
 1139              		.cfi_def_cfa_offset 0
 1140              	.LVL104:
 1141              	.LBB36:
 1142              	.LBB34:
 382:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 1143              		.loc 1 382 0
 1144 0412 FFF7FEBF 		b	OS_SetSwBug
 1145              	.LVL105:
 1146              	.L164:
 1147              		.cfi_restore_state
 1148              	.LBE34:
 1149              	.LBE36:
 364:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TaskSaveTaskEnvironment(task);
 1150              		.loc 1 364 0
 1151 0416 FFF7FEFF 		bl	LLF_INT_DISABLE
 1152              	.LVL106:
 365:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_RESTORE_SYSTEM_STACK((uint8*)&OS_MAIN_STACK);
 1153              		.loc 1 365 0
 1154 041a 2046     		mov	r0, r4
 1155 041c FFF7FEFF 		bl	OS_TaskSaveTaskEnvironment
 1156              	.LVL107:
 366:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DeleteFromTaskQueue(task);
 1157              		.loc 1 366 0
 1158 0420 0C48     		ldr	r0, .L165
 1159 0422 FFF7FEFF 		bl	OS_TASK_RESTORE_SYSTEM_STACK
 1160              	.LVL108:
 367:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DeleteFromSchedulingQueue(scheduling_task);
 1161              		.loc 1 367 0
 1162 0426 2046     		mov	r0, r4
 1163 0428 FFF7FEFF 		bl	DeleteFromTaskQueue
 1164              	.LVL109:
 368:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 1165              		.loc 1 368 0
 1166 042c 2846     		mov	r0, r5
 1167 042e FFF7FEFF 		bl	DeleteFromSchedulingQueue
 1168              	.LVL110:
 370:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* reset the prio increase for waiting */
 1169              		.loc 1 370 0
 1170 0432 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 372:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             EnableInterrupts();
 1171              		.loc 1 372 0
 1172 0434 94F86D20 		ldrb	r2, [r4, #109]	@ zero_extendqisi2
 1173 0438 84F86C20 		strb	r2, [r4, #108]
 370:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* reset the prio increase for waiting */
 1174              		.loc 1 370 0
 1175 043c 6FF30003 		bfc	r3, #0, #1
 1176 0440 2370     		strb	r3, [r4]
 389:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_TaskDispatcher(void)
 1177              		.loc 1 389 0
 1178 0442 BDE83840 		pop	{r3, r4, r5, lr}
 1179              		.cfi_restore 14
 1180              		.cfi_restore 5
 1181              		.cfi_restore 4
 1182              		.cfi_restore 3
 1183              		.cfi_def_cfa_offset 0
 1184              	.LVL111:
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 32


 373:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 1185              		.loc 1 373 0
 1186 0446 FFF7FEBF 		b	LLF_INT_ENABLE
 1187              	.LVL112:
 1188              	.L161:
 1189              	.LBB37:
 1190              	.LBB35:
 382:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 1191              		.loc 1 382 0
 1192 044a 0821     		movs	r1, #8
 1193              	.LVL113:
 1194 044c 0220     		movs	r0, #2
 1195              	.LVL114:
 1196 044e FFF7FEBF 		b	OS_SetSwBug
 1197              	.LVL115:
 1198              	.L166:
 1199 0452 00BF     		.align	2
 1200              	.L165:
 1201 0454 00000000 		.word	OS_MAIN_STACK
 1202              	.LBE35:
 1203              	.LBE37:
 1204              		.cfi_endproc
 1205              	.LFE7:
 1207              		.align	1
 1208              		.p2align 2,,3
 1209              		.global	OS_TaskDispatcher
 1210              		.syntax unified
 1211              		.thumb
 1212              		.thumb_func
 1213              		.fpu softvfp
 1215              	OS_TaskDispatcher:
 1216              	.LFB8:
 391:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* called in an certain core context (Core_0/1/2/3)*/
 1217              		.loc 1 391 0
 1218              		.cfi_startproc
 1219              		@ args = 0, pretend = 0, frame = 48
 1220              		@ frame_needed = 0, uses_anonymous_args = 0
 1221              	.LVL116:
 1222 0458 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1223              		.cfi_def_cfa_offset 24
 1224              		.cfi_offset 4, -24
 1225              		.cfi_offset 5, -20
 1226              		.cfi_offset 6, -16
 1227              		.cfi_offset 7, -12
 1228              		.cfi_offset 8, -8
 1229              		.cfi_offset 14, -4
 1230 045c 8CB0     		sub	sp, sp, #48
 1231              		.cfi_def_cfa_offset 72
 405:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_task_ptr = GetRunningSchedulingQueueElementPtr();
 1232              		.loc 1 405 0
 1233 045e FFF7FEFF 		bl	GetRunningTask
 1234              	.LVL117:
 1235 0462 0446     		mov	r4, r0
 1236              	.LVL118:
 406:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* Preempt Task */
 1237              		.loc 1 406 0
 1238 0464 FFF7FEFF 		bl	GetRunningSchedulingQueueElementPtr
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 33


 1239              	.LVL119:
 408:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 1240              		.loc 1 408 0
 1241 0468 7CB1     		cbz	r4, .L168
 1242 046a 0546     		mov	r5, r0
 408:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 1243              		.loc 1 408 0 is_stmt 0 discriminator 1
 1244 046c 68B1     		cbz	r0, .L168
 1245              	.LVL120:
 1246              	.LBB45:
 1247              	.LBB46:
 360:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 1248              		.loc 1 360 0 is_stmt 1
 1249 046e A36F     		ldr	r3, [r4, #120]
 1250 0470 002B     		cmp	r3, #0
 1251 0472 00F0B180 		beq	.L169
 362:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 1252              		.loc 1 362 0
 1253 0476 0121     		movs	r1, #1
 1254 0478 2046     		mov	r0, r4
 1255              	.LVL121:
 1256 047a 9847     		blx	r3
 1257              	.LVL122:
 1258 047c 0128     		cmp	r0, #1
 1259 047e 00F09280 		beq	.L220
 377:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 1260              		.loc 1 377 0
 1261 0482 0821     		movs	r1, #8
 1262 0484 0120     		movs	r0, #1
 1263 0486 FFF7FEFF 		bl	OS_SetSwBug
 1264              	.LVL123:
 1265              	.L168:
 1266              	.LBE46:
 1267              	.LBE45:
 1268              	.LBB50:
 1269              	.LBB51:
 441:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_2(void* task_ptr)
 442:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 443:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_t* scheduling_task_ptr = 0;
 444:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter(task_ptr);
 445:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* worker task */
 446:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_task_ptr = GetRunningSchedulingQueueElementPtr();
 447:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* do some things */
 448:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    TASK1_CALL_NR++;
 449:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 450:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 451:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* end */
 452:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_TerminateTask(task_ptr,scheduling_task_ptr);
 453:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 454:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_3(void* task_ptr)
 455:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 456:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_t* scheduling_task_ptr = 0;
 457:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter(task_ptr);
 458:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* worker task */
 459:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_task_ptr = GetRunningSchedulingQueueElementPtr();
 460:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* do some things */
 461:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    TASK1_CALL_NR++;
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 34


 462:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 463:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 464:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* end */
 465:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_TerminateTask(task_ptr,scheduling_task_ptr);
 466:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 467:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_InitTasks(void)
 468:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 469:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_t* task_ptr = 0;
 470:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_GetCurrentTime(&LAST_CURRENT_TIME);
 471:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 472:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter (TASK_GROUP_1);
 473:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter (TASK_GROUP_2);
 474:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter (TASK_GROUP_3);
 475:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter (TASK_GROUP_4);
 476:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter (TASK_GROUP_5);
 477:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 478:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****     /*
 479:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    set task_state for all tasks to Task_unspecified
 480:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****     */
 481:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_InitTaskQueue();
 482:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 483:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* setup idle task */
 484:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_ptr = &TASK_0_VAR;
 485:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_InitTask(task_ptr,                          /* task */
 486:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_0,                           /* Task Function*/
 487:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 1,                                 /* Nr of allowed instances*/
 488:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 True,                              /* Idle Task */
 489:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_GROUP_1,                     /* Task Group */
 490:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 (unsigned_char_t*)&TASK_STACK[0],  /* Task_stack */
 491:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 200,                                /* Stack Size */
 492:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 ePriviligeMode_unpriviliged_thread_mode, /* Unpriviliged Thread Mode */
 493:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 Core0,                            /* Cortex M4 has only 1 core */
 494:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 0                                   /* default prio */
 495:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                );
 496:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    AddToSchedulingQueue(task_ptr);
 497:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SaveTaskPtr(task_ptr, Task_0_ptr);
 498:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 499:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* setup worker task */
 500:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_ptr = &TASK_1_VAR;
 501:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_InitTask(task_ptr,      /* task */
 502:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_1,       /* Task Function*/
 503:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 1,             /* Nr of allowed instances*/
 504:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 False,          /* Idle Task */
 505:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_GROUP_1, /* Task Group */
 506:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 (unsigned_char_t*)&TASK_STACK[1],/* Task_stack */
 507:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 200,            /* Stack Size */
 508:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 ePriviligeMode_unpriviliged_thread_mode, /* Unpriviliged Thread Mode */
 509:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 Core0,
 510:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 1                                   /* default prio */
 511:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                );
 512:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    AddToSchedulingQueue(task_ptr);
 513:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SaveTaskPtr(task_ptr, Task_1_ptr);
 514:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 515:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* setup worker task */
 516:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_ptr = &TASK_2_VAR;
 517:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_InitTask(task_ptr,      /* task */
 518:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_2,       /* Task Function*/
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 35


 519:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 1,             /* Nr of allowed instances*/
 520:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 False,          /* Idle Task */
 521:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_GROUP_2, /* Task Group */
 522:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 (unsigned_char_t*)&TASK_STACK[2],/* Task_stack */
 523:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 200,            /* Stack Size */
 524:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 ePriviligeMode_unpriviliged_thread_mode, /* Unpriviliged Thread Mode */
 525:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 Core0,
 526:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 2                                   /* default prio */
 527:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                );
 528:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    AddToSchedulingQueue(task_ptr);
 529:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SaveTaskPtr(task_ptr, Task_2_ptr);
 530:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 531:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* setup worker task */
 532:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_ptr = &TASK_3_VAR;
 533:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_InitTask(task_ptr,      /* task */
 534:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_3,       /* Task Function*/
 535:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 1,             /* Nr of allowed instances*/
 536:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 False,          /* Idle Task */
 537:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_GROUP_3, /* Task Group */
 538:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 (unsigned_char_t*)&TASK_STACK[3],/* Task_stack */
 539:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 200,           /* Stack Size */
 540:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 ePriviligeMode_unpriviliged_thread_mode, /* Unpriviliged Thread Mode */
 541:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 Core0,
 542:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 3                                   /* default prio */
 543:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                );
 544:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    AddToSchedulingQueue(task_ptr);
 545:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SaveTaskPtr(task_ptr, Task_3_ptr);
 546:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 547:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 548:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 549:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local scheduling_t* OS_TaskScheduler(void)
 550:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 551:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 552:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_t*    scheduling_queue_member;
 553:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    unsigned_char_t element_nr;
 554:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 555:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    unsigned_char_t Winner_prio = 0;
 556:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_t*         task = 0;
 557:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_t*         Winner_task = 0;
 558:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_t*   Winner_scheduling_queue_member = 0;
 559:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    timebig_t       delta_time;
 560:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    
 561:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    timebig_t time;
 562:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    
 563:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_GetCurrentTime(&time);
 1270              		.loc 1 563 0
 1271 048a 04A8     		add	r0, sp, #16
 1272 048c FFF7FEFF 		bl	OS_GetCurrentTime
 1273              	.LVL124:
 564:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 565:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    IntSub(&delta_time, &time, &LAST_CURRENT_TIME);
 1274              		.loc 1 565 0
 1275 0490 04A9     		add	r1, sp, #16
 1276 0492 6846     		mov	r0, sp
 1277 0494 534A     		ldr	r2, .L225
 1278 0496 FFF7FEFF 		bl	IntSub
 1279              	.LVL125:
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 36


 566:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    
 567:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    Assign(&LAST_CURRENT_TIME,&time);
 1280              		.loc 1 567 0
 1281 049a 04A9     		add	r1, sp, #16
 1282 049c 5148     		ldr	r0, .L225
 1283 049e FFF7FEFF 		bl	Assign
 1284              	.LVL126:
 1285 04a2 0025     		movs	r5, #0
 1286 04a4 02E0     		b	.L179
 1287              	.LVL127:
 1288              	.L172:
 1289 04a6 0135     		adds	r5, r5, #1
 1290              	.LVL128:
 568:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 569:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter(Winner_task);
 570:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*
 571:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x const for single task: task->default_prio // low = 0,.....high=100
 572:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x var   for single task: task->current_prio // see prio_std
 573:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x var   for single task: task->wait_time    //
 574:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x var   for single task: task->exe_time
 575:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x const for single task: task->TimeToPrioInc
 576:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x const for single task: task->max_allowed_wait_time
 577:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x const for single task: task->min_allowed_wait_time
 578:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x const for single task: task->overwaittime_per_prio_inc_step //e.g. 100*MinTimeSlice_us
 579:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x const for single task: task->task_group  //to allow processor access control by groups (e.g. u
 580:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x const for single task: task->WaitActUntil
 581:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    (task_group is designed to allow proccessor access control between e.g. Customer Software Task a
 582:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    */
 583:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    For_all_tasks_in_queue(element_nr)
 1291              		.loc 1 583 0
 1292 04a8 0A2D     		cmp	r5, #10
 1293 04aa 42D0     		beq	.L221
 1294              	.LVL129:
 1295              	.L179:
 584:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 585:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       scheduling_queue_member = GetFromSchedulingQueue(element_nr);
 1296              		.loc 1 585 0
 1297 04ac E8B2     		uxtb	r0, r5
 1298 04ae FFF7FEFF 		bl	GetFromSchedulingQueue
 1299              	.LVL130:
 586:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       /*task will have a pointer on the task_obj, and might be equal to "(task_t*) 0" */
 587:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       task             = GetFromTaskQueue(scheduling_queue_member);
 1300              		.loc 1 587 0
 1301 04b2 FFF7FEFF 		bl	GetFromTaskQueue
 1302              	.LVL131:
 588:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       /* increase prio: high numbers->high prio */
 589:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       if((task != 0)&&(task->task_queued != False))
 1303              		.loc 1 589 0
 1304 04b6 0446     		mov	r4, r0
 1305 04b8 0028     		cmp	r0, #0
 1306 04ba F4D0     		beq	.L172
 1307 04bc 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1308 04be 9A07     		lsls	r2, r3, #30
 1309 04c0 F1D5     		bpl	.L172
 590:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 591:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(IsGreaterOrEqual(&task->wait_time, &task->TimeToPrioInc))
 1310              		.loc 1 591 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 37


 1311 04c2 00F11606 		add	r6, r0, #22
 1312 04c6 3046     		mov	r0, r6
 1313              	.LVL132:
 1314 04c8 04F12601 		add	r1, r4, #38
 1315 04cc FFF7FEFF 		bl	IsGreaterOrEqual
 1316              	.LVL133:
 1317 04d0 28B1     		cbz	r0, .L174
 592:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 593:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->current_prio = task->current_prio + task->overwaittime_per_prio_inc_step;
 1318              		.loc 1 593 0
 1319 04d2 94F86C30 		ldrb	r3, [r4, #108]	@ zero_extendqisi2
 1320 04d6 A26B     		ldr	r2, [r4, #56]
 1321 04d8 1344     		add	r3, r3, r2
 1322 04da 84F86C30 		strb	r3, [r4, #108]
 1323              	.L174:
 594:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 595:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* in case wait condition not yet fulfilled, set prio to 0 */
 596:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(IsGreater(&task->WaitActUntil, &time))
 1324              		.loc 1 596 0
 1325 04de 04A9     		add	r1, sp, #16
 1326 04e0 A01D     		adds	r0, r4, #6
 1327 04e2 FFF7FEFF 		bl	IsGreater
 1328              	.LVL134:
 1329 04e6 10B1     		cbz	r0, .L175
 597:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 598:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->current_prio = 0;
 1330              		.loc 1 598 0
 1331 04e8 0023     		movs	r3, #0
 1332 04ea 84F86C30 		strb	r3, [r4, #108]
 1333              	.L175:
 599:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 600:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(IsGreater(&task->wait_time,&task->max_allowed_wait_time))
 1334              		.loc 1 600 0
 1335 04ee 3046     		mov	r0, r6
 1336 04f0 04F13C01 		add	r1, r4, #60
 1337 04f4 FFF7FEFF 		bl	IsGreater
 1338              	.LVL135:
 1339 04f8 0028     		cmp	r0, #0
 1340 04fa 47D1     		bne	.L222
 601:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 602:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* set bug */
 603:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_SetSwBug(os_bug_task_max_wait_time_reached, Func_TaskScheduler);
 604:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 605:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* not active TASK_RUN_QUEUE elements have no valid task_group!!*/
 606:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->task_group!=0u)
 1341              		.loc 1 606 0
 1342 04fc D4F88000 		ldr	r0, [r4, #128]
 1343 0500 0028     		cmp	r0, #0
 1344 0502 4BD0     		beq	.L177
 1345              	.L224:
 607:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 608:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* usage the exe time for scheduling strategy */
 609:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             if(IsGreater(&task->task_group->exe_time, &task->task_group->fair_exe_time) != False)
 1346              		.loc 1 609 0
 1347 0504 00F11001 		add	r1, r0, #16
 1348 0508 FFF7FEFF 		bl	IsGreater
 1349              	.LVL136:
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 38


 1350 050c 0028     		cmp	r0, #0
 1351 050e CAD0     		beq	.L172
 1352              	.LBB52:
 610:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             {
 611:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                timebig_t tTime;
 612:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                AssignUint32(&tTime, Task_min_time);
 1353              		.loc 1 612 0
 1354 0510 0121     		movs	r1, #1
 1355 0512 08A8     		add	r0, sp, #32
 1356 0514 FFF7FEFF 		bl	AssignUint32
 1357              	.LVL137:
 613:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                if(IsGreaterOrEqual(&task->exe_time, &tTime))/* guarantee min time */
 1358              		.loc 1 613 0
 1359 0518 08A9     		add	r1, sp, #32
 1360 051a 04F14C00 		add	r0, r4, #76
 1361 051e FFF7FEFF 		bl	IsGreaterOrEqual
 1362              	.LVL138:
 1363 0522 0028     		cmp	r0, #0
 1364 0524 BFD0     		beq	.L172
 1365 0526 0135     		adds	r5, r5, #1
 1366              	.LVL139:
 614:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                {
 615:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                   task->current_prio = 0;
 1367              		.loc 1 615 0
 1368 0528 0023     		movs	r3, #0
 1369              	.LBE52:
 583:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 1370              		.loc 1 583 0
 1371 052a 0A2D     		cmp	r5, #10
 1372              	.LBB53:
 1373              		.loc 1 615 0
 1374 052c 84F86C30 		strb	r3, [r4, #108]
 1375              	.LBE53:
 583:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 1376              		.loc 1 583 0
 1377 0530 BCD1     		bne	.L179
 1378              	.L221:
 1379 0532 0024     		movs	r4, #0
 1380              	.LVL140:
 558:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    timebig_t       delta_time;
 1381              		.loc 1 558 0
 1382 0534 A046     		mov	r8, r4
 555:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_t*         task = 0;
 1383              		.loc 1 555 0
 1384 0536 2746     		mov	r7, r4
 1385 0538 07E0     		b	.L182
 1386              	.LVL141:
 1387              	.L181:
 616:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                }
 617:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             }
 618:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 619:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          else
 620:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 621:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_SetSwBug(os_bug_null_pointer, Func_TaskScheduler);
 622:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 623:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 624:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       /* do not set bug, because task =0 is used for empty queue elements
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 39


 625:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       else
 626:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 627:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****           OS_SetSwBug(os_bug_null_pointer, Func_TaskScheduler);
 628:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 629:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       */
 630:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 631:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    For_all_tasks_in_queue(element_nr)
 632:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 633:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       scheduling_queue_member = GetFromSchedulingQueue(element_nr);
 634:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       task             = GetFromTaskQueue(scheduling_queue_member);
 635:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       if(task != 0)
 636:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 637:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /*update wait time */
 638:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->IdleTask != True)
 639:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 640:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             IntAdd(&task->wait_time, &task->wait_time, &delta_time);
 641:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 642:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* search for task with highest prio and assign it to Winner_task */
 643:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->current_prio > Winner_prio)
 1388              		.loc 1 643 0
 1389 053a 95F86C30 		ldrb	r3, [r5, #108]	@ zero_extendqisi2
 1390 053e BB42     		cmp	r3, r7
 644:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 645:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             Winner_prio = task->current_prio;
 646:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             Winner_task = task;
 647:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             Winner_scheduling_queue_member = scheduling_queue_member;
 1391              		.loc 1 647 0
 1392 0540 84BF     		itt	hi
 1393 0542 B046     		movhi	r8, r6
 643:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 1394              		.loc 1 643 0
 1395 0544 1F46     		movhi	r7, r3
 1396              	.LVL142:
 1397              	.L180:
 631:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 1398              		.loc 1 631 0
 1399 0546 0A2C     		cmp	r4, #10
 1400 0548 13D0     		beq	.L223
 1401              	.LVL143:
 1402              	.L182:
 633:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       task             = GetFromTaskQueue(scheduling_queue_member);
 1403              		.loc 1 633 0
 1404 054a E0B2     		uxtb	r0, r4
 1405 054c FFF7FEFF 		bl	GetFromSchedulingQueue
 1406              	.LVL144:
 1407 0550 0646     		mov	r6, r0
 1408              	.LVL145:
 634:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       if(task != 0)
 1409              		.loc 1 634 0
 1410 0552 FFF7FEFF 		bl	GetFromTaskQueue
 1411              	.LVL146:
 1412 0556 0134     		adds	r4, r4, #1
 1413              	.LVL147:
 635:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 1414              		.loc 1 635 0
 1415 0558 0546     		mov	r5, r0
 1416 055a 0028     		cmp	r0, #0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 40


 1417 055c F3D0     		beq	.L180
 638:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 1418              		.loc 1 638 0
 1419 055e 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1420 0560 5B07     		lsls	r3, r3, #29
 1421 0562 EAD4     		bmi	.L181
 640:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 1422              		.loc 1 640 0
 1423 0564 00F11601 		add	r1, r0, #22
 1424 0568 0846     		mov	r0, r1
 1425              	.LVL148:
 1426 056a 6A46     		mov	r2, sp
 1427 056c FFF7FEFF 		bl	IntAdd
 1428              	.LVL149:
 1429 0570 E3E7     		b	.L181
 1430              	.L223:
 1431              	.LVL150:
 1432              	.LBE51:
 1433              	.LBE50:
 414:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 1434              		.loc 1 414 0
 1435 0572 B8F1000F 		cmp	r8, #0
 1436 0576 06D0     		beq	.L167
 416:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 1437              		.loc 1 416 0
 1438 0578 4046     		mov	r0, r8
 1439 057a FFF7FEFF 		bl	GetFromTaskQueue
 1440              	.LVL151:
 418:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 1441              		.loc 1 418 0
 1442 057e 10B1     		cbz	r0, .L167
 420:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 1443              		.loc 1 420 0
 1444 0580 4146     		mov	r1, r8
 1445 0582 FFF7FEFF 		bl	OS_StartTask
 1446              	.LVL152:
 1447              	.L167:
 422:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_0(void* task_ptr)
 1448              		.loc 1 422 0
 1449 0586 0CB0     		add	sp, sp, #48
 1450              		.cfi_remember_state
 1451              		.cfi_def_cfa_offset 24
 1452              		@ sp needed
 1453 0588 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1454              	.LVL153:
 1455              	.L222:
 1456              		.cfi_restore_state
 1457              	.LBB55:
 1458              	.LBB54:
 603:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 1459              		.loc 1 603 0
 1460 058c 0320     		movs	r0, #3
 1461 058e 0921     		movs	r1, #9
 1462 0590 FFF7FEFF 		bl	OS_SetSwBug
 1463              	.LVL154:
 606:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 1464              		.loc 1 606 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 41


 1465 0594 D4F88000 		ldr	r0, [r4, #128]
 1466 0598 0028     		cmp	r0, #0
 1467 059a B3D1     		bne	.L224
 1468              	.L177:
 621:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 1469              		.loc 1 621 0
 1470 059c 0921     		movs	r1, #9
 1471 059e 0220     		movs	r0, #2
 1472 05a0 FFF7FEFF 		bl	OS_SetSwBug
 1473              	.LVL155:
 1474 05a4 7FE7     		b	.L172
 1475              	.LVL156:
 1476              	.L220:
 1477              	.LBE54:
 1478              	.LBE55:
 1479              	.LBB56:
 1480              	.LBB49:
 364:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TaskSaveTaskEnvironment(task);
 1481              		.loc 1 364 0
 1482 05a6 FFF7FEFF 		bl	LLF_INT_DISABLE
 1483              	.LVL157:
 365:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_RESTORE_SYSTEM_STACK((uint8*)&OS_MAIN_STACK);
 1484              		.loc 1 365 0
 1485 05aa 2046     		mov	r0, r4
 1486 05ac FFF7FEFF 		bl	OS_TaskSaveTaskEnvironment
 1487              	.LVL158:
 366:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DeleteFromTaskQueue(task);
 1488              		.loc 1 366 0
 1489 05b0 0D48     		ldr	r0, .L225+4
 1490 05b2 FFF7FEFF 		bl	OS_TASK_RESTORE_SYSTEM_STACK
 1491              	.LVL159:
 367:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DeleteFromSchedulingQueue(scheduling_task);
 1492              		.loc 1 367 0
 1493 05b6 2046     		mov	r0, r4
 1494 05b8 FFF7FEFF 		bl	DeleteFromTaskQueue
 1495              	.LVL160:
 368:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 1496              		.loc 1 368 0
 1497 05bc 2846     		mov	r0, r5
 1498 05be FFF7FEFF 		bl	DeleteFromSchedulingQueue
 1499              	.LVL161:
 370:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* reset the prio increase for waiting */
 1500              		.loc 1 370 0
 1501 05c2 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 372:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             EnableInterrupts();
 1502              		.loc 1 372 0
 1503 05c4 94F86D20 		ldrb	r2, [r4, #109]	@ zero_extendqisi2
 1504 05c8 84F86C20 		strb	r2, [r4, #108]
 370:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* reset the prio increase for waiting */
 1505              		.loc 1 370 0
 1506 05cc 6FF30003 		bfc	r3, #0, #1
 1507 05d0 2370     		strb	r3, [r4]
 373:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 1508              		.loc 1 373 0
 1509 05d2 FFF7FEFF 		bl	LLF_INT_ENABLE
 1510              	.LVL162:
 1511 05d6 58E7     		b	.L168
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 42


 1512              	.LVL163:
 1513              	.L169:
 1514              	.LBB47:
 1515              	.LBB48:
 382:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 1516              		.loc 1 382 0
 1517 05d8 0821     		movs	r1, #8
 1518 05da 0220     		movs	r0, #2
 1519              	.LVL164:
 1520 05dc FFF7FEFF 		bl	OS_SetSwBug
 1521              	.LVL165:
 1522 05e0 53E7     		b	.L168
 1523              	.L226:
 1524 05e2 00BF     		.align	2
 1525              	.L225:
 1526 05e4 00000000 		.word	LAST_CURRENT_TIME
 1527 05e8 00000000 		.word	OS_MAIN_STACK
 1528              	.LBE48:
 1529              	.LBE47:
 1530              	.LBE49:
 1531              	.LBE56:
 1532              		.cfi_endproc
 1533              	.LFE8:
 1535              		.align	1
 1536              		.p2align 2,,3
 1537              		.global	OS_InitTasks
 1538              		.syntax unified
 1539              		.thumb
 1540              		.thumb_func
 1541              		.fpu softvfp
 1543              	OS_InitTasks:
 1544              	.LFB13:
 468:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_t* task_ptr = 0;
 1545              		.loc 1 468 0
 1546              		.cfi_startproc
 1547              		@ args = 0, pretend = 0, frame = 0
 1548              		@ frame_needed = 0, uses_anonymous_args = 0
 1549              	.LVL166:
 1550 05ec 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1551              		.cfi_def_cfa_offset 28
 1552              		.cfi_offset 4, -28
 1553              		.cfi_offset 5, -24
 1554              		.cfi_offset 6, -20
 1555              		.cfi_offset 7, -16
 1556              		.cfi_offset 8, -12
 1557              		.cfi_offset 9, -8
 1558              		.cfi_offset 14, -4
 470:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 1559              		.loc 1 470 0
 1560 05f0 2F48     		ldr	r0, .L229
 485:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_0,                           /* Task Function*/
 1561              		.loc 1 485 0
 1562 05f2 304E     		ldr	r6, .L229+4
 1563 05f4 304D     		ldr	r5, .L229+8
 1564 05f6 DFF8E080 		ldr	r8, .L229+40
 501:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_1,       /* Task Function*/
 1565              		.loc 1 501 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 43


 1566 05fa DFF8E090 		ldr	r9, .L229+44
 468:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_t* task_ptr = 0;
 1567              		.loc 1 468 0
 1568 05fe 87B0     		sub	sp, sp, #28
 1569              		.cfi_def_cfa_offset 56
 485:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_0,                           /* Task Function*/
 1570              		.loc 1 485 0
 1571 0600 0024     		movs	r4, #0
 470:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 1572              		.loc 1 470 0
 1573 0602 FFF7FEFF 		bl	OS_GetCurrentTime
 1574              	.LVL167:
 485:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_0,                           /* Task Function*/
 1575              		.loc 1 485 0
 1576 0606 C827     		movs	r7, #200
 481:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 1577              		.loc 1 481 0
 1578 0608 FFF7FEFF 		bl	OS_InitTaskQueue
 1579              	.LVL168:
 485:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_0,                           /* Task Function*/
 1580              		.loc 1 485 0
 1581 060c 0123     		movs	r3, #1
 1582 060e CDE90085 		strd	r8, r5, [sp]
 1583 0612 1A46     		mov	r2, r3
 1584 0614 3046     		mov	r0, r6
 1585 0616 2949     		ldr	r1, .L229+12
 1586 0618 CDE90444 		strd	r4, r4, [sp, #16]
 1587 061c CDE90274 		strd	r7, r4, [sp, #8]
 1588 0620 FFF7FEFF 		bl	OS_InitTask
 1589              	.LVL169:
 496:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SaveTaskPtr(task_ptr, Task_0_ptr);
 1590              		.loc 1 496 0
 1591 0624 3046     		mov	r0, r6
 1592 0626 FFF7FEFF 		bl	AddToSchedulingQueue
 1593              	.LVL170:
 501:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_1,       /* Task Function*/
 1594              		.loc 1 501 0
 1595 062a 0126     		movs	r6, #1
 1596 062c 05F5FA63 		add	r3, r5, #2000
 1597 0630 CDE90083 		strd	r8, r3, [sp]
 1598 0634 3246     		mov	r2, r6
 1599 0636 2346     		mov	r3, r4
 1600 0638 4846     		mov	r0, r9
 1601 063a 2149     		ldr	r1, .L229+16
 1602 063c 0297     		str	r7, [sp, #8]
 1603 063e CDE90344 		strd	r4, r4, [sp, #12]
 1604 0642 0596     		str	r6, [sp, #20]
 1605 0644 FFF7FEFF 		bl	OS_InitTask
 1606              	.LVL171:
 517:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_2,       /* Task Function*/
 1607              		.loc 1 517 0
 1608 0648 DFF89480 		ldr	r8, .L229+48
 512:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SaveTaskPtr(task_ptr, Task_1_ptr);
 1609              		.loc 1 512 0
 1610 064c 4846     		mov	r0, r9
 1611 064e FFF7FEFF 		bl	AddToSchedulingQueue
 1612              	.LVL172:
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 44


 517:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_2,       /* Task Function*/
 1613              		.loc 1 517 0
 1614 0652 05F57A65 		add	r5, r5, #4000
 1615 0656 4FF0020C 		mov	ip, #2
 1616 065a 1A49     		ldr	r1, .L229+20
 1617 065c CDF814C0 		str	ip, [sp, #20]
 1618 0660 2346     		mov	r3, r4
 1619 0662 3246     		mov	r2, r6
 1620 0664 0195     		str	r5, [sp, #4]
 1621 0666 4046     		mov	r0, r8
 1622 0668 0091     		str	r1, [sp]
 1623 066a CDE90344 		strd	r4, r4, [sp, #12]
 1624 066e 1649     		ldr	r1, .L229+24
 1625 0670 0297     		str	r7, [sp, #8]
 1626 0672 FFF7FEFF 		bl	OS_InitTask
 1627              	.LVL173:
 528:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SaveTaskPtr(task_ptr, Task_2_ptr);
 1628              		.loc 1 528 0
 1629 0676 4046     		mov	r0, r8
 1630 0678 FFF7FEFF 		bl	AddToSchedulingQueue
 1631              	.LVL174:
 533:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_3,       /* Task Function*/
 1632              		.loc 1 533 0
 1633 067c 134D     		ldr	r5, .L229+28
 1634 067e DFF864C0 		ldr	ip, .L229+52
 1635 0682 1349     		ldr	r1, .L229+32
 1636 0684 0297     		str	r7, [sp, #8]
 1637 0686 4FF0030E 		mov	lr, #3
 1638 068a 2846     		mov	r0, r5
 1639 068c CDE9001C 		strd	r1, ip, [sp]
 1640 0690 CDE90344 		strd	r4, r4, [sp, #12]
 1641 0694 2346     		mov	r3, r4
 1642 0696 3246     		mov	r2, r6
 1643 0698 CDF814E0 		str	lr, [sp, #20]
 1644 069c 0D49     		ldr	r1, .L229+36
 1645 069e FFF7FEFF 		bl	OS_InitTask
 1646              	.LVL175:
 544:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SaveTaskPtr(task_ptr, Task_3_ptr);
 1647              		.loc 1 544 0
 1648 06a2 2846     		mov	r0, r5
 546:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 1649              		.loc 1 546 0
 1650 06a4 07B0     		add	sp, sp, #28
 1651              		.cfi_def_cfa_offset 28
 1652              		@ sp needed
 1653 06a6 BDE8F043 		pop	{r4, r5, r6, r7, r8, r9, lr}
 1654              		.cfi_restore 14
 1655              		.cfi_restore 9
 1656              		.cfi_restore 8
 1657              		.cfi_restore 7
 1658              		.cfi_restore 6
 1659              		.cfi_restore 5
 1660              		.cfi_restore 4
 1661              		.cfi_def_cfa_offset 0
 544:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SaveTaskPtr(task_ptr, Task_3_ptr);
 1662              		.loc 1 544 0
 1663 06aa FFF7FEBF 		b	AddToSchedulingQueue
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 45


 1664              	.LVL176:
 1665              	.L230:
 1666 06ae 00BF     		.align	2
 1667              	.L229:
 1668 06b0 00000000 		.word	LAST_CURRENT_TIME
 1669 06b4 00000000 		.word	TASK_0_VAR
 1670 06b8 00000000 		.word	TASK_STACK
 1671 06bc 00000000 		.word	TASK_0
 1672 06c0 00000000 		.word	TASK_1
 1673 06c4 00000000 		.word	TASK_GROUP_2
 1674 06c8 00000000 		.word	TASK_2
 1675 06cc 00000000 		.word	TASK_3_VAR
 1676 06d0 00000000 		.word	TASK_GROUP_3
 1677 06d4 00000000 		.word	TASK_3
 1678 06d8 00000000 		.word	TASK_GROUP_1
 1679 06dc 00000000 		.word	TASK_1_VAR
 1680 06e0 00000000 		.word	TASK_2_VAR
 1681 06e4 70170000 		.word	TASK_STACK+6000
 1682              		.cfi_endproc
 1683              	.LFE13:
 1685              	.Letext0:
 1686              		.file 2 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_base_types.h"
 1687              		.file 3 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_common.h"
 1688              		.file 4 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_drivers\\lld_core.h"
 1689              		.file 5 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_task_common.h"
 1690              		.file 6 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_ram.h"
 1691              		.file 7 "E:\\NeuOrga\\Programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_task_queue.h"
 1692              		.file 8 "E:\\NeuOrga\\Programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_task_scheduler.h"
 1693              		.file 9 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_drivers\\lld_global.h"
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 46


DEFINED SYMBOLS
                            *ABS*:00000000 os_task_scheduler.c
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:15     .text:00000000 $t
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:22     .text:00000000 TASK_0
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:44     .text:00000004 TASK_2
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:119    .text:00000074 $d
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:124    .text:0000007c $t
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:131    .text:0000007c TASK_3
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:206    .text:000000ec $d
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:211    .text:000000f4 $t
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:218    .text:000000f4 TASK_1
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:356    .text:00000164 $d
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:363    .text:0000016c $t
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:371    .text:0000016c OS_ActivateDispatcher
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:418    .text:00000194 $d
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:424    .text:000001a0 $t
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:432    .text:000001a0 OS_SleepTask
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:573    .text:00000224 $d
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:577    .text:00000228 $t
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:585    .text:00000228 task_state_request
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:608    .text:0000023a $d
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:612    .text:0000023e $t
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:707    .text:000002a0 $d
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:713    .text:000002ac $t
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:721    .text:000002ac OS_CreateTask
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:790    .text:000002e0 OS_ActivateTask
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:926    .text:00000354 OS_StartTask
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:1063   .text:000003e4 $d
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:1067   .text:000003e8 $t
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:1075   .text:000003e8 OS_TerminateTask
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:1201   .text:00000454 $d
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:1207   .text:00000458 $t
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:1215   .text:00000458 OS_TaskDispatcher
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:1526   .text:000005e4 $d
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:1535   .text:000005ec $t
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:1543   .text:000005ec OS_InitTasks
C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s:1668   .text:000006b0 $d
                           .group:00000000 wm4.0.d67ddeb5d3f434a0386bf4e126239e16
                           .group:00000000 wm4.os_base_types.h.2.f3c0267f175f5cbacca6b71710665a02
                           .group:00000000 wm4.os_common.h.2.7d3083dfb0b17ee9cbe20f6fe4481cd9
                           .group:00000000 wm4.os_task_config.h.2.a73335dbec9f276504b3b94e79d1d898
                           .group:00000000 wm4.os_task_common.h.97.d031f1e6a25f19c1fb076c4a4d7927a1
                           .group:00000000 wm4.os_stack.h.2.f736ad9941e78e3f128684d765efeb27
                           .group:00000000 wm4.os_heap.h.2.89074aae455d2462b5952479e3530dd1
                           .group:00000000 wm4.os_main.h.2.1f66ae3841c27bd36097fa1d2e1fe6a7
                           .group:00000000 wm4.os_task_scheduler.h.2.125feba674fa85672711aed1ca8ea199
                           .group:00000000 wm4.os_task_queue.h.2.9428c7964838a07bb4b1cac6c50ee9b2

UNDEFINED SYMBOLS
LLF_WAIT_FOR_INTERRUPT
GetRunningSchedulingQueueElementPtr
OS_SetSwBug
LLF_INT_DISABLE
OS_TaskSaveTaskEnvironment
OS_TASK_RESTORE_SYSTEM_STACK
DeleteFromTaskQueue
DeleteFromSchedulingQueue
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchb0Vzw.s 			page 47


LLF_INT_ENABLE
TASK1_CALL_NR
OS_MAIN_STACK
OS_GetCurrentTime
IntAdd
TASK_TRANSITION_REJECTED_TASK_ADDR
TASK_TRANSITION_CURRENT_STATE
TASK_TRANSITION_REJECTED_STATE
AddToTaskQueue
AddToSchedulingQueue
AddToIdleTaskQueue
AssignNull
OS_TASK_SAVE_SYSTEM_STACK
OS_TASK_RESTORETASK_ENVIRONMENT
Assign
SET_RUNNING_TASK
LLF_CHANGE_TO_UNPRIVILIGED_THREAD_MODE
GetRunningTask
IntSub
GetFromSchedulingQueue
GetFromTaskQueue
IsGreaterOrEqual
IsGreater
AssignUint32
LAST_CURRENT_TIME
OS_InitTaskQueue
OS_InitTask
TASK_0_VAR
TASK_STACK
TASK_GROUP_2
TASK_3_VAR
TASK_GROUP_3
TASK_GROUP_1
TASK_1_VAR
TASK_2_VAR
