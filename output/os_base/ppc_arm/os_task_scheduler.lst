ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"os_task_scheduler.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.p2align 2,,3
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	TASK_0:
  23              	.LFB9:
  24              		.file 1 "E:\\NeuOrga\\Programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_task_scheduler.c"
   1:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** #include "os_firstinc.h"
   2:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** #include "os_common.h"
   3:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** #include "os_task_common.h"
   4:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** #include "os_task_scheduler.h"
   5:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** #include "os_task_queue.h"
   6:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** #include "os_stack.h"
   7:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
   8:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** /*
   9:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 1. running     --(terminate)--> suspend : delete scheduling element
  10:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 2. running     --(preempt  )--> ready
  11:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 3. suspend     --(activate )--> ready   : create scheduling element
  12:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 4. ready       --(start    )--> running : use scheduling element
  13:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 5. unspecified --(create   )--> suspend
  14:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** */
  15:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  16:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  17:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_0(void* task_ptr);
  18:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_1(void* task_ptr);
  19:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_2(void* task_ptr);
  20:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local task_t** OS_TaskScheduler();
  21:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void OS_PreemptTask(task_t* task, scheduling_t* scheduling_task);
  22:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_ActivateDispatcher(void)
  23:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
  24:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  25:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* configure the TCMP */
  26:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*
  27:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    Dispatcher function for Core 0:
  28:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    Write Adresse into the config register (interrupts are requested by SWI/SVC???)
  29:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    */
  30:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #define SYSTICK_CTRL_STAT_REG ((uint32*)0xE000E010)
  31:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #define SYSTICK_RLD_VAL_REG   ((uint32*)0xE000E014)
  32:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #define SYSTICK_CURRENT_VAL_REG ((uint32*)0xE000E018)
  33:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #define SYSTICK_STAT_REG_TICKINT ((uint32)0x00000002)
  34:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #define SYSTICK_STAT_REG_ENABLE  ((uint32)0x00000001)
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 2


  35:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #define LOOPTIME_IN_USEC ((uint32)10000u)
  36:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*
  37:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    CLOCK = HCLK / 8
  38:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    vermutlich: CLOCK = 150Mhz / 8 = 18,75 Mhz
  39:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    */
  40:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #if(CFG_PROCESSOR == cMCU_CORTEX_M4)
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_RLD_VAL_REG = (*SYSTICK_RLD_VAL_REG & 0xFF000000 )| (((uint32)MCU_CLOCK_IN_HZ / ((uint3
  42:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CURRENT_VAL_REG = ((uint32)0x00000000);
  43:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CTRL_STAT_REG = *SYSTICK_CTRL_STAT_REG | SYSTICK_STAT_REG_TICKINT | SYSTICK_STAT_REG_EN
  44:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #endif
  45:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
  46:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  47:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  48:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_SleepTask(task_t* task, task_time_t usec, scheduling_t* scheduling_task_ptr)
  49:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
  50:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* sleep Task shall do a preempt task with a defined minimum wait time, the actual wait time is 
  51:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task->WaitActUntil = OS_GetCurrentTime() + usec;
  52:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_PreemptTask(task,scheduling_task_ptr);
  53:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
  54:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  55:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** unsigned_char_t task_state_request(void* temp_task, task_state_t requested_state)
  56:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
  57:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    unsigned_char_t RequestState = Rejected;
  58:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  59:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_t* task = (task_t*) temp_task;
  60:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  61:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    switch(requested_state)
  62:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
  63:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    case Task_unspecified:/* 1. create new task */
  64:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
  65:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       switch(task->task_state)
  66:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
  67:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_ready:
  68:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_running:
  69:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_suspended:
  70:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
  71:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState = Rejected;
  72:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
  73:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
  74:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       default:
  75:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
  76:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          task->task_state = Task_unspecified;
  77:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState = Accepted;
  78:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
  79:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
  80:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
  81:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       break;
  82:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
  83:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    case Task_suspended:
  84:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
  85:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       switch(task->task_state)
  86:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
  87:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_unspecified: /* 2. create task transition */
  88:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
  89:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* no checks */
  90:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          task->task_state = Task_suspended;
  91:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState = Accepted;
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 3


  92:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
  93:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
  94:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_running: /* 3. terminate task */
  95:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
  96:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          task->task_state = Task_suspended;
  97:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState = Accepted;
  98:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
  99:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 100:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       default:
 101:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 102:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* no change in states allowed */
 103:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          OS_SetSwBug(os_bug_taskstate_request_denied, Func_TaskStateRequest);
 104:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 105:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 106:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 107:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       break;
 108:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 109:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    case Task_running:
 110:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 111:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       switch(task->task_state)
 112:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 113:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_ready: /* 4. start task transition */
 114:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 115:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          task->task_state = Task_running;
 116:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState   = Accepted;
 117:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 118:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 119:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       default:
 120:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 121:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* no change in states allowed */
 122:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 123:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 124:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 125:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       break;
 126:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 127:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 128:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    case Task_ready:
 129:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 130:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       switch(task->task_state)
 131:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 132:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_suspended: /* activate task transition */
 133:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 134:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          task->task_state = Task_ready;
 135:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState   = Accepted;
 136:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 137:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 138:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_running: /* preempt task transition */
 139:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 140:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          task->task_state = Task_ready;
 141:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState   = Accepted;
 142:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 143:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 144:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_unspecified:
 145:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 146:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****           task->task_state = Task_ready;
 147:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****           RequestState = Accepted;
 148:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****           break;
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 4


 149:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 150:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       default:
 151:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 152:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* no change in states allowed */
 153:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 154:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 155:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 156:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       break;
 157:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 158:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    default:
 159:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 160:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       break;
 161:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 162:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 163:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    if(RequestState == Rejected)
 164:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 165:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       TASK_TRANSITION_REJECTED_TASK_ADDR  = task;
 166:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       TASK_TRANSITION_REJECTED_STATE      = requested_state;
 167:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       TASK_TRANSITION_CURRENT_STATE       = task->task_state;
 168:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       OS_SetSwBug(os_bug_taskstate_request_denied, Func_TaskStateRequest);
 169:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 170:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    return RequestState;
 171:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 172:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 173:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_CreateTask(task_t* task)
 174:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 175:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*5. unspecified --(create   )--> suspend*/
 176:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    if(task != 0)
 177:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 178:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       if(task->state_request != 0)
 179:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 180:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->state_request(task, Task_suspended)== Accepted)
 181:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 182:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /*QAC*/
 183:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 184:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          else
 185:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 186:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_SetSwBug(os_bug_taskstate_request_denied, Func_CreateTask);
 187:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 188:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 189:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       else
 190:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 191:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          OS_SetSwBug(os_bug_null_pointer, Func_CreateTask);
 192:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 193:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 194:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    else
 195:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 196:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       OS_SetSwBug(os_bug_null_pointer, Func_CreateTask);
 197:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 198:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 199:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_PreemptTask(task_t* task, scheduling_t* scheduling_task)
 200:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 201:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*2. running     --(preempt  )--> ready*/
 202:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* Preempt task
 203:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - Disable Interrupts
 204:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - OS_TaskSaveTaskEnvironment
 205:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - add to Schedule Queue / delete from RunQueue
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 5


 206:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - delete active flag
 207:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - enable Interrupts
 208:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    */
 209:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    if(task != 0 && scheduling_task != 0)
 210:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 211:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       if(task->state_request != 0)
 212:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 213:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->state_request(task, Task_ready)== Accepted)
 214:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 215:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DisableInterrupts();
 216:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TaskSaveTaskEnvironment(task);
 217:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_RESTORE_SYSTEM_STACK((uint8*)&OS_MAIN_STACK);
 218:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 219:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->active = False;
 220:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* reset the prio increase for waiting */
 221:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->current_prio = task->default_prio;
 222:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             EnableInterrupts();
 223:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 224:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          else
 225:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 226:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_SetSwBug(os_bug_taskstate_request_denied, Func_Preempt_Task);
 227:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 228:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 229:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       else
 230:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 231:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          OS_SetSwBug(os_bug_null_pointer, Func_Preempt_Task);
 232:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 233:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 234:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    else
 235:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 236:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       OS_SetSwBug(os_bug_null_pointer, Func_Preempt_Task);
 237:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 238:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 239:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 240:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_ActivateTask(task_t* task)
 241:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 242:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*
 243:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    Activate Task:
 244:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - Disable Interrupts
 245:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - Add to schedule Queue
 246:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - Enable Interrupts
 247:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 248:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    in case of valid request, the content, where the "task_t* task" is point to is stored in TASK_RU
 249:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    */
 250:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    if(task != 0)
 251:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 252:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       if(task->state_request(task, Task_ready)==Accepted)
 253:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 254:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          DisableInterrupts();
 255:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* 3. suspended to ready (add to runqueue) */
 256:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->IdleTask == False)
 257:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 258:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             if( (task->active == False)
 259:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                   || ( (task->active == True) && (task->NrOfInsAllowed > task->NrOfInsActivated) )/
 260:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****               )
 261:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             {
 262:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                /* only activate if allowed by rule */
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 6


 263:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                task = AddToTaskQueue(task);
 264:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                AddToSchedulingQueue(task);
 265:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                if(task != 0)
 266:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                {
 267:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                   task->NrOfInsActivated++;
 268:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                }
 269:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                else
 270:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                {
 271:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                   OS_SetSwBug(os_bug_null_pointer,Func_ActivateTask);
 272:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                }
 273:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             }
 274:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             else
 275:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             {
 276:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                /* multiple activation bug occured */
 277:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                OS_SetSwBug(os_bug_taskstate_request_denied, Func_ActivateTask);
 278:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             }
 279:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 280:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          else
 281:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 282:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             AddToIdleTaskQueue(task);
 283:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 284:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          EnableInterrupts();
 285:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 286:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       else
 287:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 288:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          OS_SetSwBug(os_bug_taskstate_request_denied, Func_ActivateTask);
 289:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 290:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 291:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 292:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_StartTask(task_t* task, scheduling_t* scheduling_task)
 293:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 294:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* OS_StartTask
 295:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - Disable interrupts
 296:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - restore Environment
 297:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - enable interrupts
 298:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 299:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - Start Task
 300:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****     */
 301:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    if( (task != 0) && (scheduling_task != 0)&& ((task->task_queued != False)||(task->IdleTask != Fa
 302:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 303:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       if(task->state_request !=0)
 304:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 305:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->state_request(task, Task_running)== Accepted)
 306:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 307:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DisableInterrupts();
 308:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->active =  True;
 309:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->wait_time = 0;
 310:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->current_prio = task->default_prio;
 311:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_SAVE_SYSTEM_STACK((uint8*)&OS_MAIN_STACK);
 312:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_RESTORETASK_ENVIRONMENT(task);
 313:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->start_time = OS_GetCurrentTime();
 314:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             EnableInterrupts();
 315:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 316:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* task execution shall not happen with disabled interrupts */
 317:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             SET_RUNNING_TASK(task, scheduling_task);
 318:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* change to user mode... */
 319:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             if(task->privilige_mode == ePriviligeMode_unpriviliged_thread_mode)
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 7


 320:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             {
 321:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                LLF_CHANGE_TO_UNPRIVILIGED_THREAD_MODE();
 322:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             }
 323:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 324:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* call the task entry function */
 325:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->fp(task);
 326:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 327:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          else
 328:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 329:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_SetSwBug(os_bug_taskstate_request_denied, Func_StartTask);
 330:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 331:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 332:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       else
 333:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 334:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          OS_SetSwBug(os_bug_null_pointer, Func_StartTask);
 335:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 336:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 337:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* allowed in case of empty QUEUE elements (queue elements which have no activate_task yet recei
 338:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    else
 339:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 340:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****        OS_SetSwBug(os_bug_null_pointer, Func_StartTask);
 341:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 342:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    */
 343:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 344:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_TerminateTask(task_t* task, scheduling_t* scheduling_task)
 345:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 346:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* Preempt task
 347:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - Disable Interrupts
 348:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - OS_TaskSaveTaskEnvironment
 349:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - add to Schedule Queue / delete from RunQueue
 350:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - delete active flag
 351:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - enable Interrupts
 352:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    */
 353:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    if(task != 0 && scheduling_task != 0)
 354:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 355:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       if(task->state_request != 0)
 356:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 357:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->state_request(task, Task_suspended)== Accepted)
 358:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 359:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DisableInterrupts();
 360:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TaskSaveTaskEnvironment(task);
 361:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_RESTORE_SYSTEM_STACK((uint8*)&OS_MAIN_STACK);
 362:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DeleteFromTaskQueue(task);
 363:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DeleteFromSchedulingQueue(scheduling_task);
 364:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 365:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->active = False;
 366:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* reset the prio increase for waiting */
 367:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->current_prio = task->default_prio;
 368:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             EnableInterrupts();
 369:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 370:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          else
 371:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 372:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_SetSwBug(os_bug_taskstate_request_denied, Func_TerminateTask);
 373:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 374:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 375:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       else
 376:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 8


 377:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          OS_SetSwBug(os_bug_null_pointer, Func_TerminateTask);
 378:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 379:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 380:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    else
 381:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 382:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       OS_SetSwBug(os_bug_null_pointer, Func_TerminateTask);
 383:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 384:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 385:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_TaskDispatcher(void)
 386:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 387:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* called in an certain core context (Core_0/1/2/3)*/
 388:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 389:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 390:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*
 391:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    1. running     --(terminate)--> suspend
 392:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    2. running     --(preempt  )--> ready
 393:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    3. suspend     --(activate )--> ready
 394:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    4. ready       --(start    )--> running
 395:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    5. unspecified --(create   )--> suspend
 396:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    */
 397:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_t* scheduling_task_ptr;
 398:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_t* task = 0;
 399:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* get running task */
 400:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task         = GetRunningTask();
 401:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_task_ptr = GetRunningSchedulingQueueElementPtr();
 402:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* Preempt Task */
 403:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    if(task!=0 && scheduling_task_ptr != 0)
 404:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 405:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       OS_TerminateTask(task, scheduling_task_ptr);
 406:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 407:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* ask for the next task to be activated... */
 408:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_task_ptr = OS_TaskScheduler();
 409:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    if(scheduling_task_ptr != 0)
 410:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 411:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       task = GetFromTaskQueue(scheduling_task_ptr);
 412:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 413:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    if(task != 0 && scheduling_task_ptr != 0)
 414:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 415:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****        OS_StartTask(task, scheduling_task_ptr);
 416:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 417:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 418:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_0(void* task_ptr)
 419:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
  25              		.loc 1 419 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
 420:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter(task_ptr);
 421:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    HaltMcu();/* HLT will be ended by timer interrupt, what shall be done with the rest of the funct
  31              		.loc 1 421 0
  32 0000 FFF7FEBF 		b	LLF_WAIT_FOR_INTERRUPT
  33              	.LVL1:
  34              		.cfi_endproc
  35              	.LFE9:
  37              		.align	1
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 9


  38              		.p2align 2,,3
  39              		.syntax unified
  40              		.thumb
  41              		.thumb_func
  42              		.fpu softvfp
  44              	TASK_2:
  45              	.LFB18:
  46              		.cfi_startproc
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 0, uses_anonymous_args = 0
  49 0004 38B5     		push	{r3, r4, r5, lr}
  50              		.cfi_def_cfa_offset 16
  51              		.cfi_offset 3, -16
  52              		.cfi_offset 4, -12
  53              		.cfi_offset 5, -8
  54              		.cfi_offset 14, -4
  55 0006 0446     		mov	r4, r0
  56 0008 FFF7FEFF 		bl	GetRunningSchedulingQueueElementPtr
  57 000c 194A     		ldr	r2, .L17
  58 000e 1368     		ldr	r3, [r2]
  59 0010 0133     		adds	r3, r3, #1
  60 0012 1360     		str	r3, [r2]
  61 0014 74B1     		cbz	r4, .L4
  62 0016 0546     		mov	r5, r0
  63 0018 60B1     		cbz	r0, .L4
  64 001a 236B     		ldr	r3, [r4, #48]
  65 001c 53B1     		cbz	r3, .L4
  66 001e 0121     		movs	r1, #1
  67 0020 2046     		mov	r0, r4
  68 0022 9847     		blx	r3
  69 0024 0128     		cmp	r0, #1
  70 0026 0BD0     		beq	.L16
  71 0028 0821     		movs	r1, #8
  72 002a 0120     		movs	r0, #1
  73 002c BDE83840 		pop	{r3, r4, r5, lr}
  74              		.cfi_remember_state
  75              		.cfi_restore 14
  76              		.cfi_restore 5
  77              		.cfi_restore 4
  78              		.cfi_restore 3
  79              		.cfi_def_cfa_offset 0
  80 0030 FFF7FEBF 		b	OS_SetSwBug
  81              	.L4:
  82              		.cfi_restore_state
  83 0034 0821     		movs	r1, #8
  84 0036 0220     		movs	r0, #2
  85 0038 BDE83840 		pop	{r3, r4, r5, lr}
  86              		.cfi_remember_state
  87              		.cfi_restore 14
  88              		.cfi_restore 5
  89              		.cfi_restore 4
  90              		.cfi_restore 3
  91              		.cfi_def_cfa_offset 0
  92 003c FFF7FEBF 		b	OS_SetSwBug
  93              	.L16:
  94              		.cfi_restore_state
  95 0040 FFF7FEFF 		bl	LLF_INT_DISABLE
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 10


  96 0044 2046     		mov	r0, r4
  97 0046 FFF7FEFF 		bl	OS_TaskSaveTaskEnvironment
  98 004a 0B48     		ldr	r0, .L17+4
  99 004c FFF7FEFF 		bl	OS_TASK_RESTORE_SYSTEM_STACK
 100 0050 2046     		mov	r0, r4
 101 0052 FFF7FEFF 		bl	DeleteFromTaskQueue
 102 0056 2846     		mov	r0, r5
 103 0058 FFF7FEFF 		bl	DeleteFromSchedulingQueue
 104 005c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 105 005e 94F82520 		ldrb	r2, [r4, #37]	@ zero_extendqisi2
 106 0062 84F82420 		strb	r2, [r4, #36]
 107 0066 6FF30003 		bfc	r3, #0, #1
 108 006a 2370     		strb	r3, [r4]
 109 006c BDE83840 		pop	{r3, r4, r5, lr}
 110              		.cfi_restore 14
 111              		.cfi_restore 5
 112              		.cfi_restore 4
 113              		.cfi_restore 3
 114              		.cfi_def_cfa_offset 0
 115 0070 FFF7FEBF 		b	LLF_INT_ENABLE
 116              	.L18:
 117              		.align	2
 118              	.L17:
 119 0074 00000000 		.word	TASK1_CALL_NR
 120 0078 00000000 		.word	OS_MAIN_STACK
 121              		.cfi_endproc
 122              	.LFE18:
 124              		.align	1
 125              		.p2align 2,,3
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 129              		.fpu softvfp
 131              	TASK_3:
 132              	.LFB20:
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136 007c 38B5     		push	{r3, r4, r5, lr}
 137              		.cfi_def_cfa_offset 16
 138              		.cfi_offset 3, -16
 139              		.cfi_offset 4, -12
 140              		.cfi_offset 5, -8
 141              		.cfi_offset 14, -4
 142 007e 0446     		mov	r4, r0
 143 0080 FFF7FEFF 		bl	GetRunningSchedulingQueueElementPtr
 144 0084 194A     		ldr	r2, .L33
 145 0086 1368     		ldr	r3, [r2]
 146 0088 0133     		adds	r3, r3, #1
 147 008a 1360     		str	r3, [r2]
 148 008c 74B1     		cbz	r4, .L20
 149 008e 0546     		mov	r5, r0
 150 0090 60B1     		cbz	r0, .L20
 151 0092 236B     		ldr	r3, [r4, #48]
 152 0094 53B1     		cbz	r3, .L20
 153 0096 0121     		movs	r1, #1
 154 0098 2046     		mov	r0, r4
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 11


 155 009a 9847     		blx	r3
 156 009c 0128     		cmp	r0, #1
 157 009e 0BD0     		beq	.L32
 158 00a0 0821     		movs	r1, #8
 159 00a2 0120     		movs	r0, #1
 160 00a4 BDE83840 		pop	{r3, r4, r5, lr}
 161              		.cfi_remember_state
 162              		.cfi_restore 14
 163              		.cfi_restore 5
 164              		.cfi_restore 4
 165              		.cfi_restore 3
 166              		.cfi_def_cfa_offset 0
 167 00a8 FFF7FEBF 		b	OS_SetSwBug
 168              	.L20:
 169              		.cfi_restore_state
 170 00ac 0821     		movs	r1, #8
 171 00ae 0220     		movs	r0, #2
 172 00b0 BDE83840 		pop	{r3, r4, r5, lr}
 173              		.cfi_remember_state
 174              		.cfi_restore 14
 175              		.cfi_restore 5
 176              		.cfi_restore 4
 177              		.cfi_restore 3
 178              		.cfi_def_cfa_offset 0
 179 00b4 FFF7FEBF 		b	OS_SetSwBug
 180              	.L32:
 181              		.cfi_restore_state
 182 00b8 FFF7FEFF 		bl	LLF_INT_DISABLE
 183 00bc 2046     		mov	r0, r4
 184 00be FFF7FEFF 		bl	OS_TaskSaveTaskEnvironment
 185 00c2 0B48     		ldr	r0, .L33+4
 186 00c4 FFF7FEFF 		bl	OS_TASK_RESTORE_SYSTEM_STACK
 187 00c8 2046     		mov	r0, r4
 188 00ca FFF7FEFF 		bl	DeleteFromTaskQueue
 189 00ce 2846     		mov	r0, r5
 190 00d0 FFF7FEFF 		bl	DeleteFromSchedulingQueue
 191 00d4 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 192 00d6 94F82520 		ldrb	r2, [r4, #37]	@ zero_extendqisi2
 193 00da 84F82420 		strb	r2, [r4, #36]
 194 00de 6FF30003 		bfc	r3, #0, #1
 195 00e2 2370     		strb	r3, [r4]
 196 00e4 BDE83840 		pop	{r3, r4, r5, lr}
 197              		.cfi_restore 14
 198              		.cfi_restore 5
 199              		.cfi_restore 4
 200              		.cfi_restore 3
 201              		.cfi_def_cfa_offset 0
 202 00e8 FFF7FEBF 		b	LLF_INT_ENABLE
 203              	.L34:
 204              		.align	2
 205              	.L33:
 206 00ec 00000000 		.word	TASK1_CALL_NR
 207 00f0 00000000 		.word	OS_MAIN_STACK
 208              		.cfi_endproc
 209              	.LFE20:
 211              		.align	1
 212              		.p2align 2,,3
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 12


 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 216              		.fpu softvfp
 218              	TASK_1:
 219              	.LFB10:
 422:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 423:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_1(void* task_ptr)
 424:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 220              		.loc 1 424 0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224              	.LVL2:
 225              		.loc 1 424 0
 226 00f4 38B5     		push	{r3, r4, r5, lr}
 227              		.cfi_def_cfa_offset 16
 228              		.cfi_offset 3, -16
 229              		.cfi_offset 4, -12
 230              		.cfi_offset 5, -8
 231              		.cfi_offset 14, -4
 232              		.loc 1 424 0
 233 00f6 0446     		mov	r4, r0
 425:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_t* scheduling_task_ptr = 0;
 426:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter(task_ptr);
 427:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* worker task */
 428:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_task_ptr = GetRunningSchedulingQueueElementPtr();
 234              		.loc 1 428 0
 235 00f8 FFF7FEFF 		bl	GetRunningSchedulingQueueElementPtr
 236              	.LVL3:
 429:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* do some things */
 430:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    TASK1_CALL_NR++;
 237              		.loc 1 430 0
 238 00fc 194A     		ldr	r2, .L49
 239 00fe 1368     		ldr	r3, [r2]
 240 0100 0133     		adds	r3, r3, #1
 241 0102 1360     		str	r3, [r2]
 242              	.LVL4:
 243              	.LBB6:
 244              	.LBB7:
 353:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 245              		.loc 1 353 0
 246 0104 74B1     		cbz	r4, .L36
 247 0106 0546     		mov	r5, r0
 248 0108 60B1     		cbz	r0, .L36
 355:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 249              		.loc 1 355 0
 250 010a 236B     		ldr	r3, [r4, #48]
 251 010c 53B1     		cbz	r3, .L36
 357:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 252              		.loc 1 357 0
 253 010e 0121     		movs	r1, #1
 254 0110 2046     		mov	r0, r4
 255              	.LVL5:
 256 0112 9847     		blx	r3
 257              	.LVL6:
 258 0114 0128     		cmp	r0, #1
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 13


 259 0116 0BD0     		beq	.L48
 372:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 260              		.loc 1 372 0
 261 0118 0821     		movs	r1, #8
 262 011a 0120     		movs	r0, #1
 263              	.LBE7:
 264              	.LBE6:
 431:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 432:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 433:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* end */
 434:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_TerminateTask(task_ptr,scheduling_task_ptr);
 435:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 265              		.loc 1 435 0
 266 011c BDE83840 		pop	{r3, r4, r5, lr}
 267              		.cfi_remember_state
 268              		.cfi_restore 14
 269              		.cfi_restore 5
 270              		.cfi_restore 4
 271              		.cfi_restore 3
 272              		.cfi_def_cfa_offset 0
 273              	.LVL7:
 274              	.LBB15:
 275              	.LBB12:
 372:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 276              		.loc 1 372 0
 277 0120 FFF7FEBF 		b	OS_SetSwBug
 278              	.LVL8:
 279              	.L36:
 280              		.cfi_restore_state
 281              	.LBB8:
 282              	.LBB9:
 377:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 283              		.loc 1 377 0
 284 0124 0821     		movs	r1, #8
 285 0126 0220     		movs	r0, #2
 286              	.LVL9:
 287              	.LBE9:
 288              	.LBE8:
 289              	.LBE12:
 290              	.LBE15:
 291              		.loc 1 435 0
 292 0128 BDE83840 		pop	{r3, r4, r5, lr}
 293              		.cfi_remember_state
 294              		.cfi_restore 14
 295              		.cfi_restore 5
 296              		.cfi_restore 4
 297              		.cfi_restore 3
 298              		.cfi_def_cfa_offset 0
 299              	.LVL10:
 300              	.LBB16:
 301              	.LBB13:
 302              	.LBB11:
 303              	.LBB10:
 377:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 304              		.loc 1 377 0
 305 012c FFF7FEBF 		b	OS_SetSwBug
 306              	.LVL11:
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 14


 307              	.L48:
 308              		.cfi_restore_state
 309              	.LBE10:
 310              	.LBE11:
 359:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TaskSaveTaskEnvironment(task);
 311              		.loc 1 359 0
 312 0130 FFF7FEFF 		bl	LLF_INT_DISABLE
 313              	.LVL12:
 360:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_RESTORE_SYSTEM_STACK((uint8*)&OS_MAIN_STACK);
 314              		.loc 1 360 0
 315 0134 2046     		mov	r0, r4
 316 0136 FFF7FEFF 		bl	OS_TaskSaveTaskEnvironment
 317              	.LVL13:
 361:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DeleteFromTaskQueue(task);
 318              		.loc 1 361 0
 319 013a 0B48     		ldr	r0, .L49+4
 320 013c FFF7FEFF 		bl	OS_TASK_RESTORE_SYSTEM_STACK
 321              	.LVL14:
 362:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DeleteFromSchedulingQueue(scheduling_task);
 322              		.loc 1 362 0
 323 0140 2046     		mov	r0, r4
 324 0142 FFF7FEFF 		bl	DeleteFromTaskQueue
 325              	.LVL15:
 363:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 326              		.loc 1 363 0
 327 0146 2846     		mov	r0, r5
 328 0148 FFF7FEFF 		bl	DeleteFromSchedulingQueue
 329              	.LVL16:
 365:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* reset the prio increase for waiting */
 330              		.loc 1 365 0
 331 014c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 367:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             EnableInterrupts();
 332              		.loc 1 367 0
 333 014e 94F82520 		ldrb	r2, [r4, #37]	@ zero_extendqisi2
 334 0152 84F82420 		strb	r2, [r4, #36]
 365:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* reset the prio increase for waiting */
 335              		.loc 1 365 0
 336 0156 6FF30003 		bfc	r3, #0, #1
 337 015a 2370     		strb	r3, [r4]
 338              	.LBE13:
 339              	.LBE16:
 340              		.loc 1 435 0
 341 015c BDE83840 		pop	{r3, r4, r5, lr}
 342              		.cfi_restore 14
 343              		.cfi_restore 5
 344              		.cfi_restore 4
 345              		.cfi_restore 3
 346              		.cfi_def_cfa_offset 0
 347              	.LVL17:
 348              	.LBB17:
 349              	.LBB14:
 368:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 350              		.loc 1 368 0
 351 0160 FFF7FEBF 		b	LLF_INT_ENABLE
 352              	.LVL18:
 353              	.L50:
 354              		.align	2
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 15


 355              	.L49:
 356 0164 00000000 		.word	TASK1_CALL_NR
 357 0168 00000000 		.word	OS_MAIN_STACK
 358              	.LBE14:
 359              	.LBE17:
 360              		.cfi_endproc
 361              	.LFE10:
 363              		.align	1
 364              		.p2align 2,,3
 365              		.global	OS_ActivateDispatcher
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu softvfp
 371              	OS_ActivateDispatcher:
 372              	.LFB0:
  23:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 373              		.loc 1 23 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377              		@ link register save eliminated.
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CURRENT_VAL_REG = ((uint32)0x00000000);
 378              		.loc 1 41 0
 379 016c 0948     		ldr	r0, .L53
  43:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #endif
 380              		.loc 1 43 0
 381 016e 0A49     		ldr	r1, .L53+4
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CURRENT_VAL_REG = ((uint32)0x00000000);
 382              		.loc 1 41 0
 383 0170 0368     		ldr	r3, [r0]
  43:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #endif
 384              		.loc 1 43 0
 385 0172 0A68     		ldr	r2, [r1]
  23:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 386              		.loc 1 23 0
 387 0174 30B4     		push	{r4, r5}
 388              		.cfi_def_cfa_offset 8
 389              		.cfi_offset 4, -8
 390              		.cfi_offset 5, -4
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CURRENT_VAL_REG = ((uint32)0x00000000);
 391              		.loc 1 41 0
 392 0176 03F07F43 		and	r3, r3, #-16777216
  42:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CTRL_STAT_REG = *SYSTICK_CTRL_STAT_REG | SYSTICK_STAT_REG_TICKINT | SYSTICK_STAT_REG_EN
 393              		.loc 1 42 0
 394 017a 084C     		ldr	r4, .L53+8
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CURRENT_VAL_REG = ((uint32)0x00000000);
 395              		.loc 1 41 0
 396 017c 43F4CD13 		orr	r3, r3, #1679360
  42:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CTRL_STAT_REG = *SYSTICK_CTRL_STAT_REG | SYSTICK_STAT_REG_TICKINT | SYSTICK_STAT_REG_EN
 397              		.loc 1 42 0
 398 0180 0025     		movs	r5, #0
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CURRENT_VAL_REG = ((uint32)0x00000000);
 399              		.loc 1 41 0
 400 0182 43F42073 		orr	r3, r3, #640
  43:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #endif
 401              		.loc 1 43 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 16


 402 0186 42F00302 		orr	r2, r2, #3
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CURRENT_VAL_REG = ((uint32)0x00000000);
 403              		.loc 1 41 0
 404 018a 0360     		str	r3, [r0]
  43:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #endif
 405              		.loc 1 43 0
 406 018c 0A60     		str	r2, [r1]
  42:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CTRL_STAT_REG = *SYSTICK_CTRL_STAT_REG | SYSTICK_STAT_REG_TICKINT | SYSTICK_STAT_REG_EN
 407              		.loc 1 42 0
 408 018e 2560     		str	r5, [r4]
  45:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 409              		.loc 1 45 0
 410 0190 30BC     		pop	{r4, r5}
 411              		.cfi_restore 5
 412              		.cfi_restore 4
 413              		.cfi_def_cfa_offset 0
 414 0192 7047     		bx	lr
 415              	.L54:
 416              		.align	2
 417              	.L53:
 418 0194 14E000E0 		.word	-536813548
 419 0198 10E000E0 		.word	-536813552
 420 019c 18E000E0 		.word	-536813544
 421              		.cfi_endproc
 422              	.LFE0:
 424              		.align	1
 425              		.p2align 2,,3
 426              		.global	OS_SleepTask
 427              		.syntax unified
 428              		.thumb
 429              		.thumb_func
 430              		.fpu softvfp
 432              	OS_SleepTask:
 433              	.LFB1:
  49:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* sleep Task shall do a preempt task with a defined minimum wait time, the actual wait time is 
 434              		.loc 1 49 0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438              	.LVL19:
 439 01a0 70B5     		push	{r4, r5, r6, lr}
 440              		.cfi_def_cfa_offset 16
 441              		.cfi_offset 4, -16
 442              		.cfi_offset 5, -12
 443              		.cfi_offset 6, -8
 444              		.cfi_offset 14, -4
  49:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* sleep Task shall do a preempt task with a defined minimum wait time, the actual wait time is 
 445              		.loc 1 49 0
 446 01a2 0446     		mov	r4, r0
 447 01a4 0D46     		mov	r5, r1
 448 01a6 1646     		mov	r6, r2
  51:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_PreemptTask(task,scheduling_task_ptr);
 449              		.loc 1 51 0
 450 01a8 FFF7FEFF 		bl	OS_GetCurrentTime
 451              	.LVL20:
 452 01ac 2844     		add	r0, r0, r5
 453 01ae A060     		str	r0, [r4, #8]
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 17


 454              	.LVL21:
 455              	.LBB20:
 456              	.LBB21:
 209:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 457              		.loc 1 209 0
 458 01b0 66B1     		cbz	r6, .L56
 211:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 459              		.loc 1 211 0
 460 01b2 236B     		ldr	r3, [r4, #48]
 461 01b4 53B1     		cbz	r3, .L56
 213:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 462              		.loc 1 213 0
 463 01b6 0221     		movs	r1, #2
 464 01b8 2046     		mov	r0, r4
 465 01ba 9847     		blx	r3
 466              	.LVL22:
 467 01bc 0128     		cmp	r0, #1
 468 01be 0BD0     		beq	.L65
 226:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 469              		.loc 1 226 0
 470 01c0 0D21     		movs	r1, #13
 471 01c2 0120     		movs	r0, #1
 472              	.LBE21:
 473              	.LBE20:
  53:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 474              		.loc 1 53 0
 475 01c4 BDE87040 		pop	{r4, r5, r6, lr}
 476              		.cfi_remember_state
 477              		.cfi_restore 14
 478              		.cfi_restore 6
 479              		.cfi_restore 5
 480              		.cfi_restore 4
 481              		.cfi_def_cfa_offset 0
 482              	.LVL23:
 483              	.LBB25:
 484              	.LBB22:
 226:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 485              		.loc 1 226 0
 486 01c8 FFF7FEBF 		b	OS_SetSwBug
 487              	.LVL24:
 488              	.L56:
 489              		.cfi_restore_state
 231:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 490              		.loc 1 231 0
 491 01cc 0D21     		movs	r1, #13
 492 01ce 0220     		movs	r0, #2
 493              	.LBE22:
 494              	.LBE25:
  53:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 495              		.loc 1 53 0
 496 01d0 BDE87040 		pop	{r4, r5, r6, lr}
 497              		.cfi_remember_state
 498              		.cfi_restore 14
 499              		.cfi_restore 6
 500              		.cfi_restore 5
 501              		.cfi_restore 4
 502              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 18


 503              	.LVL25:
 504              	.LBB26:
 505              	.LBB23:
 231:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 506              		.loc 1 231 0
 507 01d4 FFF7FEBF 		b	OS_SetSwBug
 508              	.LVL26:
 509              	.L65:
 510              		.cfi_restore_state
 215:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TaskSaveTaskEnvironment(task);
 511              		.loc 1 215 0
 512 01d8 FFF7FEFF 		bl	LLF_INT_DISABLE
 513              	.LVL27:
 216:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_RESTORE_SYSTEM_STACK((uint8*)&OS_MAIN_STACK);
 514              		.loc 1 216 0
 515 01dc 2046     		mov	r0, r4
 516 01de FFF7FEFF 		bl	OS_TaskSaveTaskEnvironment
 517              	.LVL28:
 217:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 518              		.loc 1 217 0
 519 01e2 0748     		ldr	r0, .L66
 520 01e4 FFF7FEFF 		bl	OS_TASK_RESTORE_SYSTEM_STACK
 521              	.LVL29:
 219:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* reset the prio increase for waiting */
 522              		.loc 1 219 0
 523 01e8 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 221:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             EnableInterrupts();
 524              		.loc 1 221 0
 525 01ea 94F82520 		ldrb	r2, [r4, #37]	@ zero_extendqisi2
 526 01ee 84F82420 		strb	r2, [r4, #36]
 219:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* reset the prio increase for waiting */
 527              		.loc 1 219 0
 528 01f2 6FF30003 		bfc	r3, #0, #1
 529 01f6 2370     		strb	r3, [r4]
 530              	.LBE23:
 531              	.LBE26:
  53:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 532              		.loc 1 53 0
 533 01f8 BDE87040 		pop	{r4, r5, r6, lr}
 534              		.cfi_restore 14
 535              		.cfi_restore 6
 536              		.cfi_restore 5
 537              		.cfi_restore 4
 538              		.cfi_def_cfa_offset 0
 539              	.LVL30:
 540              	.LBB27:
 541              	.LBB24:
 222:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 542              		.loc 1 222 0
 543 01fc FFF7FEBF 		b	LLF_INT_ENABLE
 544              	.LVL31:
 545              	.L67:
 546              		.align	2
 547              	.L66:
 548 0200 00000000 		.word	OS_MAIN_STACK
 549              	.LBE24:
 550              	.LBE27:
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 19


 551              		.cfi_endproc
 552              	.LFE1:
 554              		.align	1
 555              		.p2align 2,,3
 556              		.global	task_state_request
 557              		.syntax unified
 558              		.thumb
 559              		.thumb_func
 560              		.fpu softvfp
 562              	task_state_request:
 563              	.LFB2:
  56:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    unsigned_char_t RequestState = Rejected;
 564              		.loc 1 56 0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 0
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 568              	.LVL32:
 569 0204 70B5     		push	{r4, r5, r6, lr}
 570              		.cfi_def_cfa_offset 16
 571              		.cfi_offset 4, -16
 572              		.cfi_offset 5, -12
 573              		.cfi_offset 6, -8
 574              		.cfi_offset 14, -4
 575 0206 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
  56:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    unsigned_char_t RequestState = Rejected;
 576              		.loc 1 56 0
 577 020a 0546     		mov	r5, r0
 578              	.LVL33:
 579 020c 0C46     		mov	r4, r1
  61:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 580              		.loc 1 61 0
 581 020e 0329     		cmp	r1, #3
 582 0210 0CD8     		bhi	.L69
 583 0212 DFE801F0 		tbb	[pc, r1]
 584              	.L71:
 585 0216 27       		.byte	(.L70-.L71)/2
 586 0217 02       		.byte	(.L72-.L71)/2
 587 0218 1E       		.byte	(.L73-.L71)/2
 588 0219 17       		.byte	(.L74-.L71)/2
 589              		.p2align 1
 590              	.L72:
  85:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 591              		.loc 1 85 0
 592 021a 5BB3     		cbz	r3, .L78
 593 021c 032B     		cmp	r3, #3
 594 021e 29D0     		beq	.L78
 103:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 595              		.loc 1 103 0
 596 0220 0C21     		movs	r1, #12
 597              	.LVL34:
 598 0222 0120     		movs	r0, #1
 599              	.LVL35:
 600 0224 FFF7FEFF 		bl	OS_SetSwBug
 601              	.LVL36:
 602 0228 95F83430 		ldrb	r3, [r5, #52]	@ zero_extendqisi2
 603              	.L69:
 165:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       TASK_TRANSITION_REJECTED_STATE      = requested_state;
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 20


 604              		.loc 1 165 0
 605 022c 1349     		ldr	r1, .L92
 167:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       OS_SetSwBug(os_bug_taskstate_request_denied, Func_TaskStateRequest);
 606              		.loc 1 167 0
 607 022e 144A     		ldr	r2, .L92+4
 166:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       TASK_TRANSITION_CURRENT_STATE       = task->task_state;
 608              		.loc 1 166 0
 609 0230 144E     		ldr	r6, .L92+8
 165:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       TASK_TRANSITION_REJECTED_STATE      = requested_state;
 610              		.loc 1 165 0
 611 0232 0D60     		str	r5, [r1]
 168:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 612              		.loc 1 168 0
 613 0234 0120     		movs	r0, #1
 614 0236 0C21     		movs	r1, #12
 166:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       TASK_TRANSITION_CURRENT_STATE       = task->task_state;
 615              		.loc 1 166 0
 616 0238 3470     		strb	r4, [r6]
 167:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       OS_SetSwBug(os_bug_taskstate_request_denied, Func_TaskStateRequest);
 617              		.loc 1 167 0
 618 023a 1370     		strb	r3, [r2]
 168:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 619              		.loc 1 168 0
 620 023c FFF7FEFF 		bl	OS_SetSwBug
 621              	.LVL37:
 622 0240 0020     		movs	r0, #0
 171:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 623              		.loc 1 171 0
 624 0242 70BD     		pop	{r4, r5, r6, pc}
 625              	.LVL38:
 626              	.L74:
 111:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 627              		.loc 1 111 0
 628 0244 022B     		cmp	r3, #2
 629 0246 F1D1     		bne	.L69
 115:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState   = Accepted;
 630              		.loc 1 115 0
 631 0248 0323     		movs	r3, #3
 632 024a 80F83430 		strb	r3, [r0, #52]
 633              	.LVL39:
 116:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 634              		.loc 1 116 0
 635 024e 0120     		movs	r0, #1
 636              	.LVL40:
 171:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 637              		.loc 1 171 0
 638 0250 70BD     		pop	{r4, r5, r6, pc}
 639              	.LVL41:
 640              	.L73:
 130:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 641              		.loc 1 130 0
 642 0252 012B     		cmp	r3, #1
 643 0254 01D9     		bls	.L80
 644 0256 032B     		cmp	r3, #3
 645 0258 E8D1     		bne	.L69
 646              	.L80:
 134:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState   = Accepted;
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 21


 647              		.loc 1 134 0
 648 025a 0223     		movs	r3, #2
 649 025c 85F83430 		strb	r3, [r5, #52]
 650              	.LVL42:
 135:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 651              		.loc 1 135 0
 652 0260 0120     		movs	r0, #1
 653              	.LVL43:
 171:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 654              		.loc 1 171 0
 655 0262 70BD     		pop	{r4, r5, r6, pc}
 656              	.LVL44:
 657              	.L70:
  65:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 658              		.loc 1 65 0
 659 0264 5A1E     		subs	r2, r3, #1
 660 0266 022A     		cmp	r2, #2
 661 0268 E0D9     		bls	.L69
  76:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState = Accepted;
 662              		.loc 1 76 0
 663 026a 0023     		movs	r3, #0
 664 026c 80F83430 		strb	r3, [r0, #52]
 665              	.LVL45:
  77:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 666              		.loc 1 77 0
 667 0270 0120     		movs	r0, #1
 668              	.LVL46:
 171:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 669              		.loc 1 171 0
 670 0272 70BD     		pop	{r4, r5, r6, pc}
 671              	.LVL47:
 672              	.L78:
  90:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState = Accepted;
 673              		.loc 1 90 0
 674 0274 0120     		movs	r0, #1
 675              	.LVL48:
 676 0276 85F83400 		strb	r0, [r5, #52]
 677              	.LVL49:
 171:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 678              		.loc 1 171 0
 679 027a 70BD     		pop	{r4, r5, r6, pc}
 680              	.LVL50:
 681              	.L93:
 682              		.align	2
 683              	.L92:
 684 027c 00000000 		.word	TASK_TRANSITION_REJECTED_TASK_ADDR
 685 0280 00000000 		.word	TASK_TRANSITION_CURRENT_STATE
 686 0284 00000000 		.word	TASK_TRANSITION_REJECTED_STATE
 687              		.cfi_endproc
 688              	.LFE2:
 690              		.align	1
 691              		.p2align 2,,3
 692              		.global	OS_CreateTask
 693              		.syntax unified
 694              		.thumb
 695              		.thumb_func
 696              		.fpu softvfp
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 22


 698              	OS_CreateTask:
 699              	.LFB3:
 174:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*5. unspecified --(create   )--> suspend*/
 700              		.loc 1 174 0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704              	.LVL51:
 176:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 705              		.loc 1 176 0
 706 0288 98B1     		cbz	r0, .L104
 174:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*5. unspecified --(create   )--> suspend*/
 707              		.loc 1 174 0
 708 028a 08B5     		push	{r3, lr}
 709              		.cfi_def_cfa_offset 8
 710              		.cfi_offset 3, -8
 711              		.cfi_offset 14, -4
 178:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 712              		.loc 1 178 0
 713 028c 036B     		ldr	r3, [r0, #48]
 714 028e 53B1     		cbz	r3, .L95
 180:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 715              		.loc 1 180 0
 716 0290 0121     		movs	r1, #1
 717 0292 9847     		blx	r3
 718              	.LVL52:
 719 0294 0128     		cmp	r0, #1
 720 0296 00D1     		bne	.L107
 198:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_PreemptTask(task_t* task, scheduling_t* scheduling_task)
 721              		.loc 1 198 0
 722 0298 08BD     		pop	{r3, pc}
 723              	.L107:
 186:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 724              		.loc 1 186 0
 725 029a 0F21     		movs	r1, #15
 726 029c 0120     		movs	r0, #1
 198:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_PreemptTask(task_t* task, scheduling_t* scheduling_task)
 727              		.loc 1 198 0
 728 029e BDE80840 		pop	{r3, lr}
 729              		.cfi_remember_state
 730              		.cfi_restore 14
 731              		.cfi_restore 3
 732              		.cfi_def_cfa_offset 0
 186:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 733              		.loc 1 186 0
 734 02a2 FFF7FEBF 		b	OS_SetSwBug
 735              	.LVL53:
 736              	.L95:
 737              		.cfi_restore_state
 191:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 738              		.loc 1 191 0
 739 02a6 0F21     		movs	r1, #15
 740 02a8 0220     		movs	r0, #2
 741              	.LVL54:
 198:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_PreemptTask(task_t* task, scheduling_t* scheduling_task)
 742              		.loc 1 198 0
 743 02aa BDE80840 		pop	{r3, lr}
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 23


 744              		.cfi_restore 14
 745              		.cfi_restore 3
 746              		.cfi_def_cfa_offset 0
 191:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 747              		.loc 1 191 0
 748 02ae FFF7FEBF 		b	OS_SetSwBug
 749              	.LVL55:
 750              	.L104:
 751 02b2 0F21     		movs	r1, #15
 752 02b4 0220     		movs	r0, #2
 753              	.LVL56:
 754 02b6 FFF7FEBF 		b	OS_SetSwBug
 755              	.LVL57:
 756              		.cfi_endproc
 757              	.LFE3:
 759              		.align	1
 760 02ba 00BF     		.p2align 2,,3
 761              		.global	OS_ActivateTask
 762              		.syntax unified
 763              		.thumb
 764              		.thumb_func
 765              		.fpu softvfp
 767              	OS_ActivateTask:
 768              	.LFB5:
 241:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*
 769              		.loc 1 241 0
 770              		.cfi_startproc
 771              		@ args = 0, pretend = 0, frame = 0
 772              		@ frame_needed = 0, uses_anonymous_args = 0
 773              	.LVL58:
 250:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 774              		.loc 1 250 0
 775 02bc 68B3     		cbz	r0, .L108
 241:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*
 776              		.loc 1 241 0
 777 02be 38B5     		push	{r3, r4, r5, lr}
 778              		.cfi_def_cfa_offset 16
 779              		.cfi_offset 3, -16
 780              		.cfi_offset 4, -12
 781              		.cfi_offset 5, -8
 782              		.cfi_offset 14, -4
 252:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 783              		.loc 1 252 0
 784 02c0 0221     		movs	r1, #2
 785 02c2 036B     		ldr	r3, [r0, #48]
 786 02c4 0446     		mov	r4, r0
 787 02c6 9847     		blx	r3
 788              	.LVL59:
 789 02c8 0128     		cmp	r0, #1
 790 02ca 0546     		mov	r5, r0
 791 02cc 05D0     		beq	.L122
 288:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 792              		.loc 1 288 0
 793 02ce 0B21     		movs	r1, #11
 794 02d0 0120     		movs	r0, #1
 291:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_StartTask(task_t* task, scheduling_t* scheduling_task)
 795              		.loc 1 291 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 24


 796 02d2 BDE83840 		pop	{r3, r4, r5, lr}
 797              		.cfi_remember_state
 798              		.cfi_restore 14
 799              		.cfi_restore 5
 800              		.cfi_restore 4
 801              		.cfi_restore 3
 802              		.cfi_def_cfa_offset 0
 803              	.LVL60:
 288:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 804              		.loc 1 288 0
 805 02d6 FFF7FEBF 		b	OS_SetSwBug
 806              	.LVL61:
 807              	.L122:
 808              		.cfi_restore_state
 254:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* 3. suspended to ready (add to runqueue) */
 809              		.loc 1 254 0
 810 02da FFF7FEFF 		bl	LLF_INT_DISABLE
 811              	.LVL62:
 256:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 812              		.loc 1 256 0
 813 02de 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 814 02e0 5A07     		lsls	r2, r3, #29
 815 02e2 13D4     		bmi	.L111
 258:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                   || ( (task->active == True) && (task->NrOfInsAllowed > task->NrOfInsActivated) )/
 816              		.loc 1 258 0
 817 02e4 DB07     		lsls	r3, r3, #31
 818 02e6 03D5     		bpl	.L112
 259:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****               )
 819              		.loc 1 259 0
 820 02e8 2279     		ldrb	r2, [r4, #4]	@ zero_extendqisi2
 821 02ea 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 822 02ec 9A42     		cmp	r2, r3
 823 02ee 15D9     		bls	.L113
 824              	.L112:
 263:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                AddToSchedulingQueue(task);
 825              		.loc 1 263 0
 826 02f0 2046     		mov	r0, r4
 827 02f2 FFF7FEFF 		bl	AddToTaskQueue
 828              	.LVL63:
 829 02f6 0446     		mov	r4, r0
 830              	.LVL64:
 264:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                if(task != 0)
 831              		.loc 1 264 0
 832 02f8 FFF7FEFF 		bl	AddToSchedulingQueue
 833              	.LVL65:
 265:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                {
 834              		.loc 1 265 0
 835 02fc 9CB1     		cbz	r4, .L114
 267:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                }
 836              		.loc 1 267 0
 837 02fe 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 838 0300 0133     		adds	r3, r3, #1
 839 0302 6371     		strb	r3, [r4, #5]
 840              	.L115:
 291:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_StartTask(task_t* task, scheduling_t* scheduling_task)
 841              		.loc 1 291 0
 842 0304 BDE83840 		pop	{r3, r4, r5, lr}
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 25


 843              		.cfi_remember_state
 844              		.cfi_restore 14
 845              		.cfi_restore 5
 846              		.cfi_restore 4
 847              		.cfi_restore 3
 848              		.cfi_def_cfa_offset 0
 849              	.LVL66:
 284:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 850              		.loc 1 284 0
 851 0308 FFF7FEBF 		b	LLF_INT_ENABLE
 852              	.LVL67:
 853              	.L111:
 854              		.cfi_restore_state
 282:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 855              		.loc 1 282 0
 856 030c 2046     		mov	r0, r4
 857 030e FFF7FEFF 		bl	AddToIdleTaskQueue
 858              	.LVL68:
 291:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_StartTask(task_t* task, scheduling_t* scheduling_task)
 859              		.loc 1 291 0
 860 0312 BDE83840 		pop	{r3, r4, r5, lr}
 861              		.cfi_restore 14
 862              		.cfi_restore 5
 863              		.cfi_restore 4
 864              		.cfi_restore 3
 865              		.cfi_def_cfa_offset 0
 866              	.LVL69:
 284:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 867              		.loc 1 284 0
 868 0316 FFF7FEBF 		b	LLF_INT_ENABLE
 869              	.LVL70:
 870              	.L108:
 871 031a 7047     		bx	lr
 872              	.LVL71:
 873              	.L113:
 874              		.cfi_def_cfa_offset 16
 875              		.cfi_offset 3, -16
 876              		.cfi_offset 4, -12
 877              		.cfi_offset 5, -8
 878              		.cfi_offset 14, -4
 277:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             }
 879              		.loc 1 277 0
 880 031c 2846     		mov	r0, r5
 881 031e 0B21     		movs	r1, #11
 882 0320 FFF7FEFF 		bl	OS_SetSwBug
 883              	.LVL72:
 884 0324 EEE7     		b	.L115
 885              	.L114:
 271:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                }
 886              		.loc 1 271 0
 887 0326 0B21     		movs	r1, #11
 888 0328 0220     		movs	r0, #2
 889 032a FFF7FEFF 		bl	OS_SetSwBug
 890              	.LVL73:
 891 032e E9E7     		b	.L115
 892              		.cfi_endproc
 893              	.LFE5:
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 26


 895              		.align	1
 896              		.p2align 2,,3
 897              		.global	OS_StartTask
 898              		.syntax unified
 899              		.thumb
 900              		.thumb_func
 901              		.fpu softvfp
 903              	OS_StartTask:
 904              	.LFB6:
 293:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* OS_StartTask
 905              		.loc 1 293 0
 906              		.cfi_startproc
 907              		@ args = 0, pretend = 0, frame = 0
 908              		@ frame_needed = 0, uses_anonymous_args = 0
 909              	.LVL74:
 301:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 910              		.loc 1 301 0
 911 0330 0028     		cmp	r0, #0
 912 0332 3AD0     		beq	.L138
 301:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 913              		.loc 1 301 0 is_stmt 0 discriminator 1
 914 0334 0029     		cmp	r1, #0
 915 0336 38D0     		beq	.L138
 301:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 916              		.loc 1 301 0 discriminator 2
 917 0338 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 918 033a 12F0060F 		tst	r2, #6
 293:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* OS_StartTask
 919              		.loc 1 293 0 is_stmt 1 discriminator 2
 920 033e 70B5     		push	{r4, r5, r6, lr}
 921              		.cfi_def_cfa_offset 16
 922              		.cfi_offset 4, -16
 923              		.cfi_offset 5, -12
 924              		.cfi_offset 6, -8
 925              		.cfi_offset 14, -4
 926 0340 0546     		mov	r5, r0
 301:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 927              		.loc 1 301 0 discriminator 2
 928 0342 0CD0     		beq	.L123
 303:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 929              		.loc 1 303 0
 930 0344 026B     		ldr	r2, [r0, #48]
 931 0346 8AB3     		cbz	r2, .L125
 932 0348 0C46     		mov	r4, r1
 305:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 933              		.loc 1 305 0
 934 034a 0321     		movs	r1, #3
 935              	.LVL75:
 936 034c 9047     		blx	r2
 937              	.LVL76:
 938 034e 0128     		cmp	r0, #1
 939 0350 06D0     		beq	.L141
 329:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 940              		.loc 1 329 0
 941 0352 0621     		movs	r1, #6
 942 0354 0120     		movs	r0, #1
 343:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_TerminateTask(task_t* task, scheduling_t* scheduling_task)
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 27


 943              		.loc 1 343 0
 944 0356 BDE87040 		pop	{r4, r5, r6, lr}
 945              		.cfi_remember_state
 946              		.cfi_restore 14
 947              		.cfi_restore 6
 948              		.cfi_restore 5
 949              		.cfi_restore 4
 950              		.cfi_def_cfa_offset 0
 951              	.LVL77:
 329:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 952              		.loc 1 329 0
 953 035a FFF7FEBF 		b	OS_SetSwBug
 954              	.LVL78:
 955              	.L123:
 956              		.cfi_restore_state
 343:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_TerminateTask(task_t* task, scheduling_t* scheduling_task)
 957              		.loc 1 343 0
 958 035e 70BD     		pop	{r4, r5, r6, pc}
 959              	.LVL79:
 960              	.L141:
 961              	.LBB30:
 962              	.LBB31:
 307:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->active =  True;
 963              		.loc 1 307 0
 964 0360 FFF7FEFF 		bl	LLF_INT_DISABLE
 965              	.LVL80:
 308:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->wait_time = 0;
 966              		.loc 1 308 0
 967 0364 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 310:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_SAVE_SYSTEM_STACK((uint8*)&OS_MAIN_STACK);
 968              		.loc 1 310 0
 969 0366 95F82520 		ldrb	r2, [r5, #37]	@ zero_extendqisi2
 970 036a 85F82420 		strb	r2, [r5, #36]
 308:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->wait_time = 0;
 971              		.loc 1 308 0
 972 036e 43F00103 		orr	r3, r3, #1
 309:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->current_prio = task->default_prio;
 973              		.loc 1 309 0
 974 0372 0022     		movs	r2, #0
 308:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->wait_time = 0;
 975              		.loc 1 308 0
 976 0374 2B70     		strb	r3, [r5]
 309:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->current_prio = task->default_prio;
 977              		.loc 1 309 0
 978 0376 EA60     		str	r2, [r5, #12]
 311:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_RESTORETASK_ENVIRONMENT(task);
 979              		.loc 1 311 0
 980 0378 0F48     		ldr	r0, .L142
 981 037a FFF7FEFF 		bl	OS_TASK_SAVE_SYSTEM_STACK
 982              	.LVL81:
 312:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->start_time = OS_GetCurrentTime();
 983              		.loc 1 312 0
 984 037e 2846     		mov	r0, r5
 985 0380 FFF7FEFF 		bl	OS_TASK_RESTORETASK_ENVIRONMENT
 986              	.LVL82:
 313:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             EnableInterrupts();
 987              		.loc 1 313 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 28


 988 0384 FFF7FEFF 		bl	OS_GetCurrentTime
 989              	.LVL83:
 990 0388 2862     		str	r0, [r5, #32]
 314:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 991              		.loc 1 314 0
 992 038a FFF7FEFF 		bl	LLF_INT_ENABLE
 993              	.LVL84:
 317:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* change to user mode... */
 994              		.loc 1 317 0
 995 038e 2146     		mov	r1, r4
 996 0390 2846     		mov	r0, r5
 997 0392 FFF7FEFF 		bl	SET_RUNNING_TASK
 998              	.LVL85:
 319:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             {
 999              		.loc 1 319 0
 1000 0396 95F88430 		ldrb	r3, [r5, #132]	@ zero_extendqisi2
 1001 039a 0BB9     		cbnz	r3, .L127
 321:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             }
 1002              		.loc 1 321 0
 1003 039c FFF7FEFF 		bl	LLF_CHANGE_TO_UNPRIVILIGED_THREAD_MODE
 1004              	.LVL86:
 1005              	.L127:
 325:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 1006              		.loc 1 325 0
 1007 03a0 EB6A     		ldr	r3, [r5, #44]
 1008 03a2 2846     		mov	r0, r5
 1009              	.LBE31:
 1010              	.LBE30:
 343:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_TerminateTask(task_t* task, scheduling_t* scheduling_task)
 1011              		.loc 1 343 0
 1012 03a4 BDE87040 		pop	{r4, r5, r6, lr}
 1013              		.cfi_restore 14
 1014              		.cfi_restore 6
 1015              		.cfi_restore 5
 1016              		.cfi_restore 4
 1017              		.cfi_def_cfa_offset 0
 1018              	.LVL87:
 1019              	.LBB33:
 1020              	.LBB32:
 325:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 1021              		.loc 1 325 0
 1022 03a8 1847     		bx	r3	@ indirect register sibling call
 1023              	.LVL88:
 1024              	.L138:
 1025 03aa 7047     		bx	lr
 1026              	.L125:
 1027              		.cfi_def_cfa_offset 16
 1028              		.cfi_offset 4, -16
 1029              		.cfi_offset 5, -12
 1030              		.cfi_offset 6, -8
 1031              		.cfi_offset 14, -4
 1032              	.LBE32:
 1033              	.LBE33:
 334:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 1034              		.loc 1 334 0
 1035 03ac 0621     		movs	r1, #6
 1036              	.LVL89:
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 29


 1037 03ae 0220     		movs	r0, #2
 1038              	.LVL90:
 343:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_TerminateTask(task_t* task, scheduling_t* scheduling_task)
 1039              		.loc 1 343 0
 1040 03b0 BDE87040 		pop	{r4, r5, r6, lr}
 1041              		.cfi_restore 14
 1042              		.cfi_restore 6
 1043              		.cfi_restore 5
 1044              		.cfi_restore 4
 1045              		.cfi_def_cfa_offset 0
 1046              	.LVL91:
 334:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 1047              		.loc 1 334 0
 1048 03b4 FFF7FEBF 		b	OS_SetSwBug
 1049              	.LVL92:
 1050              	.L143:
 1051              		.align	2
 1052              	.L142:
 1053 03b8 00000000 		.word	OS_MAIN_STACK
 1054              		.cfi_endproc
 1055              	.LFE6:
 1057              		.align	1
 1058              		.p2align 2,,3
 1059              		.global	OS_TerminateTask
 1060              		.syntax unified
 1061              		.thumb
 1062              		.thumb_func
 1063              		.fpu softvfp
 1065              	OS_TerminateTask:
 1066              	.LFB7:
 345:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* Preempt task
 1067              		.loc 1 345 0
 1068              		.cfi_startproc
 1069              		@ args = 0, pretend = 0, frame = 0
 1070              		@ frame_needed = 0, uses_anonymous_args = 0
 1071              	.LVL93:
 353:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 1072              		.loc 1 353 0
 1073 03bc 78B3     		cbz	r0, .L157
 353:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 1074              		.loc 1 353 0 is_stmt 0 discriminator 1
 1075 03be 71B3     		cbz	r1, .L157
 355:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 1076              		.loc 1 355 0 is_stmt 1
 1077 03c0 026B     		ldr	r2, [r0, #48]
 345:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* Preempt task
 1078              		.loc 1 345 0
 1079 03c2 38B5     		push	{r3, r4, r5, lr}
 1080              		.cfi_def_cfa_offset 16
 1081              		.cfi_offset 3, -16
 1082              		.cfi_offset 4, -12
 1083              		.cfi_offset 5, -8
 1084              		.cfi_offset 14, -4
 1085 03c4 0446     		mov	r4, r0
 355:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 1086              		.loc 1 355 0
 1087 03c6 52B1     		cbz	r2, .L145
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 30


 1088 03c8 0D46     		mov	r5, r1
 357:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 1089              		.loc 1 357 0
 1090 03ca 0121     		movs	r1, #1
 1091              	.LVL94:
 1092 03cc 9047     		blx	r2
 1093              	.LVL95:
 1094 03ce 0128     		cmp	r0, #1
 1095 03d0 0BD0     		beq	.L160
 372:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 1096              		.loc 1 372 0
 1097 03d2 0821     		movs	r1, #8
 1098 03d4 0120     		movs	r0, #1
 384:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_TaskDispatcher(void)
 1099              		.loc 1 384 0
 1100 03d6 BDE83840 		pop	{r3, r4, r5, lr}
 1101              		.cfi_remember_state
 1102              		.cfi_restore 14
 1103              		.cfi_restore 5
 1104              		.cfi_restore 4
 1105              		.cfi_restore 3
 1106              		.cfi_def_cfa_offset 0
 1107              	.LVL96:
 372:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 1108              		.loc 1 372 0
 1109 03da FFF7FEBF 		b	OS_SetSwBug
 1110              	.LVL97:
 1111              	.L145:
 1112              		.cfi_restore_state
 1113              	.LBB36:
 1114              	.LBB37:
 377:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 1115              		.loc 1 377 0
 1116 03de 0821     		movs	r1, #8
 1117              	.LVL98:
 1118 03e0 0220     		movs	r0, #2
 1119              	.LVL99:
 1120              	.LBE37:
 1121              	.LBE36:
 384:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_TaskDispatcher(void)
 1122              		.loc 1 384 0
 1123 03e2 BDE83840 		pop	{r3, r4, r5, lr}
 1124              		.cfi_remember_state
 1125              		.cfi_restore 14
 1126              		.cfi_restore 5
 1127              		.cfi_restore 4
 1128              		.cfi_restore 3
 1129              		.cfi_def_cfa_offset 0
 1130              	.LVL100:
 1131              	.LBB40:
 1132              	.LBB38:
 377:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 1133              		.loc 1 377 0
 1134 03e6 FFF7FEBF 		b	OS_SetSwBug
 1135              	.LVL101:
 1136              	.L160:
 1137              		.cfi_restore_state
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 31


 1138              	.LBE38:
 1139              	.LBE40:
 359:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TaskSaveTaskEnvironment(task);
 1140              		.loc 1 359 0
 1141 03ea FFF7FEFF 		bl	LLF_INT_DISABLE
 1142              	.LVL102:
 360:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_RESTORE_SYSTEM_STACK((uint8*)&OS_MAIN_STACK);
 1143              		.loc 1 360 0
 1144 03ee 2046     		mov	r0, r4
 1145 03f0 FFF7FEFF 		bl	OS_TaskSaveTaskEnvironment
 1146              	.LVL103:
 361:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DeleteFromTaskQueue(task);
 1147              		.loc 1 361 0
 1148 03f4 0C48     		ldr	r0, .L161
 1149 03f6 FFF7FEFF 		bl	OS_TASK_RESTORE_SYSTEM_STACK
 1150              	.LVL104:
 362:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DeleteFromSchedulingQueue(scheduling_task);
 1151              		.loc 1 362 0
 1152 03fa 2046     		mov	r0, r4
 1153 03fc FFF7FEFF 		bl	DeleteFromTaskQueue
 1154              	.LVL105:
 363:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 1155              		.loc 1 363 0
 1156 0400 2846     		mov	r0, r5
 1157 0402 FFF7FEFF 		bl	DeleteFromSchedulingQueue
 1158              	.LVL106:
 365:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* reset the prio increase for waiting */
 1159              		.loc 1 365 0
 1160 0406 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 367:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             EnableInterrupts();
 1161              		.loc 1 367 0
 1162 0408 94F82520 		ldrb	r2, [r4, #37]	@ zero_extendqisi2
 1163 040c 84F82420 		strb	r2, [r4, #36]
 365:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* reset the prio increase for waiting */
 1164              		.loc 1 365 0
 1165 0410 6FF30003 		bfc	r3, #0, #1
 1166 0414 2370     		strb	r3, [r4]
 384:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_TaskDispatcher(void)
 1167              		.loc 1 384 0
 1168 0416 BDE83840 		pop	{r3, r4, r5, lr}
 1169              		.cfi_restore 14
 1170              		.cfi_restore 5
 1171              		.cfi_restore 4
 1172              		.cfi_restore 3
 1173              		.cfi_def_cfa_offset 0
 1174              	.LVL107:
 368:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 1175              		.loc 1 368 0
 1176 041a FFF7FEBF 		b	LLF_INT_ENABLE
 1177              	.LVL108:
 1178              	.L157:
 1179              	.LBB41:
 1180              	.LBB39:
 377:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 1181              		.loc 1 377 0
 1182 041e 0821     		movs	r1, #8
 1183              	.LVL109:
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 32


 1184 0420 0220     		movs	r0, #2
 1185              	.LVL110:
 1186 0422 FFF7FEBF 		b	OS_SetSwBug
 1187              	.LVL111:
 1188              	.L162:
 1189 0426 00BF     		.align	2
 1190              	.L161:
 1191 0428 00000000 		.word	OS_MAIN_STACK
 1192              	.LBE39:
 1193              	.LBE41:
 1194              		.cfi_endproc
 1195              	.LFE7:
 1197              		.global	__aeabi_ui2d
 1198              		.global	__aeabi_dcmpgt
 1199              		.align	1
 1200              		.p2align 2,,3
 1201              		.global	OS_TaskDispatcher
 1202              		.syntax unified
 1203              		.thumb
 1204              		.thumb_func
 1205              		.fpu softvfp
 1207              	OS_TaskDispatcher:
 1208              	.LFB8:
 386:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* called in an certain core context (Core_0/1/2/3)*/
 1209              		.loc 1 386 0
 1210              		.cfi_startproc
 1211              		@ args = 0, pretend = 0, frame = 0
 1212              		@ frame_needed = 0, uses_anonymous_args = 0
 1213              	.LVL112:
 1214 042c 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1215              		.cfi_def_cfa_offset 32
 1216              		.cfi_offset 3, -32
 1217              		.cfi_offset 4, -28
 1218              		.cfi_offset 5, -24
 1219              		.cfi_offset 6, -20
 1220              		.cfi_offset 7, -16
 1221              		.cfi_offset 8, -12
 1222              		.cfi_offset 9, -8
 1223              		.cfi_offset 14, -4
 400:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_task_ptr = GetRunningSchedulingQueueElementPtr();
 1224              		.loc 1 400 0
 1225 0430 FFF7FEFF 		bl	GetRunningTask
 1226              	.LVL113:
 1227 0434 0446     		mov	r4, r0
 1228              	.LVL114:
 401:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* Preempt Task */
 1229              		.loc 1 401 0
 1230 0436 FFF7FEFF 		bl	GetRunningSchedulingQueueElementPtr
 1231              	.LVL115:
 403:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 1232              		.loc 1 403 0
 1233 043a 74B1     		cbz	r4, .L164
 1234 043c 0546     		mov	r5, r0
 403:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 1235              		.loc 1 403 0 is_stmt 0 discriminator 1
 1236 043e 60B1     		cbz	r0, .L164
 1237              	.LVL116:
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 33


 1238              	.LBB48:
 1239              	.LBB49:
 355:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 1240              		.loc 1 355 0 is_stmt 1
 1241 0440 236B     		ldr	r3, [r4, #48]
 1242 0442 002B     		cmp	r3, #0
 1243 0444 00F09B80 		beq	.L165
 357:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 1244              		.loc 1 357 0
 1245 0448 0121     		movs	r1, #1
 1246 044a 2046     		mov	r0, r4
 1247              	.LVL117:
 1248 044c 9847     		blx	r3
 1249              	.LVL118:
 1250 044e 0128     		cmp	r0, #1
 1251 0450 7CD0     		beq	.L202
 372:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 1252              		.loc 1 372 0
 1253 0452 0821     		movs	r1, #8
 1254 0454 0120     		movs	r0, #1
 1255 0456 FFF7FEFF 		bl	OS_SetSwBug
 1256              	.LVL119:
 1257              	.L164:
 1258              	.LBE49:
 1259              	.LBE48:
 1260              	.LBB53:
 1261              	.LBB54:
 436:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_2(void* task_ptr)
 437:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 438:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_t* scheduling_task_ptr = 0;
 439:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter(task_ptr);
 440:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* worker task */
 441:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_task_ptr = GetRunningSchedulingQueueElementPtr();
 442:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* do some things */
 443:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    TASK1_CALL_NR++;
 444:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 445:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 446:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* end */
 447:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_TerminateTask(task_ptr,scheduling_task_ptr);
 448:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 449:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_3(void* task_ptr)
 450:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 451:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_t* scheduling_task_ptr = 0;
 452:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter(task_ptr);
 453:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* worker task */
 454:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_task_ptr = GetRunningSchedulingQueueElementPtr();
 455:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* do some things */
 456:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    TASK1_CALL_NR++;
 457:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 458:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 459:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* end */
 460:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_TerminateTask(task_ptr,scheduling_task_ptr);
 461:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 462:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_InitTasks(void)
 463:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 464:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_t* task_ptr = 0;
 465:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    LAST_CURRENT_TIME = OS_GetCurrentTime();
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 34


 466:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 467:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter (TASK_GROUP_1);
 468:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter (TASK_GROUP_2);
 469:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter (TASK_GROUP_3);
 470:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter (TASK_GROUP_4);
 471:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter (TASK_GROUP_5);
 472:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 473:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****     /*
 474:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    set task_state for all tasks to Task_unspecified
 475:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****     */
 476:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_InitTaskQueue();
 477:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 478:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* setup idle task */
 479:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_ptr = &TASK_0_VAR;
 480:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_InitTask(task_ptr,                          /* task */
 481:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_0,                           /* Task Function*/
 482:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 1,                                 /* Nr of allowed instances*/
 483:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 True,                              /* Idle Task */
 484:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_GROUP_1,                     /* Task Group */
 485:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 (unsigned_char_t*)&TASK_STACK[0],  /* Task_stack */
 486:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 200,                                /* Stack Size */
 487:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 ePriviligeMode_unpriviliged_thread_mode, /* Unpriviliged Thread Mode */
 488:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 Core0,                            /* Cortex M4 has only 1 core */
 489:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 0                                   /* default prio */
 490:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                );
 491:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    AddToSchedulingQueue(task_ptr);
 492:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SaveTaskPtr(task_ptr, Task_0_ptr);
 493:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 494:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* setup worker task */
 495:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_ptr = &TASK_1_VAR;
 496:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_InitTask(task_ptr,      /* task */
 497:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_1,       /* Task Function*/
 498:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 1,             /* Nr of allowed instances*/
 499:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 False,          /* Idle Task */
 500:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_GROUP_1, /* Task Group */
 501:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 (unsigned_char_t*)&TASK_STACK[1],/* Task_stack */
 502:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 200,            /* Stack Size */
 503:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 ePriviligeMode_unpriviliged_thread_mode, /* Unpriviliged Thread Mode */
 504:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 Core0,
 505:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 1                                   /* default prio */
 506:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                );
 507:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    AddToSchedulingQueue(task_ptr);
 508:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SaveTaskPtr(task_ptr, Task_1_ptr);
 509:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 510:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* setup worker task */
 511:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_ptr = &TASK_2_VAR;
 512:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_InitTask(task_ptr,      /* task */
 513:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_2,       /* Task Function*/
 514:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 1,             /* Nr of allowed instances*/
 515:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 False,          /* Idle Task */
 516:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_GROUP_2, /* Task Group */
 517:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 (unsigned_char_t*)&TASK_STACK[2],/* Task_stack */
 518:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 200,            /* Stack Size */
 519:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 ePriviligeMode_unpriviliged_thread_mode, /* Unpriviliged Thread Mode */
 520:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 Core0,
 521:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 2                                   /* default prio */
 522:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                );
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 35


 523:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    AddToSchedulingQueue(task_ptr);
 524:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SaveTaskPtr(task_ptr, Task_2_ptr);
 525:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 526:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* setup worker task */
 527:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_ptr = &TASK_3_VAR;
 528:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_InitTask(task_ptr,      /* task */
 529:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_3,       /* Task Function*/
 530:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 1,             /* Nr of allowed instances*/
 531:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 False,          /* Idle Task */
 532:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_GROUP_3, /* Task Group */
 533:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 (unsigned_char_t*)&TASK_STACK[3],/* Task_stack */
 534:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 200,           /* Stack Size */
 535:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 ePriviligeMode_unpriviliged_thread_mode, /* Unpriviliged Thread Mode */
 536:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 Core0,
 537:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 3                                   /* default prio */
 538:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                );
 539:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    AddToSchedulingQueue(task_ptr);
 540:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SaveTaskPtr(task_ptr, Task_3_ptr);
 541:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 542:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 543:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 544:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local scheduling_t* OS_TaskScheduler(void)
 545:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 546:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 547:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_t*    scheduling_queue_member;
 548:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    unsigned_char_t element_nr;
 549:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 550:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    unsigned_char_t Winner_prio = 0;
 551:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_t*         task = 0;
 552:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_t*         Winner_task = 0;
 553:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_t*   Winner_scheduling_queue_member = 0;
 554:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 555:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduler_time_t delta_time = OS_GetCurrentTime() - LAST_CURRENT_TIME;
 1262              		.loc 1 555 0
 1263 045a 4B4C     		ldr	r4, .L205
 1264              	.LVL120:
 556:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 557:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    LAST_CURRENT_TIME = OS_GetCurrentTime();
 558:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 559:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter(Winner_task);
 560:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*
 561:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x const for single task: task->default_prio // low = 0,.....high=100
 562:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x var   for single task: task->current_prio // see prio_std
 563:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x var   for single task: task->wait_time    //
 564:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x var   for single task: task->exe_time
 565:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x const for single task: task->TimeToPrioInc
 566:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x const for single task: task->max_allowed_wait_time
 567:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x const for single task: task->min_allowed_wait_time
 568:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x const for single task: task->overwaittime_per_prio_inc_step //e.g. 100*MinTimeSlice_us
 569:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x const for single task: task->task_group  //to allow processor access control by groups (e.g. u
 570:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x const for single task: task->WaitActUntil
 571:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    (task_group is designed to allow proccessor access control between e.g. Customer Software Task a
 572:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    */
 573:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    For_all_tasks_in_queue(element_nr)
 574:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 575:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       scheduling_queue_member = GetFromSchedulingQueue(element_nr);
 576:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       /*task will have a pointer on the task_obj, and might be equal to "(task_t*) 0" */
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 36


 577:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       task             = GetFromTaskQueue(scheduling_queue_member);
 578:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       /* increase prio: high numbers->high prio */
 579:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       if((task != 0)&&(task->task_queued != False))
 580:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 581:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->wait_time >= task->TimeToPrioInc)
 582:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 583:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->current_prio = task->current_prio + task->overwaittime_per_prio_inc_step;
 584:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 585:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* in case wait condition not yet fulfilled, set prio to 0 */
 586:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->WaitActUntil > OS_GetCurrentTime())
 587:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 588:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->current_prio = 0;
 589:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 590:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->wait_time > task->max_allowed_wait_time)
 591:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 592:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* set bug */
 593:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_SetSwBug(os_bug_task_max_wait_time_reached, Func_TaskScheduler);
 594:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 595:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* not active TASK_RUN_QUEUE elements have no valid task_group!!*/
 596:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->task_group!=0)
 597:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 598:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* usage the exe time for scheduling strategy */
 599:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             if(task->task_group->exe_time > task->task_group->fair_exe_time)
 600:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             {
 601:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                if(task->exe_time > Task_min_time)/* guarantee min time */
 1265              		.loc 1 601 0
 1266 045c DFF83091 		ldr	r9, .L205+8
 555:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 1267              		.loc 1 555 0
 1268 0460 FFF7FEFF 		bl	OS_GetCurrentTime
 1269              	.LVL121:
 1270 0464 2668     		ldr	r6, [r4]
 1271 0466 861B     		subs	r6, r0, r6
 1272              	.LVL122:
 557:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 1273              		.loc 1 557 0
 1274 0468 FFF7FEFF 		bl	OS_GetCurrentTime
 1275              	.LVL123:
 1276 046c 0025     		movs	r5, #0
 1277 046e 2060     		str	r0, [r4]
 1278              	.LVL124:
 1279              		.loc 1 601 0
 1280 0470 4FF00008 		mov	r8, #0
 1281 0474 14E0     		b	.L175
 1282              	.LVL125:
 1283              	.L172:
 596:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 1284              		.loc 1 596 0
 1285 0476 A36B     		ldr	r3, [r4, #56]
 1286 0478 002B     		cmp	r3, #0
 1287 047a 39D0     		beq	.L173
 1288              	.L204:
 599:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             {
 1289              		.loc 1 599 0
 1290 047c D3E90023 		ldrd	r2, r3, [r3]
 1291 0480 9A42     		cmp	r2, r3
 1292 0482 0AD9     		bls	.L168
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 37


 1293              		.loc 1 601 0
 1294 0484 E069     		ldr	r0, [r4, #28]
 1295 0486 FFF7FEFF 		bl	__aeabi_ui2d
 1296              	.LVL126:
 1297 048a 4246     		mov	r2, r8
 1298 048c 4B46     		mov	r3, r9
 1299 048e FFF7FEFF 		bl	__aeabi_dcmpgt
 1300              	.LVL127:
 1301 0492 10B1     		cbz	r0, .L168
 602:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                {
 603:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                   task->current_prio = 0;
 1302              		.loc 1 603 0
 1303 0494 0023     		movs	r3, #0
 1304 0496 84F82430 		strb	r3, [r4, #36]
 1305              	.L168:
 1306              	.LVL128:
 1307 049a 0135     		adds	r5, r5, #1
 1308              	.LVL129:
 573:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 1309              		.loc 1 573 0
 1310 049c 0A2D     		cmp	r5, #10
 1311 049e 2ED0     		beq	.L203
 1312              	.LVL130:
 1313              	.L175:
 575:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       /*task will have a pointer on the task_obj, and might be equal to "(task_t*) 0" */
 1314              		.loc 1 575 0
 1315 04a0 E8B2     		uxtb	r0, r5
 1316 04a2 FFF7FEFF 		bl	GetFromSchedulingQueue
 1317              	.LVL131:
 577:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       /* increase prio: high numbers->high prio */
 1318              		.loc 1 577 0
 1319 04a6 FFF7FEFF 		bl	GetFromTaskQueue
 1320              	.LVL132:
 579:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 1321              		.loc 1 579 0
 1322 04aa 0446     		mov	r4, r0
 1323 04ac 0028     		cmp	r0, #0
 1324 04ae F4D0     		beq	.L168
 1325 04b0 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1326 04b2 9A07     		lsls	r2, r3, #30
 1327 04b4 F1D5     		bpl	.L168
 581:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 1328              		.loc 1 581 0
 1329 04b6 D0E90323 		ldrd	r2, r3, [r0, #12]
 1330 04ba 9A42     		cmp	r2, r3
 1331 04bc 05D3     		bcc	.L170
 583:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 1332              		.loc 1 583 0
 1333 04be 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 1334 04c2 4269     		ldr	r2, [r0, #20]
 1335 04c4 1344     		add	r3, r3, r2
 1336 04c6 80F82430 		strb	r3, [r0, #36]
 1337              	.L170:
 586:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 1338              		.loc 1 586 0
 1339 04ca A768     		ldr	r7, [r4, #8]
 1340 04cc FFF7FEFF 		bl	OS_GetCurrentTime
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 38


 1341              	.LVL133:
 1342 04d0 8742     		cmp	r7, r0
 588:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 1343              		.loc 1 588 0
 1344 04d2 84BF     		itt	hi
 1345 04d4 0023     		movhi	r3, #0
 1346 04d6 84F82430 		strbhi	r3, [r4, #36]
 590:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 1347              		.loc 1 590 0
 1348 04da E268     		ldr	r2, [r4, #12]
 1349 04dc A369     		ldr	r3, [r4, #24]
 1350 04de 9A42     		cmp	r2, r3
 1351 04e0 C9D9     		bls	.L172
 593:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 1352              		.loc 1 593 0
 1353 04e2 0921     		movs	r1, #9
 1354 04e4 0320     		movs	r0, #3
 1355 04e6 FFF7FEFF 		bl	OS_SetSwBug
 1356              	.LVL134:
 596:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 1357              		.loc 1 596 0
 1358 04ea A36B     		ldr	r3, [r4, #56]
 1359 04ec 002B     		cmp	r3, #0
 1360 04ee C5D1     		bne	.L204
 1361              	.L173:
 604:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 605:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                }
 606:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             }
 607:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 608:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          else
 609:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 610:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_SetSwBug(os_bug_null_pointer, Func_TaskScheduler);
 1362              		.loc 1 610 0
 1363 04f0 0921     		movs	r1, #9
 1364 04f2 0220     		movs	r0, #2
 1365 04f4 0135     		adds	r5, r5, #1
 1366              	.LVL135:
 1367 04f6 FFF7FEFF 		bl	OS_SetSwBug
 1368              	.LVL136:
 573:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 1369              		.loc 1 573 0
 1370 04fa 0A2D     		cmp	r5, #10
 1371 04fc D0D1     		bne	.L175
 1372              	.L203:
 1373 04fe 0024     		movs	r4, #0
 1374              	.LVL137:
 553:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 1375              		.loc 1 553 0
 1376 0500 A046     		mov	r8, r4
 550:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_t*         task = 0;
 1377              		.loc 1 550 0
 1378 0502 2746     		mov	r7, r4
 1379              	.LVL138:
 1380              	.L178:
 611:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 612:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 613:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       /* do not set bug, because task =0 is used for empty queue elements
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 39


 614:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       else
 615:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 616:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****           OS_SetSwBug(os_bug_null_pointer, Func_TaskScheduler);
 617:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 618:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       */
 619:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 620:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    For_all_tasks_in_queue(element_nr)
 621:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 622:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       scheduling_queue_member = GetFromSchedulingQueue(element_nr);
 1381              		.loc 1 622 0
 1382 0504 E0B2     		uxtb	r0, r4
 1383 0506 FFF7FEFF 		bl	GetFromSchedulingQueue
 1384              	.LVL139:
 1385 050a 0546     		mov	r5, r0
 1386              	.LVL140:
 623:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       task             = GetFromTaskQueue(scheduling_queue_member);
 1387              		.loc 1 623 0
 1388 050c FFF7FEFF 		bl	GetFromTaskQueue
 1389              	.LVL141:
 1390 0510 0134     		adds	r4, r4, #1
 1391              	.LVL142:
 624:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       if(task != 0)
 1392              		.loc 1 624 0
 1393 0512 58B1     		cbz	r0, .L176
 625:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 626:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /*update wait time */
 627:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->IdleTask != True)
 1394              		.loc 1 627 0
 1395 0514 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1396 0516 5B07     		lsls	r3, r3, #29
 1397 0518 02D4     		bmi	.L177
 628:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 629:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->wait_time += delta_time;
 1398              		.loc 1 629 0
 1399 051a C368     		ldr	r3, [r0, #12]
 1400 051c 3344     		add	r3, r3, r6
 1401 051e C360     		str	r3, [r0, #12]
 1402              	.L177:
 630:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 631:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* search for task with highest prio and assign it to Winner_task */
 632:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->current_prio > Winner_prio)
 1403              		.loc 1 632 0
 1404 0520 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 1405 0524 BB42     		cmp	r3, r7
 633:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 634:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             Winner_prio = task->current_prio;
 635:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             Winner_task = task;
 636:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             Winner_scheduling_queue_member = scheduling_queue_member;
 1406              		.loc 1 636 0
 1407 0526 84BF     		itt	hi
 1408 0528 A846     		movhi	r8, r5
 632:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 1409              		.loc 1 632 0
 1410 052a 1F46     		movhi	r7, r3
 1411              	.LVL143:
 1412              	.L176:
 620:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 40


 1413              		.loc 1 620 0
 1414 052c 0A2C     		cmp	r4, #10
 1415 052e E9D1     		bne	.L178
 1416              	.LVL144:
 1417              	.LBE54:
 1418              	.LBE53:
 409:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 1419              		.loc 1 409 0
 1420 0530 B8F1000F 		cmp	r8, #0
 1421 0534 08D0     		beq	.L163
 411:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 1422              		.loc 1 411 0
 1423 0536 4046     		mov	r0, r8
 1424 0538 FFF7FEFF 		bl	GetFromTaskQueue
 1425              	.LVL145:
 413:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 1426              		.loc 1 413 0
 1427 053c 20B1     		cbz	r0, .L163
 415:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 1428              		.loc 1 415 0
 1429 053e 4146     		mov	r1, r8
 417:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_0(void* task_ptr)
 1430              		.loc 1 417 0
 1431 0540 BDE8F843 		pop	{r3, r4, r5, r6, r7, r8, r9, lr}
 1432              		.cfi_remember_state
 1433              		.cfi_restore 14
 1434              		.cfi_restore 9
 1435              		.cfi_restore 8
 1436              		.cfi_restore 7
 1437              		.cfi_restore 6
 1438              		.cfi_restore 5
 1439              		.cfi_restore 4
 1440              		.cfi_restore 3
 1441              		.cfi_def_cfa_offset 0
 415:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 1442              		.loc 1 415 0
 1443 0544 FFF7FEBF 		b	OS_StartTask
 1444              	.LVL146:
 1445              	.L163:
 1446              		.cfi_restore_state
 417:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_0(void* task_ptr)
 1447              		.loc 1 417 0
 1448 0548 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1449              	.LVL147:
 1450              	.L202:
 1451              	.LBB55:
 1452              	.LBB52:
 359:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TaskSaveTaskEnvironment(task);
 1453              		.loc 1 359 0
 1454 054c FFF7FEFF 		bl	LLF_INT_DISABLE
 1455              	.LVL148:
 360:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_RESTORE_SYSTEM_STACK((uint8*)&OS_MAIN_STACK);
 1456              		.loc 1 360 0
 1457 0550 2046     		mov	r0, r4
 1458 0552 FFF7FEFF 		bl	OS_TaskSaveTaskEnvironment
 1459              	.LVL149:
 361:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DeleteFromTaskQueue(task);
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 41


 1460              		.loc 1 361 0
 1461 0556 0D48     		ldr	r0, .L205+4
 1462 0558 FFF7FEFF 		bl	OS_TASK_RESTORE_SYSTEM_STACK
 1463              	.LVL150:
 362:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DeleteFromSchedulingQueue(scheduling_task);
 1464              		.loc 1 362 0
 1465 055c 2046     		mov	r0, r4
 1466 055e FFF7FEFF 		bl	DeleteFromTaskQueue
 1467              	.LVL151:
 363:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 1468              		.loc 1 363 0
 1469 0562 2846     		mov	r0, r5
 1470 0564 FFF7FEFF 		bl	DeleteFromSchedulingQueue
 1471              	.LVL152:
 365:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* reset the prio increase for waiting */
 1472              		.loc 1 365 0
 1473 0568 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 367:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             EnableInterrupts();
 1474              		.loc 1 367 0
 1475 056a 94F82520 		ldrb	r2, [r4, #37]	@ zero_extendqisi2
 1476 056e 84F82420 		strb	r2, [r4, #36]
 365:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* reset the prio increase for waiting */
 1477              		.loc 1 365 0
 1478 0572 6FF30003 		bfc	r3, #0, #1
 1479 0576 2370     		strb	r3, [r4]
 368:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 1480              		.loc 1 368 0
 1481 0578 FFF7FEFF 		bl	LLF_INT_ENABLE
 1482              	.LVL153:
 1483 057c 6DE7     		b	.L164
 1484              	.LVL154:
 1485              	.L165:
 1486              	.LBB50:
 1487              	.LBB51:
 377:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 1488              		.loc 1 377 0
 1489 057e 0821     		movs	r1, #8
 1490 0580 0220     		movs	r0, #2
 1491              	.LVL155:
 1492 0582 FFF7FEFF 		bl	OS_SetSwBug
 1493              	.LVL156:
 1494 0586 68E7     		b	.L164
 1495              	.L206:
 1496              		.align	2
 1497              	.L205:
 1498 0588 00000000 		.word	LAST_CURRENT_TIME
 1499 058c 00000000 		.word	OS_MAIN_STACK
 1500 0590 0000F03F 		.word	1072693248
 1501              	.LBE51:
 1502              	.LBE50:
 1503              	.LBE52:
 1504              	.LBE55:
 1505              		.cfi_endproc
 1506              	.LFE8:
 1508              		.align	1
 1509              		.p2align 2,,3
 1510              		.global	OS_InitTasks
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 42


 1511              		.syntax unified
 1512              		.thumb
 1513              		.thumb_func
 1514              		.fpu softvfp
 1516              	OS_InitTasks:
 1517              	.LFB13:
 463:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_t* task_ptr = 0;
 1518              		.loc 1 463 0
 1519              		.cfi_startproc
 1520              		@ args = 0, pretend = 0, frame = 0
 1521              		@ frame_needed = 0, uses_anonymous_args = 0
 1522              	.LVL157:
 1523 0594 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1524              		.cfi_def_cfa_offset 28
 1525              		.cfi_offset 4, -28
 1526              		.cfi_offset 5, -24
 1527              		.cfi_offset 6, -20
 1528              		.cfi_offset 7, -16
 1529              		.cfi_offset 8, -12
 1530              		.cfi_offset 9, -8
 1531              		.cfi_offset 14, -4
 1532 0598 87B0     		sub	sp, sp, #28
 1533              		.cfi_def_cfa_offset 56
 465:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 1534              		.loc 1 465 0
 1535 059a FFF7FEFF 		bl	OS_GetCurrentTime
 1536              	.LVL158:
 1537 059e 2F4B     		ldr	r3, .L209
 480:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_0,                           /* Task Function*/
 1538              		.loc 1 480 0
 1539 05a0 2F4E     		ldr	r6, .L209+4
 1540 05a2 304D     		ldr	r5, .L209+8
 465:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 1541              		.loc 1 465 0
 1542 05a4 1860     		str	r0, [r3]
 480:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_0,                           /* Task Function*/
 1543              		.loc 1 480 0
 1544 05a6 0024     		movs	r4, #0
 476:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 1545              		.loc 1 476 0
 1546 05a8 FFF7FEFF 		bl	OS_InitTaskQueue
 1547              	.LVL159:
 480:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_0,                           /* Task Function*/
 1548              		.loc 1 480 0
 1549 05ac C827     		movs	r7, #200
 1550 05ae 0123     		movs	r3, #1
 1551 05b0 DFF8D080 		ldr	r8, .L209+40
 1552 05b4 CDF80080 		str	r8, [sp]
 1553 05b8 1A46     		mov	r2, r3
 1554 05ba 3046     		mov	r0, r6
 1555 05bc CDE90157 		strd	r5, r7, [sp, #4]
 1556 05c0 2949     		ldr	r1, .L209+12
 1557 05c2 0594     		str	r4, [sp, #20]
 1558 05c4 CDE90344 		strd	r4, r4, [sp, #12]
 1559 05c8 FFF7FEFF 		bl	OS_InitTask
 1560              	.LVL160:
 496:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_1,       /* Task Function*/
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 43


 1561              		.loc 1 496 0
 1562 05cc DFF8B890 		ldr	r9, .L209+44
 491:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SaveTaskPtr(task_ptr, Task_0_ptr);
 1563              		.loc 1 491 0
 1564 05d0 3046     		mov	r0, r6
 1565 05d2 FFF7FEFF 		bl	AddToSchedulingQueue
 1566              	.LVL161:
 496:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_1,       /* Task Function*/
 1567              		.loc 1 496 0
 1568 05d6 0126     		movs	r6, #1
 1569 05d8 05F5FA63 		add	r3, r5, #2000
 1570 05dc CDE90083 		strd	r8, r3, [sp]
 1571 05e0 3246     		mov	r2, r6
 1572 05e2 2346     		mov	r3, r4
 1573 05e4 4846     		mov	r0, r9
 1574 05e6 2149     		ldr	r1, .L209+16
 1575 05e8 0297     		str	r7, [sp, #8]
 1576 05ea CDE90344 		strd	r4, r4, [sp, #12]
 1577 05ee 0596     		str	r6, [sp, #20]
 1578 05f0 FFF7FEFF 		bl	OS_InitTask
 1579              	.LVL162:
 512:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_2,       /* Task Function*/
 1580              		.loc 1 512 0
 1581 05f4 DFF89480 		ldr	r8, .L209+48
 507:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SaveTaskPtr(task_ptr, Task_1_ptr);
 1582              		.loc 1 507 0
 1583 05f8 4846     		mov	r0, r9
 1584 05fa FFF7FEFF 		bl	AddToSchedulingQueue
 1585              	.LVL163:
 512:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_2,       /* Task Function*/
 1586              		.loc 1 512 0
 1587 05fe 05F57A65 		add	r5, r5, #4000
 1588 0602 4FF0020C 		mov	ip, #2
 1589 0606 1A49     		ldr	r1, .L209+20
 1590 0608 CDF814C0 		str	ip, [sp, #20]
 1591 060c 2346     		mov	r3, r4
 1592 060e 3246     		mov	r2, r6
 1593 0610 0195     		str	r5, [sp, #4]
 1594 0612 4046     		mov	r0, r8
 1595 0614 0091     		str	r1, [sp]
 1596 0616 CDE90344 		strd	r4, r4, [sp, #12]
 1597 061a 1649     		ldr	r1, .L209+24
 1598 061c 0297     		str	r7, [sp, #8]
 1599 061e FFF7FEFF 		bl	OS_InitTask
 1600              	.LVL164:
 523:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SaveTaskPtr(task_ptr, Task_2_ptr);
 1601              		.loc 1 523 0
 1602 0622 4046     		mov	r0, r8
 1603 0624 FFF7FEFF 		bl	AddToSchedulingQueue
 1604              	.LVL165:
 528:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_3,       /* Task Function*/
 1605              		.loc 1 528 0
 1606 0628 134D     		ldr	r5, .L209+28
 1607 062a DFF864C0 		ldr	ip, .L209+52
 1608 062e 1349     		ldr	r1, .L209+32
 1609 0630 0297     		str	r7, [sp, #8]
 1610 0632 4FF0030E 		mov	lr, #3
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 44


 1611 0636 2846     		mov	r0, r5
 1612 0638 CDE9001C 		strd	r1, ip, [sp]
 1613 063c CDE90344 		strd	r4, r4, [sp, #12]
 1614 0640 2346     		mov	r3, r4
 1615 0642 3246     		mov	r2, r6
 1616 0644 CDF814E0 		str	lr, [sp, #20]
 1617 0648 0D49     		ldr	r1, .L209+36
 1618 064a FFF7FEFF 		bl	OS_InitTask
 1619              	.LVL166:
 539:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SaveTaskPtr(task_ptr, Task_3_ptr);
 1620              		.loc 1 539 0
 1621 064e 2846     		mov	r0, r5
 541:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 1622              		.loc 1 541 0
 1623 0650 07B0     		add	sp, sp, #28
 1624              		.cfi_def_cfa_offset 28
 1625              		@ sp needed
 1626 0652 BDE8F043 		pop	{r4, r5, r6, r7, r8, r9, lr}
 1627              		.cfi_restore 14
 1628              		.cfi_restore 9
 1629              		.cfi_restore 8
 1630              		.cfi_restore 7
 1631              		.cfi_restore 6
 1632              		.cfi_restore 5
 1633              		.cfi_restore 4
 1634              		.cfi_def_cfa_offset 0
 539:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SaveTaskPtr(task_ptr, Task_3_ptr);
 1635              		.loc 1 539 0
 1636 0656 FFF7FEBF 		b	AddToSchedulingQueue
 1637              	.LVL167:
 1638              	.L210:
 1639 065a 00BF     		.align	2
 1640              	.L209:
 1641 065c 00000000 		.word	LAST_CURRENT_TIME
 1642 0660 00000000 		.word	TASK_0_VAR
 1643 0664 00000000 		.word	TASK_STACK
 1644 0668 00000000 		.word	TASK_0
 1645 066c 00000000 		.word	TASK_1
 1646 0670 00000000 		.word	TASK_GROUP_2
 1647 0674 00000000 		.word	TASK_2
 1648 0678 00000000 		.word	TASK_3_VAR
 1649 067c 00000000 		.word	TASK_GROUP_3
 1650 0680 00000000 		.word	TASK_3
 1651 0684 00000000 		.word	TASK_GROUP_1
 1652 0688 00000000 		.word	TASK_1_VAR
 1653 068c 00000000 		.word	TASK_2_VAR
 1654 0690 70170000 		.word	TASK_STACK+6000
 1655              		.cfi_endproc
 1656              	.LFE13:
 1658              	.Letext0:
 1659              		.file 2 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_base_types.h"
 1660              		.file 3 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_common.h"
 1661              		.file 4 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_drivers\\lld_core.h"
 1662              		.file 5 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_task_common.h"
 1663              		.file 6 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_ram.h"
 1664              		.file 7 "E:\\NeuOrga\\Programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_task_scheduler.h"
 1665              		.file 8 "E:\\NeuOrga\\Programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_task_queue.h"
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 45


 1666              		.file 9 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_drivers\\lld_global.h"
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 46


DEFINED SYMBOLS
                            *ABS*:00000000 os_task_scheduler.c
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:15     .text:00000000 $t
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:22     .text:00000000 TASK_0
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:44     .text:00000004 TASK_2
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:119    .text:00000074 $d
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:124    .text:0000007c $t
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:131    .text:0000007c TASK_3
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:206    .text:000000ec $d
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:211    .text:000000f4 $t
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:218    .text:000000f4 TASK_1
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:356    .text:00000164 $d
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:363    .text:0000016c $t
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:371    .text:0000016c OS_ActivateDispatcher
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:418    .text:00000194 $d
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:424    .text:000001a0 $t
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:432    .text:000001a0 OS_SleepTask
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:548    .text:00000200 $d
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:554    .text:00000204 $t
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:562    .text:00000204 task_state_request
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:585    .text:00000216 $d
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:589    .text:0000021a $t
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:684    .text:0000027c $d
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:690    .text:00000288 $t
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:698    .text:00000288 OS_CreateTask
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:767    .text:000002bc OS_ActivateTask
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:903    .text:00000330 OS_StartTask
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:1053   .text:000003b8 $d
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:1057   .text:000003bc $t
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:1065   .text:000003bc OS_TerminateTask
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:1191   .text:00000428 $d
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:1199   .text:0000042c $t
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:1207   .text:0000042c OS_TaskDispatcher
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:1498   .text:00000588 $d
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:1508   .text:00000594 $t
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:1516   .text:00000594 OS_InitTasks
C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s:1641   .text:0000065c $d
                           .group:00000000 wm4.0.d67ddeb5d3f434a0386bf4e126239e16
                           .group:00000000 wm4.os_base_types.h.2.f3c0267f175f5cbacca6b71710665a02
                           .group:00000000 wm4.os_common.h.2.7d3083dfb0b17ee9cbe20f6fe4481cd9
                           .group:00000000 wm4.os_task_config.h.2.a73335dbec9f276504b3b94e79d1d898
                           .group:00000000 wm4.os_task_common.h.95.eb4fc951d6d8ca08a3f35501d742a960
                           .group:00000000 wm4.os_stack.h.2.f736ad9941e78e3f128684d765efeb27
                           .group:00000000 wm4.os_heap.h.2.89074aae455d2462b5952479e3530dd1
                           .group:00000000 wm4.os_main.h.2.1f66ae3841c27bd36097fa1d2e1fe6a7
                           .group:00000000 wm4.os_task_scheduler.h.2.125feba674fa85672711aed1ca8ea199
                           .group:00000000 wm4.os_task_queue.h.2.9428c7964838a07bb4b1cac6c50ee9b2

UNDEFINED SYMBOLS
LLF_WAIT_FOR_INTERRUPT
GetRunningSchedulingQueueElementPtr
OS_SetSwBug
LLF_INT_DISABLE
OS_TaskSaveTaskEnvironment
OS_TASK_RESTORE_SYSTEM_STACK
DeleteFromTaskQueue
DeleteFromSchedulingQueue
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccw0PSOc.s 			page 47


LLF_INT_ENABLE
TASK1_CALL_NR
OS_MAIN_STACK
OS_GetCurrentTime
TASK_TRANSITION_REJECTED_TASK_ADDR
TASK_TRANSITION_CURRENT_STATE
TASK_TRANSITION_REJECTED_STATE
AddToTaskQueue
AddToSchedulingQueue
AddToIdleTaskQueue
OS_TASK_SAVE_SYSTEM_STACK
OS_TASK_RESTORETASK_ENVIRONMENT
SET_RUNNING_TASK
LLF_CHANGE_TO_UNPRIVILIGED_THREAD_MODE
__aeabi_ui2d
__aeabi_dcmpgt
GetRunningTask
GetFromSchedulingQueue
GetFromTaskQueue
LAST_CURRENT_TIME
OS_InitTaskQueue
OS_InitTask
TASK_0_VAR
TASK_STACK
TASK_GROUP_2
TASK_3_VAR
TASK_GROUP_3
TASK_GROUP_1
TASK_1_VAR
TASK_2_VAR
