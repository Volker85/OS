ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"os_task_scheduler.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.p2align 2,,3
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	TASK_2:
  23              	.LFB11:
  24              		.file 1 "E:\\NeuOrga\\Programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_task_scheduler.c"
   1:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** #include "os_firstinc.h"
   2:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** #include "os_common.h"
   3:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** #include "os_task_common.h"
   4:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** #include "os_task_scheduler.h"
   5:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** #include "os_task_queue.h"
   6:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** #include "os_stack.h"
   7:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
   8:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** /*
   9:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 1. running     --(terminate)--> suspend : delete scheduling element
  10:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 2. running     --(preempt  )--> ready
  11:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 3. suspend     --(activate )--> ready   : create scheduling element
  12:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 4. ready       --(start    )--> running : use scheduling element
  13:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 5. unspecified --(create   )--> suspend
  14:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** */
  15:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  16:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  17:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_0(void* task_ptr);
  18:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_1(void* task_ptr);
  19:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_2(void* task_ptr);
  20:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local task_t** OS_TaskScheduler();
  21:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void OS_PreemptTask(task_t* task, scheduling_t* scheduling_task);
  22:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_ActivateDispatcher(void)
  23:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
  24:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  25:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* configure the TCMP */
  26:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*
  27:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    Dispatcher function for Core 0:
  28:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    Write Adresse into the config register (interrupts are requested by SWI/SVC???)
  29:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    */
  30:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #define SYSTICK_CTRL_STAT_REG ((uint32*)0xE000E010)
  31:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #define SYSTICK_RLD_VAL_REG   ((uint32*)0xE000E014)
  32:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #define SYSTICK_CURRENT_VAL_REG ((uint32*)0xE000E018)
  33:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #define SYSTICK_STAT_REG_TICKINT ((uint32)0x00000002)
  34:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #define SYSTICK_STAT_REG_ENABLE  ((uint32)0x00000001)
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 2


  35:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #define LOOPTIME_IN_USEC ((uint32)10000u)
  36:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*
  37:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    CLOCK = HCLK / 8
  38:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    vermutlich: CLOCK = 150Mhz / 8 = 18,75 Mhz
  39:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    */
  40:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #if(CFG_PROCESSOR == cMCU_CORTEX_M4)
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_RLD_VAL_REG = (*SYSTICK_RLD_VAL_REG & 0xFF000000 )| (((uint32)MCU_CLOCK_IN_HZ / ((uint3
  42:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CURRENT_VAL_REG = ((uint32)0x00000000);
  43:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CTRL_STAT_REG = *SYSTICK_CTRL_STAT_REG | SYSTICK_STAT_REG_TICKINT | SYSTICK_STAT_REG_EN
  44:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #endif
  45:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
  46:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  47:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  48:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_SleepTask(task_t* task, task_time_t millisec, scheduling_t* scheduling_task_ptr)
  49:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
  50:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* sleep Task shall do a preempt task with a defined minimum wait time, the actual wait time is 
  51:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task->WaitActUntil = OS_GetCurrentTime() + millisec;
  52:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_PreemptTask(task,scheduling_task_ptr);
  53:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
  54:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  55:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** unsigned_char_t task_state_request(void* temp_task, task_state_t requested_state)
  56:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
  57:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    unsigned_char_t RequestState = Rejected;
  58:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  59:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_t* task = (task_t*) temp_task;
  60:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  61:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    switch(requested_state)
  62:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
  63:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    case Task_unspecified:/* 1. create new task */
  64:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
  65:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       switch(task->task_state)
  66:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
  67:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_ready:
  68:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_running:
  69:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_suspended:
  70:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
  71:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState = Rejected;
  72:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
  73:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
  74:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       default:
  75:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
  76:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          task->task_state = Task_unspecified;
  77:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState = Accepted;
  78:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
  79:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
  80:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
  81:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       break;
  82:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
  83:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    case Task_suspended:
  84:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
  85:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       switch(task->task_state)
  86:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
  87:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_unspecified: /* 2. create task transition */
  88:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
  89:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* no checks */
  90:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          task->task_state = Task_suspended;
  91:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState = Accepted;
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 3


  92:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
  93:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
  94:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_running: /* 3. terminate task */
  95:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
  96:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          task->task_state = Task_suspended;
  97:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState = Accepted;
  98:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
  99:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 100:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       default:
 101:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 102:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* no change in states allowed */
 103:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 104:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 105:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 106:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       break;
 107:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 108:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    case Task_running:
 109:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 110:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       switch(task->task_state)
 111:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 112:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_ready: /* 4. start task transition */
 113:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 114:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          task->task_state = Task_running;
 115:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState   = Accepted;
 116:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 117:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 118:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       default:
 119:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 120:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* no change in states allowed */
 121:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 122:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 123:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 124:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       break;
 125:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 126:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 127:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    case Task_ready:
 128:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 129:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       switch(task->task_state)
 130:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 131:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_suspended: /* activate task transition */
 132:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 133:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          task->task_state = Task_ready;
 134:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState   = Accepted;
 135:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 136:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 137:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_running: /* preempt task transition */
 138:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 139:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          task->task_state = Task_ready;
 140:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState   = Accepted;
 141:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 142:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 143:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_unspecified:
 144:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 145:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****           task->task_state = Task_ready;
 146:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****           RequestState = Accepted;
 147:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****           break;
 148:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 4


 149:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       default:
 150:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 151:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* no change in states allowed */
 152:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 153:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 154:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 155:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       break;
 156:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 157:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    default:
 158:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 159:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       break;
 160:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 161:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 162:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    if(RequestState == Rejected)
 163:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 164:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       TASK_TRANSITION_REJECTED_TASK_ADDR  = task;
 165:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       TASK_TRANSITION_REJECTED_STATE      = requested_state;
 166:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       TASK_TRANSITION_CURRENT_STATE       = task->task_state;
 167:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       OS_SetSwBug(os_bug_taskstate_request_denied, Func_TaskStateRequest);
 168:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 169:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 170:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 171:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    return RequestState;
 172:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 173:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 174:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_CreateTask(task_t* task)
 175:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 176:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*5. unspecified --(create   )--> suspend*/
 177:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    if(task != 0)
 178:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 179:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       if(task->state_request != 0)
 180:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 181:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->state_request(task, Task_suspended)== Accepted)
 182:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 183:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /*QAC*/
 184:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 185:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          else
 186:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 187:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_SetSwBug(os_bug_taskstate_request_denied, Func_CreateTask);
 188:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 189:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 190:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       else
 191:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 192:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          OS_SetSwBug(os_bug_null_pointer, Func_CreateTask);
 193:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 194:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 195:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    else
 196:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 197:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       OS_SetSwBug(os_bug_null_pointer, Func_CreateTask);
 198:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 199:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 200:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_PreemptTask(task_t* task, scheduling_t* scheduling_task)
 201:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 202:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*2. running     --(preempt  )--> ready*/
 203:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* Preempt task
 204:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - Disable Interrupts
 205:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - OS_TaskSaveTaskEnvironment
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 5


 206:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - add to Schedule Queue / delete from RunQueue
 207:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - delete active flag
 208:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - enable Interrupts
 209:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    */
 210:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    if(task != 0 && scheduling_task != 0)
 211:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 212:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       if(task->state_request != 0)
 213:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 214:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->state_request(task, Task_ready)== Accepted)
 215:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 216:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DisableInterrupts();
 217:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TaskSaveTaskEnvironment(task);
 218:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_RESTORE_SYSTEM_STACK(&OS_STACK[OS_GetCoreId()][0]);
 219:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             
 220:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->active = False;
 221:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* reset the prio increase for waiting */
 222:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->current_prio = task->default_prio;
 223:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             EnableInterrupts();
 224:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 225:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          else
 226:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 227:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_SetSwBug(os_bug_taskstate_request_denied, Func_Preempt_Task);
 228:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 229:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 230:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       else
 231:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 232:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          OS_SetSwBug(os_bug_null_pointer, Func_Preempt_Task);
 233:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 234:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 235:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 236:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    else
 237:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 238:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       OS_SetSwBug(os_bug_null_pointer, Func_Preempt_Task);
 239:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 240:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 241:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 242:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_ActivateTask(task_t* task)
 243:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 244:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*
 245:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    Activate Task:
 246:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - Disable Interrupts
 247:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - Add to schedule Queue
 248:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - Enable Interrupts
 249:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 250:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    in case of valid request, the content, where the "task_t* task" is point to is stored in TASK_RU
 251:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    */
 252:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    if(task != 0)
 253:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 254:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       if(task->state_request(task, Task_ready)==Accepted)
 255:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 256:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          DisableInterrupts();
 257:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* 3. suspended to ready (add to runqueue) */
 258:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->IdleTask == False)
 259:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 260:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             if( (task->active == False)
 261:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                   || ( (task->active == True) && (task->NrOfInsAllowed > task->NrOfInsActivated) )/
 262:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****               )
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 6


 263:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             {
 264:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                /* only activate if allowed by rule */
 265:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                task = AddToTaskQueue(task);
 266:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                AddToSchedulingQueue(task);
 267:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                if(task != 0)
 268:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                {
 269:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                   task->NrOfInsActivated++;
 270:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                }   
 271:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                else
 272:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                {
 273:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                   OS_SetSwBug(os_bug_null_pointer,Func_ActivateTask);
 274:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                }                  
 275:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             }
 276:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             else
 277:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             {
 278:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                /* multiple activation bug occured */
 279:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             }
 280:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 281:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          else
 282:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 283:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             AddToIdleTaskQueue(task);
 284:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 285:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          EnableInterrupts();
 286:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 287:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       else
 288:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 289:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          OS_SetSwBug(os_bug_taskstate_request_denied, Func_ActivateTask);
 290:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 291:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 292:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 293:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_StartTask(task_t* task, scheduling_t* scheduling_task)
 294:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 295:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* OS_StartTask
 296:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - Disable interrupts
 297:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - restore Environment
 298:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - enable interrupts
 299:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 300:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - Start Task
 301:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****     */
 302:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    if( (task != 0) && (scheduling_task != 0)&& ((task->task_queued != False)||(task->IdleTask != Fa
 303:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 304:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       if(task->state_request !=0)
 305:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 306:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->state_request(task, Task_running)== Accepted)
 307:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 308:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DisableInterrupts();
 309:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->active =  True;
 310:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->wait_time = 0;
 311:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->current_prio = task->default_prio;
 312:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_SAVE_SYSTEM_STACK(&OS_STACK[OS_GetCoreId()][0]);
 313:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_RESTORETASK_ENVIRONMENT(task);
 314:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->start_time = OS_GetCurrentTime();
 315:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             EnableInterrupts();
 316:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 317:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* task execution shall not happen with disabled interrupts */
 318:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             SET_RUNNING_TASK(task, scheduling_task);
 319:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* change to user mode... */
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 7


 320:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             if(task->privilige_mode == ePriviligeMode_unpriviliged_thread_mode)
 321:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             {
 322:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                LLF_CHANGE_TO_UNPRIVILIGED_THREAD_MODE();
 323:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             }
 324:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 325:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* call the task entry function */
 326:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->fp(task);
 327:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 328:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          else
 329:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 330:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_SetSwBug(os_bug_taskstate_request_denied, Func_StartTask);
 331:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 332:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 333:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 334:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       else
 335:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 336:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          OS_SetSwBug(os_bug_null_pointer, Func_StartTask);
 337:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 338:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 339:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* allowed in case of empty QUEUE elements (queue elements which have no activate_task yet recei
 340:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    else
 341:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 342:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****        OS_SetSwBug(os_bug_null_pointer, Func_StartTask);
 343:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 344:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    */
 345:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 346:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_TerminateTask(task_t* task, scheduling_t* scheduling_task)
 347:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 348:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* Preempt task
 349:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - Disable Interrupts
 350:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - OS_TaskSaveTaskEnvironment
 351:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - add to Schedule Queue / delete from RunQueue
 352:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - delete active flag
 353:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - enable Interrupts
 354:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    */
 355:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    if(task != 0 && scheduling_task != 0)
 356:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 357:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       if(task->state_request != 0)
 358:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 359:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->state_request(task, Task_suspended)== Accepted)
 360:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 361:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DisableInterrupts();
 362:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TaskSaveTaskEnvironment(task);
 363:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_RESTORE_SYSTEM_STACK(&OS_STACK[OS_GetCoreId()][0]);
 364:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DeleteFromTaskQueue(task);
 365:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DeleteFromSchedulingQueue(scheduling_task);
 366:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 367:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->active = False;
 368:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* reset the prio increase for waiting */
 369:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->current_prio = task->default_prio;
 370:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             EnableInterrupts();
 371:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 372:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          else
 373:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 374:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_SetSwBug(os_bug_taskstate_request_denied, Func_TerminateTask);
 375:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 376:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 8


 377:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       else
 378:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 379:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          OS_SetSwBug(os_bug_null_pointer, Func_TerminateTask);
 380:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 381:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 382:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 383:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    else
 384:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 385:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       OS_SetSwBug(os_bug_null_pointer, Func_TerminateTask);
 386:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 387:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 388:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_TaskDispatcher(void)
 389:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 390:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* called in an certain core context (Core_0/1/2/3)*/
 391:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 392:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 393:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*
 394:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    1. running     --(terminate)--> suspend
 395:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    2. running     --(preempt  )--> ready
 396:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    3. suspend     --(activate )--> ready
 397:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    4. ready       --(start    )--> running
 398:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    5. unspecified --(create   )--> suspend
 399:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    */
 400:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_t* scheduling_task_ptr;
 401:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_t* task = 0;
 402:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* get running task */
 403:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task         = GetRunningTask();
 404:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_task_ptr = GetRunningSchedulingQueueElementPtr();
 405:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* Preempt Task */
 406:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    if(task!=0 && scheduling_task_ptr != 0)
 407:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 408:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       OS_TerminateTask(task, scheduling_task_ptr);
 409:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 410:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 411:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 412:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* ask for the next task to be activated... */
 413:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_task_ptr = OS_TaskScheduler();
 414:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    if(scheduling_task_ptr != 0)
 415:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 416:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       task = GetFromTaskQueue(scheduling_task_ptr);
 417:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 418:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    if(task != 0 && scheduling_task_ptr != 0)
 419:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 420:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****        OS_StartTask(task, scheduling_task_ptr);
 421:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 422:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 423:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_0(void* task_ptr)
 424:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 425:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter(task_ptr);
 426:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    HaltMcu();/* HLT will be ended by timer interrupt, what shall be done with the rest of the funct
 427:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 428:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_1(void* task_ptr)
 429:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 430:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_t* scheduling_task_ptr = 0;
 431:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter(task_ptr);
 432:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* worker task */
 433:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_task_ptr = GetRunningSchedulingQueueElementPtr();
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 9


 434:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* do some things */
 435:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*while(1) {}*/
 436:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    TASK1_CALL_NR++;
 437:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SleepTask((task_t*)task_ptr, 10, scheduling_task_ptr);
 438:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #if (CFG_PROCESSOR != cMCU_X86)
 439:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    while(1) {}
 440:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #endif
 441:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* end */
 442:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 443:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_2(void* task_ptr)
 444:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
  25              		.loc 1 444 0
  26              		.cfi_startproc
  27              		@ Volatile: function does not return.
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
 445:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter(task_ptr);
 446:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* worker task */
 447:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 448:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* do some things */
 449:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    TASK2_CALL_NR++;
  32              		.loc 1 449 0
  33 0000 024A     		ldr	r2, .L4
  34 0002 1368     		ldr	r3, [r2]
  35 0004 0133     		adds	r3, r3, #1
  36 0006 1360     		str	r3, [r2]
  37              	.L2:
  38 0008 FEE7     		b	.L2
  39              	.L5:
  40 000a 00BF     		.align	2
  41              	.L4:
  42 000c 00000000 		.word	TASK2_CALL_NR
  43              		.cfi_endproc
  44              	.LFE11:
  46              		.align	1
  47              		.p2align 2,,3
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  51              		.fpu softvfp
  53              	TASK_3:
  54              	.LFB12:
 450:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #if (CFG_PROCESSOR != cMCU_X86)
 451:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    while(1) {}
 452:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #endif
 453:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* end */
 454:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 455:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_3(void* task_ptr)
 456:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
  55              		.loc 1 456 0
  56              		.cfi_startproc
  57              		@ Volatile: function does not return.
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 10


  61              	.LVL1:
 457:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter(task_ptr);
 458:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* worker task */
 459:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 460:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* do some things */
 461:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    TASK3_CALL_NR++;
  62              		.loc 1 461 0
  63 0010 024A     		ldr	r2, .L8
  64 0012 1368     		ldr	r3, [r2]
  65 0014 0133     		adds	r3, r3, #1
  66 0016 1360     		str	r3, [r2]
  67              	.L7:
  68 0018 FEE7     		b	.L7
  69              	.L9:
  70 001a 00BF     		.align	2
  71              	.L8:
  72 001c 00000000 		.word	TASK3_CALL_NR
  73              		.cfi_endproc
  74              	.LFE12:
  76              		.align	1
  77              		.p2align 2,,3
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
  81              		.fpu softvfp
  83              	TASK_1:
  84              	.LFB10:
 429:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_t* scheduling_task_ptr = 0;
  85              		.loc 1 429 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              	.LVL2:
  90 0020 38B5     		push	{r3, r4, r5, lr}
  91              		.cfi_def_cfa_offset 16
  92              		.cfi_offset 3, -16
  93              		.cfi_offset 4, -12
  94              		.cfi_offset 5, -8
  95              		.cfi_offset 14, -4
 429:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_t* scheduling_task_ptr = 0;
  96              		.loc 1 429 0
  97 0022 0446     		mov	r4, r0
 433:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* do some things */
  98              		.loc 1 433 0
  99 0024 FFF7FEFF 		bl	GetRunningSchedulingQueueElementPtr
 100              	.LVL3:
 436:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SleepTask((task_t*)task_ptr, 10, scheduling_task_ptr);
 101              		.loc 1 436 0
 102 0028 194A     		ldr	r2, .L23
 103 002a 1368     		ldr	r3, [r2]
 104 002c 0133     		adds	r3, r3, #1
 433:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* do some things */
 105              		.loc 1 433 0
 106 002e 0546     		mov	r5, r0
 107              	.LVL4:
 436:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SleepTask((task_t*)task_ptr, 10, scheduling_task_ptr);
 108              		.loc 1 436 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 11


 109 0030 1360     		str	r3, [r2]
 110              	.LVL5:
 111              	.LBB8:
 112              	.LBB9:
  51:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_PreemptTask(task,scheduling_task_ptr);
 113              		.loc 1 51 0
 114 0032 FFF7FEFF 		bl	OS_GetCurrentTime
 115              	.LVL6:
 116 0036 0A30     		adds	r0, r0, #10
 117 0038 A060     		str	r0, [r4, #8]
 118              	.LVL7:
 119              	.LBB10:
 120              	.LBB11:
 210:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 121              		.loc 1 210 0
 122 003a 25B3     		cbz	r5, .L11
 212:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 123              		.loc 1 212 0
 124 003c 236B     		ldr	r3, [r4, #48]
 125 003e 13B3     		cbz	r3, .L11
 214:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 126              		.loc 1 214 0
 127 0040 0221     		movs	r1, #2
 128 0042 2046     		mov	r0, r4
 129 0044 9847     		blx	r3
 130              	.LVL8:
 131 0046 0128     		cmp	r0, #1
 132 0048 04D0     		beq	.L22
 227:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 133              		.loc 1 227 0
 134 004a 0D21     		movs	r1, #13
 135 004c 0120     		movs	r0, #1
 136 004e FFF7FEFF 		bl	OS_SetSwBug
 137              	.LVL9:
 138              	.L13:
 139              	.L20:
 140 0052 FEE7     		b	.L20
 141              	.L22:
 216:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TaskSaveTaskEnvironment(task);
 142              		.loc 1 216 0
 143 0054 FFF7FEFF 		bl	LLF_INT_DISABLE
 144              	.LVL10:
 217:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_RESTORE_SYSTEM_STACK(&OS_STACK[OS_GetCoreId()][0]);
 145              		.loc 1 217 0
 146 0058 2046     		mov	r0, r4
 147 005a FFF7FEFF 		bl	OS_TaskSaveTaskEnvironment
 148              	.LVL11:
 218:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             
 149              		.loc 1 218 0
 150 005e FFF7FEFF 		bl	OS_GetCoreId
 151              	.LVL12:
 152 0062 0C4B     		ldr	r3, .L23+4
 153 0064 4FF4A042 		mov	r2, #20480
 154 0068 02FB0030 		mla	r0, r2, r0, r3
 155 006c FFF7FEFF 		bl	OS_TASK_RESTORE_SYSTEM_STACK
 156              	.LVL13:
 220:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* reset the prio increase for waiting */
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 12


 157              		.loc 1 220 0
 158 0070 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 222:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             EnableInterrupts();
 159              		.loc 1 222 0
 160 0072 94F82520 		ldrb	r2, [r4, #37]	@ zero_extendqisi2
 161 0076 84F82420 		strb	r2, [r4, #36]
 220:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* reset the prio increase for waiting */
 162              		.loc 1 220 0
 163 007a 6FF30003 		bfc	r3, #0, #1
 164 007e 2370     		strb	r3, [r4]
 223:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 165              		.loc 1 223 0
 166 0080 FFF7FEFF 		bl	LLF_INT_ENABLE
 167              	.LVL14:
 168 0084 E5E7     		b	.L13
 169              	.L11:
 232:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 170              		.loc 1 232 0
 171 0086 0D21     		movs	r1, #13
 172 0088 0220     		movs	r0, #2
 173 008a FFF7FEFF 		bl	OS_SetSwBug
 174              	.LVL15:
 175 008e E0E7     		b	.L13
 176              	.L24:
 177              		.align	2
 178              	.L23:
 179 0090 00000000 		.word	TASK1_CALL_NR
 180 0094 00000000 		.word	OS_STACK
 181              	.LBE11:
 182              	.LBE10:
 183              	.LBE9:
 184              	.LBE8:
 185              		.cfi_endproc
 186              	.LFE10:
 188              		.align	1
 189              		.p2align 2,,3
 190              		.syntax unified
 191              		.thumb
 192              		.thumb_func
 193              		.fpu softvfp
 195              	TASK_0:
 196              	.LFB9:
 424:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter(task_ptr);
 197              		.loc 1 424 0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201              		@ link register save eliminated.
 202              	.LVL16:
 426:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 203              		.loc 1 426 0
 204 0098 FFF7FEBF 		b	LLF_WAIT_FOR_INTERRUPT
 205              	.LVL17:
 206              		.cfi_endproc
 207              	.LFE9:
 209              		.align	1
 210              		.p2align 2,,3
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 13


 211              		.global	OS_ActivateDispatcher
 212              		.syntax unified
 213              		.thumb
 214              		.thumb_func
 215              		.fpu softvfp
 217              	OS_ActivateDispatcher:
 218              	.LFB0:
  23:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 219              		.loc 1 23 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223              		@ link register save eliminated.
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CURRENT_VAL_REG = ((uint32)0x00000000);
 224              		.loc 1 41 0
 225 009c 0948     		ldr	r0, .L28
  43:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #endif
 226              		.loc 1 43 0
 227 009e 0A49     		ldr	r1, .L28+4
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CURRENT_VAL_REG = ((uint32)0x00000000);
 228              		.loc 1 41 0
 229 00a0 0368     		ldr	r3, [r0]
  43:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #endif
 230              		.loc 1 43 0
 231 00a2 0A68     		ldr	r2, [r1]
  23:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 232              		.loc 1 23 0
 233 00a4 30B4     		push	{r4, r5}
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 4, -8
 236              		.cfi_offset 5, -4
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CURRENT_VAL_REG = ((uint32)0x00000000);
 237              		.loc 1 41 0
 238 00a6 03F07F43 		and	r3, r3, #-16777216
  42:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CTRL_STAT_REG = *SYSTICK_CTRL_STAT_REG | SYSTICK_STAT_REG_TICKINT | SYSTICK_STAT_REG_EN
 239              		.loc 1 42 0
 240 00aa 084C     		ldr	r4, .L28+8
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CURRENT_VAL_REG = ((uint32)0x00000000);
 241              		.loc 1 41 0
 242 00ac 43F4CD13 		orr	r3, r3, #1679360
  42:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CTRL_STAT_REG = *SYSTICK_CTRL_STAT_REG | SYSTICK_STAT_REG_TICKINT | SYSTICK_STAT_REG_EN
 243              		.loc 1 42 0
 244 00b0 0025     		movs	r5, #0
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CURRENT_VAL_REG = ((uint32)0x00000000);
 245              		.loc 1 41 0
 246 00b2 43F42073 		orr	r3, r3, #640
  43:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #endif
 247              		.loc 1 43 0
 248 00b6 42F00302 		orr	r2, r2, #3
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CURRENT_VAL_REG = ((uint32)0x00000000);
 249              		.loc 1 41 0
 250 00ba 0360     		str	r3, [r0]
  43:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #endif
 251              		.loc 1 43 0
 252 00bc 0A60     		str	r2, [r1]
  42:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CTRL_STAT_REG = *SYSTICK_CTRL_STAT_REG | SYSTICK_STAT_REG_TICKINT | SYSTICK_STAT_REG_EN
 253              		.loc 1 42 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 14


 254 00be 2560     		str	r5, [r4]
  45:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 255              		.loc 1 45 0
 256 00c0 30BC     		pop	{r4, r5}
 257              		.cfi_restore 5
 258              		.cfi_restore 4
 259              		.cfi_def_cfa_offset 0
 260 00c2 7047     		bx	lr
 261              	.L29:
 262              		.align	2
 263              	.L28:
 264 00c4 14E000E0 		.word	-536813548
 265 00c8 10E000E0 		.word	-536813552
 266 00cc 18E000E0 		.word	-536813544
 267              		.cfi_endproc
 268              	.LFE0:
 270              		.align	1
 271              		.p2align 2,,3
 272              		.global	OS_SleepTask
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu softvfp
 278              	OS_SleepTask:
 279              	.LFB1:
  49:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* sleep Task shall do a preempt task with a defined minimum wait time, the actual wait time is 
 280              		.loc 1 49 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              	.LVL18:
 285 00d0 70B5     		push	{r4, r5, r6, lr}
 286              		.cfi_def_cfa_offset 16
 287              		.cfi_offset 4, -16
 288              		.cfi_offset 5, -12
 289              		.cfi_offset 6, -8
 290              		.cfi_offset 14, -4
  49:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* sleep Task shall do a preempt task with a defined minimum wait time, the actual wait time is 
 291              		.loc 1 49 0
 292 00d2 0446     		mov	r4, r0
 293 00d4 0D46     		mov	r5, r1
 294 00d6 1646     		mov	r6, r2
  51:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_PreemptTask(task,scheduling_task_ptr);
 295              		.loc 1 51 0
 296 00d8 FFF7FEFF 		bl	OS_GetCurrentTime
 297              	.LVL19:
 298 00dc 2844     		add	r0, r0, r5
 299 00de A060     		str	r0, [r4, #8]
 300              	.LVL20:
 301              	.LBB14:
 302              	.LBB15:
 210:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 303              		.loc 1 210 0
 304 00e0 66B1     		cbz	r6, .L31
 212:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 305              		.loc 1 212 0
 306 00e2 236B     		ldr	r3, [r4, #48]
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 15


 307 00e4 53B1     		cbz	r3, .L31
 214:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 308              		.loc 1 214 0
 309 00e6 0221     		movs	r1, #2
 310 00e8 2046     		mov	r0, r4
 311 00ea 9847     		blx	r3
 312              	.LVL21:
 313 00ec 0128     		cmp	r0, #1
 314 00ee 0BD0     		beq	.L40
 227:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 315              		.loc 1 227 0
 316 00f0 0D21     		movs	r1, #13
 317 00f2 0120     		movs	r0, #1
 318              	.LBE15:
 319              	.LBE14:
  53:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 320              		.loc 1 53 0
 321 00f4 BDE87040 		pop	{r4, r5, r6, lr}
 322              		.cfi_remember_state
 323              		.cfi_restore 14
 324              		.cfi_restore 6
 325              		.cfi_restore 5
 326              		.cfi_restore 4
 327              		.cfi_def_cfa_offset 0
 328              	.LVL22:
 329              	.LBB19:
 330              	.LBB16:
 227:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 331              		.loc 1 227 0
 332 00f8 FFF7FEBF 		b	OS_SetSwBug
 333              	.LVL23:
 334              	.L31:
 335              		.cfi_restore_state
 232:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 336              		.loc 1 232 0
 337 00fc 0D21     		movs	r1, #13
 338 00fe 0220     		movs	r0, #2
 339              	.LBE16:
 340              	.LBE19:
  53:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 341              		.loc 1 53 0
 342 0100 BDE87040 		pop	{r4, r5, r6, lr}
 343              		.cfi_remember_state
 344              		.cfi_restore 14
 345              		.cfi_restore 6
 346              		.cfi_restore 5
 347              		.cfi_restore 4
 348              		.cfi_def_cfa_offset 0
 349              	.LVL24:
 350              	.LBB20:
 351              	.LBB17:
 232:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 352              		.loc 1 232 0
 353 0104 FFF7FEBF 		b	OS_SetSwBug
 354              	.LVL25:
 355              	.L40:
 356              		.cfi_restore_state
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 16


 216:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TaskSaveTaskEnvironment(task);
 357              		.loc 1 216 0
 358 0108 FFF7FEFF 		bl	LLF_INT_DISABLE
 359              	.LVL26:
 217:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_RESTORE_SYSTEM_STACK(&OS_STACK[OS_GetCoreId()][0]);
 360              		.loc 1 217 0
 361 010c 2046     		mov	r0, r4
 362 010e FFF7FEFF 		bl	OS_TaskSaveTaskEnvironment
 363              	.LVL27:
 218:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             
 364              		.loc 1 218 0
 365 0112 FFF7FEFF 		bl	OS_GetCoreId
 366              	.LVL28:
 367 0116 094B     		ldr	r3, .L41
 368 0118 00EB8000 		add	r0, r0, r0, lsl #2
 369 011c 03EB0030 		add	r0, r3, r0, lsl #12
 370 0120 FFF7FEFF 		bl	OS_TASK_RESTORE_SYSTEM_STACK
 371              	.LVL29:
 220:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* reset the prio increase for waiting */
 372              		.loc 1 220 0
 373 0124 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 222:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             EnableInterrupts();
 374              		.loc 1 222 0
 375 0126 94F82520 		ldrb	r2, [r4, #37]	@ zero_extendqisi2
 376 012a 84F82420 		strb	r2, [r4, #36]
 220:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* reset the prio increase for waiting */
 377              		.loc 1 220 0
 378 012e 6FF30003 		bfc	r3, #0, #1
 379 0132 2370     		strb	r3, [r4]
 380              	.LBE17:
 381              	.LBE20:
  53:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 382              		.loc 1 53 0
 383 0134 BDE87040 		pop	{r4, r5, r6, lr}
 384              		.cfi_restore 14
 385              		.cfi_restore 6
 386              		.cfi_restore 5
 387              		.cfi_restore 4
 388              		.cfi_def_cfa_offset 0
 389              	.LVL30:
 390              	.LBB21:
 391              	.LBB18:
 223:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 392              		.loc 1 223 0
 393 0138 FFF7FEBF 		b	LLF_INT_ENABLE
 394              	.LVL31:
 395              	.L42:
 396              		.align	2
 397              	.L41:
 398 013c 00000000 		.word	OS_STACK
 399              	.LBE18:
 400              	.LBE21:
 401              		.cfi_endproc
 402              	.LFE1:
 404              		.align	1
 405              		.p2align 2,,3
 406              		.global	task_state_request
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 17


 407              		.syntax unified
 408              		.thumb
 409              		.thumb_func
 410              		.fpu softvfp
 412              	task_state_request:
 413              	.LFB2:
  56:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    unsigned_char_t RequestState = Rejected;
 414              		.loc 1 56 0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              	.LVL32:
 419 0140 38B5     		push	{r3, r4, r5, lr}
 420              		.cfi_def_cfa_offset 16
 421              		.cfi_offset 3, -16
 422              		.cfi_offset 4, -12
 423              		.cfi_offset 5, -8
 424              		.cfi_offset 14, -4
 425 0142 90F83420 		ldrb	r2, [r0, #52]	@ zero_extendqisi2
  61:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 426              		.loc 1 61 0
 427 0146 0329     		cmp	r1, #3
 428 0148 05D8     		bhi	.L44
 429 014a DFE801F0 		tbb	[pc, r1]
 430              	.L46:
 431 014e 22       		.byte	(.L45-.L46)/2
 432 014f 1A       		.byte	(.L47-.L46)/2
 433 0150 11       		.byte	(.L48-.L46)/2
 434 0151 02       		.byte	(.L49-.L46)/2
 435              		.p2align 1
 436              	.L49:
 110:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 437              		.loc 1 110 0
 438 0152 022A     		cmp	r2, #2
 439 0154 25D0     		beq	.L65
 440              	.L44:
 441 0156 0B46     		mov	r3, r1
 164:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       TASK_TRANSITION_REJECTED_STATE      = requested_state;
 442              		.loc 1 164 0
 443 0158 1449     		ldr	r1, .L66
 444              	.LVL33:
 165:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       TASK_TRANSITION_CURRENT_STATE       = task->task_state;
 445              		.loc 1 165 0
 446 015a 154D     		ldr	r5, .L66+4
 166:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       OS_SetSwBug(os_bug_taskstate_request_denied, Func_TaskStateRequest);
 447              		.loc 1 166 0
 448 015c 154C     		ldr	r4, .L66+8
 164:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       TASK_TRANSITION_REJECTED_STATE      = requested_state;
 449              		.loc 1 164 0
 450 015e 0860     		str	r0, [r1]
 167:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 451              		.loc 1 167 0
 452 0160 0C21     		movs	r1, #12
 453 0162 0120     		movs	r0, #1
 454              	.LVL34:
 165:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       TASK_TRANSITION_CURRENT_STATE       = task->task_state;
 455              		.loc 1 165 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 18


 456 0164 2B70     		strb	r3, [r5]
 166:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       OS_SetSwBug(os_bug_taskstate_request_denied, Func_TaskStateRequest);
 457              		.loc 1 166 0
 458 0166 2270     		strb	r2, [r4]
 167:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 459              		.loc 1 167 0
 460 0168 FFF7FEFF 		bl	OS_SetSwBug
 461              	.LVL35:
 462 016c 0020     		movs	r0, #0
 172:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 463              		.loc 1 172 0
 464 016e 38BD     		pop	{r3, r4, r5, pc}
 465              	.LVL36:
 466              	.L48:
 129:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 467              		.loc 1 129 0
 468 0170 012A     		cmp	r2, #1
 469 0172 01D9     		bls	.L54
 470 0174 032A     		cmp	r2, #3
 471 0176 EED1     		bne	.L44
 472              	.L54:
 133:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState   = Accepted;
 473              		.loc 1 133 0
 474 0178 0223     		movs	r3, #2
 475 017a 80F83430 		strb	r3, [r0, #52]
 476              	.LVL37:
 134:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 477              		.loc 1 134 0
 478 017e 0120     		movs	r0, #1
 479              	.LVL38:
 172:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 480              		.loc 1 172 0
 481 0180 38BD     		pop	{r3, r4, r5, pc}
 482              	.LVL39:
 483              	.L47:
  85:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 484              		.loc 1 85 0
 485 0182 0AB1     		cbz	r2, .L52
 486 0184 032A     		cmp	r2, #3
 487 0186 E6D1     		bne	.L44
 488              	.L52:
  90:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState = Accepted;
 489              		.loc 1 90 0
 490 0188 0123     		movs	r3, #1
 491 018a 80F83430 		strb	r3, [r0, #52]
 492              	.LVL40:
  91:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 493              		.loc 1 91 0
 494 018e 1846     		mov	r0, r3
 495              	.LVL41:
 172:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 496              		.loc 1 172 0
 497 0190 38BD     		pop	{r3, r4, r5, pc}
 498              	.LVL42:
 499              	.L45:
  65:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 500              		.loc 1 65 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 19


 501 0192 531E     		subs	r3, r2, #1
 502 0194 022B     		cmp	r3, #2
 503 0196 DED9     		bls	.L44
  76:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState = Accepted;
 504              		.loc 1 76 0
 505 0198 0023     		movs	r3, #0
 506 019a 80F83430 		strb	r3, [r0, #52]
 507              	.LVL43:
  77:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 508              		.loc 1 77 0
 509 019e 0120     		movs	r0, #1
 510              	.LVL44:
 172:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 511              		.loc 1 172 0
 512 01a0 38BD     		pop	{r3, r4, r5, pc}
 513              	.LVL45:
 514              	.L65:
 114:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState   = Accepted;
 515              		.loc 1 114 0
 516 01a2 0323     		movs	r3, #3
 517 01a4 80F83430 		strb	r3, [r0, #52]
 518              	.LVL46:
 115:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 519              		.loc 1 115 0
 520 01a8 0120     		movs	r0, #1
 521              	.LVL47:
 172:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 522              		.loc 1 172 0
 523 01aa 38BD     		pop	{r3, r4, r5, pc}
 524              	.L67:
 525              		.align	2
 526              	.L66:
 527 01ac 00000000 		.word	TASK_TRANSITION_REJECTED_TASK_ADDR
 528 01b0 00000000 		.word	TASK_TRANSITION_REJECTED_STATE
 529 01b4 00000000 		.word	TASK_TRANSITION_CURRENT_STATE
 530              		.cfi_endproc
 531              	.LFE2:
 533              		.align	1
 534              		.p2align 2,,3
 535              		.global	OS_CreateTask
 536              		.syntax unified
 537              		.thumb
 538              		.thumb_func
 539              		.fpu softvfp
 541              	OS_CreateTask:
 542              	.LFB3:
 175:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*5. unspecified --(create   )--> suspend*/
 543              		.loc 1 175 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 547              	.LVL48:
 177:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 548              		.loc 1 177 0
 549 01b8 98B1     		cbz	r0, .L78
 175:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*5. unspecified --(create   )--> suspend*/
 550              		.loc 1 175 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 20


 551 01ba 08B5     		push	{r3, lr}
 552              		.cfi_def_cfa_offset 8
 553              		.cfi_offset 3, -8
 554              		.cfi_offset 14, -4
 179:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 555              		.loc 1 179 0
 556 01bc 036B     		ldr	r3, [r0, #48]
 557 01be 53B1     		cbz	r3, .L69
 181:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 558              		.loc 1 181 0
 559 01c0 0121     		movs	r1, #1
 560 01c2 9847     		blx	r3
 561              	.LVL49:
 562 01c4 0128     		cmp	r0, #1
 563 01c6 00D1     		bne	.L81
 199:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_PreemptTask(task_t* task, scheduling_t* scheduling_task)
 564              		.loc 1 199 0
 565 01c8 08BD     		pop	{r3, pc}
 566              	.L81:
 187:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 567              		.loc 1 187 0
 568 01ca 0F21     		movs	r1, #15
 569 01cc 0120     		movs	r0, #1
 199:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_PreemptTask(task_t* task, scheduling_t* scheduling_task)
 570              		.loc 1 199 0
 571 01ce BDE80840 		pop	{r3, lr}
 572              		.cfi_remember_state
 573              		.cfi_restore 14
 574              		.cfi_restore 3
 575              		.cfi_def_cfa_offset 0
 187:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 576              		.loc 1 187 0
 577 01d2 FFF7FEBF 		b	OS_SetSwBug
 578              	.LVL50:
 579              	.L69:
 580              		.cfi_restore_state
 192:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 581              		.loc 1 192 0
 582 01d6 0F21     		movs	r1, #15
 583 01d8 0220     		movs	r0, #2
 584              	.LVL51:
 199:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_PreemptTask(task_t* task, scheduling_t* scheduling_task)
 585              		.loc 1 199 0
 586 01da BDE80840 		pop	{r3, lr}
 587              		.cfi_restore 14
 588              		.cfi_restore 3
 589              		.cfi_def_cfa_offset 0
 192:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 590              		.loc 1 192 0
 591 01de FFF7FEBF 		b	OS_SetSwBug
 592              	.LVL52:
 593              	.L78:
 594 01e2 0F21     		movs	r1, #15
 595 01e4 0220     		movs	r0, #2
 596              	.LVL53:
 597 01e6 FFF7FEBF 		b	OS_SetSwBug
 598              	.LVL54:
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 21


 599              		.cfi_endproc
 600              	.LFE3:
 602              		.align	1
 603 01ea 00BF     		.p2align 2,,3
 604              		.global	OS_ActivateTask
 605              		.syntax unified
 606              		.thumb
 607              		.thumb_func
 608              		.fpu softvfp
 610              	OS_ActivateTask:
 611              	.LFB5:
 243:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*
 612              		.loc 1 243 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 0
 615              		@ frame_needed = 0, uses_anonymous_args = 0
 616              	.LVL55:
 252:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 617              		.loc 1 252 0
 618 01ec 60B3     		cbz	r0, .L82
 243:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*
 619              		.loc 1 243 0
 620 01ee 10B5     		push	{r4, lr}
 621              		.cfi_def_cfa_offset 8
 622              		.cfi_offset 4, -8
 623              		.cfi_offset 14, -4
 254:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 624              		.loc 1 254 0
 625 01f0 036B     		ldr	r3, [r0, #48]
 626 01f2 0221     		movs	r1, #2
 627 01f4 0446     		mov	r4, r0
 628 01f6 9847     		blx	r3
 629              	.LVL56:
 630 01f8 0128     		cmp	r0, #1
 631 01fa 05D0     		beq	.L95
 289:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 632              		.loc 1 289 0
 633 01fc 0B21     		movs	r1, #11
 634 01fe 0120     		movs	r0, #1
 292:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_StartTask(task_t* task, scheduling_t* scheduling_task)
 635              		.loc 1 292 0
 636 0200 BDE81040 		pop	{r4, lr}
 637              		.cfi_remember_state
 638              		.cfi_restore 14
 639              		.cfi_restore 4
 640              		.cfi_def_cfa_offset 0
 641              	.LVL57:
 289:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 642              		.loc 1 289 0
 643 0204 FFF7FEBF 		b	OS_SetSwBug
 644              	.LVL58:
 645              	.L95:
 646              		.cfi_restore_state
 256:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* 3. suspended to ready (add to runqueue) */
 647              		.loc 1 256 0
 648 0208 FFF7FEFF 		bl	LLF_INT_DISABLE
 649              	.LVL59:
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 22


 258:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 650              		.loc 1 258 0
 651 020c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 652 020e 5A07     		lsls	r2, r3, #29
 653 0210 13D4     		bmi	.L85
 260:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                   || ( (task->active == True) && (task->NrOfInsAllowed > task->NrOfInsActivated) )/
 654              		.loc 1 260 0
 655 0212 DB07     		lsls	r3, r3, #31
 656 0214 03D5     		bpl	.L86
 261:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****               )
 657              		.loc 1 261 0
 658 0216 2279     		ldrb	r2, [r4, #4]	@ zero_extendqisi2
 659 0218 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 660 021a 9A42     		cmp	r2, r3
 661 021c 09D9     		bls	.L87
 662              	.L86:
 265:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                AddToSchedulingQueue(task);
 663              		.loc 1 265 0
 664 021e 2046     		mov	r0, r4
 665 0220 FFF7FEFF 		bl	AddToTaskQueue
 666              	.LVL60:
 667 0224 0446     		mov	r4, r0
 668              	.LVL61:
 266:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                if(task != 0)
 669              		.loc 1 266 0
 670 0226 FFF7FEFF 		bl	AddToSchedulingQueue
 671              	.LVL62:
 267:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                {
 672              		.loc 1 267 0
 673 022a 74B1     		cbz	r4, .L88
 269:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                }   
 674              		.loc 1 269 0
 675 022c 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 676 022e 0133     		adds	r3, r3, #1
 677 0230 6371     		strb	r3, [r4, #5]
 678              	.L87:
 292:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_StartTask(task_t* task, scheduling_t* scheduling_task)
 679              		.loc 1 292 0
 680 0232 BDE81040 		pop	{r4, lr}
 681              		.cfi_remember_state
 682              		.cfi_restore 14
 683              		.cfi_restore 4
 684              		.cfi_def_cfa_offset 0
 685              	.LVL63:
 285:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 686              		.loc 1 285 0
 687 0236 FFF7FEBF 		b	LLF_INT_ENABLE
 688              	.LVL64:
 689              	.L85:
 690              		.cfi_restore_state
 283:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 691              		.loc 1 283 0
 692 023a 2046     		mov	r0, r4
 693 023c FFF7FEFF 		bl	AddToIdleTaskQueue
 694              	.LVL65:
 292:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_StartTask(task_t* task, scheduling_t* scheduling_task)
 695              		.loc 1 292 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 23


 696 0240 BDE81040 		pop	{r4, lr}
 697              		.cfi_restore 14
 698              		.cfi_restore 4
 699              		.cfi_def_cfa_offset 0
 700              	.LVL66:
 285:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 701              		.loc 1 285 0
 702 0244 FFF7FEBF 		b	LLF_INT_ENABLE
 703              	.LVL67:
 704              	.L82:
 705 0248 7047     		bx	lr
 706              	.LVL68:
 707              	.L88:
 708              		.cfi_def_cfa_offset 8
 709              		.cfi_offset 4, -8
 710              		.cfi_offset 14, -4
 273:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                }                  
 711              		.loc 1 273 0
 712 024a 0B21     		movs	r1, #11
 713 024c 0220     		movs	r0, #2
 714 024e FFF7FEFF 		bl	OS_SetSwBug
 715              	.LVL69:
 716 0252 EEE7     		b	.L87
 717              		.cfi_endproc
 718              	.LFE5:
 720              		.align	1
 721              		.p2align 2,,3
 722              		.global	OS_StartTask
 723              		.syntax unified
 724              		.thumb
 725              		.thumb_func
 726              		.fpu softvfp
 728              	OS_StartTask:
 729              	.LFB6:
 294:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* OS_StartTask
 730              		.loc 1 294 0
 731              		.cfi_startproc
 732              		@ args = 0, pretend = 0, frame = 0
 733              		@ frame_needed = 0, uses_anonymous_args = 0
 734              	.LVL70:
 302:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 735              		.loc 1 302 0
 736 0254 0028     		cmp	r0, #0
 737 0256 40D0     		beq	.L111
 302:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 738              		.loc 1 302 0 is_stmt 0 discriminator 1
 739 0258 0029     		cmp	r1, #0
 740 025a 3ED0     		beq	.L111
 302:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 741              		.loc 1 302 0 discriminator 2
 742 025c 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 743 025e 12F0060F 		tst	r2, #6
 294:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* OS_StartTask
 744              		.loc 1 294 0 is_stmt 1 discriminator 2
 745 0262 70B5     		push	{r4, r5, r6, lr}
 746              		.cfi_def_cfa_offset 16
 747              		.cfi_offset 4, -16
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 24


 748              		.cfi_offset 5, -12
 749              		.cfi_offset 6, -8
 750              		.cfi_offset 14, -4
 751 0264 0446     		mov	r4, r0
 302:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 752              		.loc 1 302 0 discriminator 2
 753 0266 0CD0     		beq	.L96
 304:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 754              		.loc 1 304 0
 755 0268 026B     		ldr	r2, [r0, #48]
 756 026a BAB3     		cbz	r2, .L98
 757 026c 0D46     		mov	r5, r1
 306:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 758              		.loc 1 306 0
 759 026e 0321     		movs	r1, #3
 760              	.LVL71:
 761 0270 9047     		blx	r2
 762              	.LVL72:
 763 0272 0128     		cmp	r0, #1
 764 0274 06D0     		beq	.L114
 330:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 765              		.loc 1 330 0
 766 0276 0621     		movs	r1, #6
 767 0278 0120     		movs	r0, #1
 345:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_TerminateTask(task_t* task, scheduling_t* scheduling_task)
 768              		.loc 1 345 0
 769 027a BDE87040 		pop	{r4, r5, r6, lr}
 770              		.cfi_remember_state
 771              		.cfi_restore 14
 772              		.cfi_restore 6
 773              		.cfi_restore 5
 774              		.cfi_restore 4
 775              		.cfi_def_cfa_offset 0
 776              	.LVL73:
 330:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 777              		.loc 1 330 0
 778 027e FFF7FEBF 		b	OS_SetSwBug
 779              	.LVL74:
 780              	.L96:
 781              		.cfi_restore_state
 345:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_TerminateTask(task_t* task, scheduling_t* scheduling_task)
 782              		.loc 1 345 0
 783 0282 70BD     		pop	{r4, r5, r6, pc}
 784              	.LVL75:
 785              	.L114:
 786              	.LBB24:
 787              	.LBB25:
 308:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->active =  True;
 788              		.loc 1 308 0
 789 0284 FFF7FEFF 		bl	LLF_INT_DISABLE
 790              	.LVL76:
 309:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->wait_time = 0;
 791              		.loc 1 309 0
 792 0288 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 311:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_SAVE_SYSTEM_STACK(&OS_STACK[OS_GetCoreId()][0]);
 793              		.loc 1 311 0
 794 028a 94F82520 		ldrb	r2, [r4, #37]	@ zero_extendqisi2
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 25


 795 028e 84F82420 		strb	r2, [r4, #36]
 309:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->wait_time = 0;
 796              		.loc 1 309 0
 797 0292 43F00103 		orr	r3, r3, #1
 310:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->current_prio = task->default_prio;
 798              		.loc 1 310 0
 799 0296 0022     		movs	r2, #0
 800 0298 E260     		str	r2, [r4, #12]
 309:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->wait_time = 0;
 801              		.loc 1 309 0
 802 029a 2370     		strb	r3, [r4]
 312:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_RESTORETASK_ENVIRONMENT(task);
 803              		.loc 1 312 0
 804 029c FFF7FEFF 		bl	OS_GetCoreId
 805              	.LVL77:
 806 02a0 114B     		ldr	r3, .L115
 807 02a2 00EB8000 		add	r0, r0, r0, lsl #2
 808 02a6 03EB0030 		add	r0, r3, r0, lsl #12
 809 02aa FFF7FEFF 		bl	OS_TASK_SAVE_SYSTEM_STACK
 810              	.LVL78:
 313:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->start_time = OS_GetCurrentTime();
 811              		.loc 1 313 0
 812 02ae 2046     		mov	r0, r4
 813 02b0 FFF7FEFF 		bl	OS_TASK_RESTORETASK_ENVIRONMENT
 814              	.LVL79:
 314:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             EnableInterrupts();
 815              		.loc 1 314 0
 816 02b4 FFF7FEFF 		bl	OS_GetCurrentTime
 817              	.LVL80:
 818 02b8 2062     		str	r0, [r4, #32]
 315:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 819              		.loc 1 315 0
 820 02ba FFF7FEFF 		bl	LLF_INT_ENABLE
 821              	.LVL81:
 318:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* change to user mode... */
 822              		.loc 1 318 0
 823 02be 2946     		mov	r1, r5
 824 02c0 2046     		mov	r0, r4
 825 02c2 FFF7FEFF 		bl	SET_RUNNING_TASK
 826              	.LVL82:
 320:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             {
 827              		.loc 1 320 0
 828 02c6 94F88430 		ldrb	r3, [r4, #132]	@ zero_extendqisi2
 829 02ca 0BB9     		cbnz	r3, .L100
 322:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             }
 830              		.loc 1 322 0
 831 02cc FFF7FEFF 		bl	LLF_CHANGE_TO_UNPRIVILIGED_THREAD_MODE
 832              	.LVL83:
 833              	.L100:
 326:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 834              		.loc 1 326 0
 835 02d0 E36A     		ldr	r3, [r4, #44]
 836 02d2 2046     		mov	r0, r4
 837              	.LBE25:
 838              	.LBE24:
 345:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_TerminateTask(task_t* task, scheduling_t* scheduling_task)
 839              		.loc 1 345 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 26


 840 02d4 BDE87040 		pop	{r4, r5, r6, lr}
 841              		.cfi_restore 14
 842              		.cfi_restore 6
 843              		.cfi_restore 5
 844              		.cfi_restore 4
 845              		.cfi_def_cfa_offset 0
 846              	.LVL84:
 847              	.LBB27:
 848              	.LBB26:
 326:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 849              		.loc 1 326 0
 850 02d8 1847     		bx	r3	@ indirect register sibling call
 851              	.LVL85:
 852              	.L111:
 853 02da 7047     		bx	lr
 854              	.L98:
 855              		.cfi_def_cfa_offset 16
 856              		.cfi_offset 4, -16
 857              		.cfi_offset 5, -12
 858              		.cfi_offset 6, -8
 859              		.cfi_offset 14, -4
 860              	.LBE26:
 861              	.LBE27:
 336:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 862              		.loc 1 336 0
 863 02dc 0621     		movs	r1, #6
 864              	.LVL86:
 865 02de 0220     		movs	r0, #2
 866              	.LVL87:
 345:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_TerminateTask(task_t* task, scheduling_t* scheduling_task)
 867              		.loc 1 345 0
 868 02e0 BDE87040 		pop	{r4, r5, r6, lr}
 869              		.cfi_restore 14
 870              		.cfi_restore 6
 871              		.cfi_restore 5
 872              		.cfi_restore 4
 873              		.cfi_def_cfa_offset 0
 874              	.LVL88:
 336:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 875              		.loc 1 336 0
 876 02e4 FFF7FEBF 		b	OS_SetSwBug
 877              	.LVL89:
 878              	.L116:
 879              		.align	2
 880              	.L115:
 881 02e8 00000000 		.word	OS_STACK
 882              		.cfi_endproc
 883              	.LFE6:
 885              		.align	1
 886              		.p2align 2,,3
 887              		.global	OS_TerminateTask
 888              		.syntax unified
 889              		.thumb
 890              		.thumb_func
 891              		.fpu softvfp
 893              	OS_TerminateTask:
 894              	.LFB7:
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 27


 347:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* Preempt task
 895              		.loc 1 347 0
 896              		.cfi_startproc
 897              		@ args = 0, pretend = 0, frame = 0
 898              		@ frame_needed = 0, uses_anonymous_args = 0
 899              	.LVL90:
 355:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 900              		.loc 1 355 0
 901 02ec A8B3     		cbz	r0, .L130
 355:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 902              		.loc 1 355 0 is_stmt 0 discriminator 1
 903 02ee A1B3     		cbz	r1, .L130
 357:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 904              		.loc 1 357 0 is_stmt 1
 905 02f0 026B     		ldr	r2, [r0, #48]
 347:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* Preempt task
 906              		.loc 1 347 0
 907 02f2 38B5     		push	{r3, r4, r5, lr}
 908              		.cfi_def_cfa_offset 16
 909              		.cfi_offset 3, -16
 910              		.cfi_offset 4, -12
 911              		.cfi_offset 5, -8
 912              		.cfi_offset 14, -4
 913 02f4 0446     		mov	r4, r0
 357:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 914              		.loc 1 357 0
 915 02f6 52B1     		cbz	r2, .L118
 916 02f8 0D46     		mov	r5, r1
 359:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 917              		.loc 1 359 0
 918 02fa 0121     		movs	r1, #1
 919              	.LVL91:
 920 02fc 9047     		blx	r2
 921              	.LVL92:
 922 02fe 0128     		cmp	r0, #1
 923 0300 0BD0     		beq	.L133
 374:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 924              		.loc 1 374 0
 925 0302 0821     		movs	r1, #8
 926 0304 0120     		movs	r0, #1
 387:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_TaskDispatcher(void)
 927              		.loc 1 387 0
 928 0306 BDE83840 		pop	{r3, r4, r5, lr}
 929              		.cfi_remember_state
 930              		.cfi_restore 14
 931              		.cfi_restore 5
 932              		.cfi_restore 4
 933              		.cfi_restore 3
 934              		.cfi_def_cfa_offset 0
 935              	.LVL93:
 374:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 936              		.loc 1 374 0
 937 030a FFF7FEBF 		b	OS_SetSwBug
 938              	.LVL94:
 939              	.L118:
 940              		.cfi_restore_state
 941              	.LBB30:
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 28


 942              	.LBB31:
 379:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 943              		.loc 1 379 0
 944 030e 0821     		movs	r1, #8
 945              	.LVL95:
 946 0310 0220     		movs	r0, #2
 947              	.LVL96:
 948              	.LBE31:
 949              	.LBE30:
 387:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_TaskDispatcher(void)
 950              		.loc 1 387 0
 951 0312 BDE83840 		pop	{r3, r4, r5, lr}
 952              		.cfi_remember_state
 953              		.cfi_restore 14
 954              		.cfi_restore 5
 955              		.cfi_restore 4
 956              		.cfi_restore 3
 957              		.cfi_def_cfa_offset 0
 958              	.LVL97:
 959              	.LBB34:
 960              	.LBB32:
 379:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 961              		.loc 1 379 0
 962 0316 FFF7FEBF 		b	OS_SetSwBug
 963              	.LVL98:
 964              	.L133:
 965              		.cfi_restore_state
 966              	.LBE32:
 967              	.LBE34:
 361:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TaskSaveTaskEnvironment(task);
 968              		.loc 1 361 0
 969 031a FFF7FEFF 		bl	LLF_INT_DISABLE
 970              	.LVL99:
 362:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_RESTORE_SYSTEM_STACK(&OS_STACK[OS_GetCoreId()][0]);
 971              		.loc 1 362 0
 972 031e 2046     		mov	r0, r4
 973 0320 FFF7FEFF 		bl	OS_TaskSaveTaskEnvironment
 974              	.LVL100:
 363:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DeleteFromTaskQueue(task);
 975              		.loc 1 363 0
 976 0324 FFF7FEFF 		bl	OS_GetCoreId
 977              	.LVL101:
 978 0328 0E4B     		ldr	r3, .L134
 979 032a 00EB8000 		add	r0, r0, r0, lsl #2
 980 032e 03EB0030 		add	r0, r3, r0, lsl #12
 981 0332 FFF7FEFF 		bl	OS_TASK_RESTORE_SYSTEM_STACK
 982              	.LVL102:
 364:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DeleteFromSchedulingQueue(scheduling_task);
 983              		.loc 1 364 0
 984 0336 2046     		mov	r0, r4
 985 0338 FFF7FEFF 		bl	DeleteFromTaskQueue
 986              	.LVL103:
 365:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 987              		.loc 1 365 0
 988 033c 2846     		mov	r0, r5
 989 033e FFF7FEFF 		bl	DeleteFromSchedulingQueue
 990              	.LVL104:
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 29


 367:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* reset the prio increase for waiting */
 991              		.loc 1 367 0
 992 0342 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 369:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             EnableInterrupts();
 993              		.loc 1 369 0
 994 0344 94F82520 		ldrb	r2, [r4, #37]	@ zero_extendqisi2
 995 0348 84F82420 		strb	r2, [r4, #36]
 367:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* reset the prio increase for waiting */
 996              		.loc 1 367 0
 997 034c 6FF30003 		bfc	r3, #0, #1
 998 0350 2370     		strb	r3, [r4]
 387:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_TaskDispatcher(void)
 999              		.loc 1 387 0
 1000 0352 BDE83840 		pop	{r3, r4, r5, lr}
 1001              		.cfi_restore 14
 1002              		.cfi_restore 5
 1003              		.cfi_restore 4
 1004              		.cfi_restore 3
 1005              		.cfi_def_cfa_offset 0
 1006              	.LVL105:
 370:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 1007              		.loc 1 370 0
 1008 0356 FFF7FEBF 		b	LLF_INT_ENABLE
 1009              	.LVL106:
 1010              	.L130:
 1011              	.LBB35:
 1012              	.LBB33:
 379:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 1013              		.loc 1 379 0
 1014 035a 0821     		movs	r1, #8
 1015              	.LVL107:
 1016 035c 0220     		movs	r0, #2
 1017              	.LVL108:
 1018 035e FFF7FEBF 		b	OS_SetSwBug
 1019              	.LVL109:
 1020              	.L135:
 1021 0362 00BF     		.align	2
 1022              	.L134:
 1023 0364 00000000 		.word	OS_STACK
 1024              	.LBE33:
 1025              	.LBE35:
 1026              		.cfi_endproc
 1027              	.LFE7:
 1029              		.global	__aeabi_ui2d
 1030              		.global	__aeabi_dcmpgt
 1031              		.align	1
 1032              		.p2align 2,,3
 1033              		.global	OS_TaskDispatcher
 1034              		.syntax unified
 1035              		.thumb
 1036              		.thumb_func
 1037              		.fpu softvfp
 1039              	OS_TaskDispatcher:
 1040              	.LFB8:
 389:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* called in an certain core context (Core_0/1/2/3)*/
 1041              		.loc 1 389 0
 1042              		.cfi_startproc
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 30


 1043              		@ args = 0, pretend = 0, frame = 0
 1044              		@ frame_needed = 0, uses_anonymous_args = 0
 1045              	.LVL110:
 1046 0368 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1047              		.cfi_def_cfa_offset 32
 1048              		.cfi_offset 3, -32
 1049              		.cfi_offset 4, -28
 1050              		.cfi_offset 5, -24
 1051              		.cfi_offset 6, -20
 1052              		.cfi_offset 7, -16
 1053              		.cfi_offset 8, -12
 1054              		.cfi_offset 9, -8
 1055              		.cfi_offset 14, -4
 403:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_task_ptr = GetRunningSchedulingQueueElementPtr();
 1056              		.loc 1 403 0
 1057 036c FFF7FEFF 		bl	GetRunningTask
 1058              	.LVL111:
 1059 0370 0446     		mov	r4, r0
 1060              	.LVL112:
 404:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* Preempt Task */
 1061              		.loc 1 404 0
 1062 0372 FFF7FEFF 		bl	GetRunningSchedulingQueueElementPtr
 1063              	.LVL113:
 406:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 1064              		.loc 1 406 0
 1065 0376 74B1     		cbz	r4, .L137
 1066 0378 0546     		mov	r5, r0
 406:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 1067              		.loc 1 406 0 is_stmt 0 discriminator 1
 1068 037a 60B1     		cbz	r0, .L137
 1069              	.LVL114:
 1070              	.LBB42:
 1071              	.LBB43:
 357:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 1072              		.loc 1 357 0 is_stmt 1
 1073 037c 236B     		ldr	r3, [r4, #48]
 1074 037e 002B     		cmp	r3, #0
 1075 0380 00F0A180 		beq	.L138
 359:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 1076              		.loc 1 359 0
 1077 0384 0121     		movs	r1, #1
 1078 0386 2046     		mov	r0, r4
 1079              	.LVL115:
 1080 0388 9847     		blx	r3
 1081              	.LVL116:
 1082 038a 0128     		cmp	r0, #1
 1083 038c 7CD0     		beq	.L175
 374:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 1084              		.loc 1 374 0
 1085 038e 0821     		movs	r1, #8
 1086 0390 0120     		movs	r0, #1
 1087 0392 FFF7FEFF 		bl	OS_SetSwBug
 1088              	.LVL117:
 1089              	.L137:
 1090              	.LBE43:
 1091              	.LBE42:
 1092              	.LBB47:
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 31


 1093              	.LBB48:
 462:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #if (CFG_PROCESSOR != cMCU_X86)
 463:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    while(1) {}
 464:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #endif
 465:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* end */
 466:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 467:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_InitTasks(void)
 468:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 469:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_t* task_ptr = 0;
 470:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    LAST_CURRENT_TIME = OS_GetCurrentTime();
 471:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 472:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter (TASK_GROUP_1);
 473:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter (TASK_GROUP_2);
 474:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter (TASK_GROUP_3);
 475:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter (TASK_GROUP_4);
 476:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter (TASK_GROUP_5);
 477:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 478:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****     /*
 479:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    set task_state for all tasks to Task_unspecified
 480:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****     */
 481:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_InitTaskQueue();
 482:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 483:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* setup idle task */
 484:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_ptr = &TASK_0_VAR;
 485:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_InitTask(task_ptr,                          /* task */
 486:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_0,                           /* Task Function*/
 487:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 1,                                 /* Nr of allowed instances*/
 488:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 True,                              /* Idle Task */
 489:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_GROUP_1,                     /* Task Group */
 490:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 (unsigned_char_t*)&TASK_STACK[0],  /* Task_stack */
 491:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 200,                                /* Stack Size */
 492:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 ePriviligeMode_unpriviliged_thread_mode, /* Unpriviliged Thread Mode */
 493:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 Core0,                            /* Cortex M4 has only 1 core */
 494:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 0                                   /* default prio */
 495:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                );
 496:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    AddToSchedulingQueue(task_ptr);
 497:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SaveTaskPtr(task_ptr, Task_0_ptr);
 498:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 499:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* setup worker task */
 500:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_ptr = &TASK_1_VAR;
 501:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_InitTask(task_ptr,      /* task */
 502:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_1,       /* Task Function*/
 503:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 1,             /* Nr of allowed instances*/
 504:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 False,          /* Idle Task */
 505:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_GROUP_1, /* Task Group */
 506:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 (unsigned_char_t*)&TASK_STACK[1],/* Task_stack */
 507:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 200,            /* Stack Size */
 508:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 ePriviligeMode_unpriviliged_thread_mode, /* Unpriviliged Thread Mode */
 509:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 Core0,
 510:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 1                                   /* default prio */
 511:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                );
 512:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    AddToSchedulingQueue(task_ptr);               
 513:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SaveTaskPtr(task_ptr, Task_1_ptr);
 514:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 515:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* setup worker task */
 516:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_ptr = &TASK_2_VAR;
 517:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_InitTask(task_ptr,      /* task */
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 32


 518:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_2,       /* Task Function*/
 519:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 1,             /* Nr of allowed instances*/
 520:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 False,          /* Idle Task */
 521:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_GROUP_2, /* Task Group */
 522:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 (unsigned_char_t*)&TASK_STACK[2],/* Task_stack */
 523:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 200,            /* Stack Size */
 524:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 ePriviligeMode_unpriviliged_thread_mode, /* Unpriviliged Thread Mode */
 525:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 Core0,
 526:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 2                                   /* default prio */
 527:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                );
 528:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    AddToSchedulingQueue(task_ptr);               
 529:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SaveTaskPtr(task_ptr, Task_2_ptr);
 530:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 531:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* setup worker task */
 532:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_ptr = &TASK_3_VAR;
 533:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_InitTask(task_ptr,      /* task */
 534:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_3,       /* Task Function*/
 535:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 1,             /* Nr of allowed instances*/
 536:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 False,          /* Idle Task */
 537:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_GROUP_3, /* Task Group */
 538:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 (unsigned_char_t*)&TASK_STACK[3],/* Task_stack */
 539:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 200,           /* Stack Size */
 540:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 ePriviligeMode_unpriviliged_thread_mode, /* Unpriviliged Thread Mode */
 541:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 Core0,
 542:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 3                                   /* default prio */
 543:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                );
 544:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    AddToSchedulingQueue(task_ptr);               
 545:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SaveTaskPtr(task_ptr, Task_3_ptr);
 546:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 547:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 548:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 549:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local scheduling_t* OS_TaskScheduler(void)
 550:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 551:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 552:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_t*    scheduling_queue_member;
 553:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    unsigned_char_t element_nr;
 554:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 555:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    unsigned_char_t Winner_prio = 0;
 556:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_t*         task = 0;
 557:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_t*         Winner_task = 0;
 558:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduling_t*   Winner_scheduling_queue_member = 0;
 559:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduler_time_t delta_time = OS_GetCurrentTime() - LAST_CURRENT_TIME;
 1094              		.loc 1 559 0
 1095 0396 4E4C     		ldr	r4, .L178
 1096              	.LVL118:
 560:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 561:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    LAST_CURRENT_TIME = OS_GetCurrentTime();
 562:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 563:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter(Winner_task);
 564:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*
 565:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x const for single task: task->default_prio // low = 0,.....high=100
 566:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x var   for single task: task->current_prio // see prio_std
 567:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x var   for single task: task->wait_time    //
 568:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x var   for single task: task->exe_time
 569:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x const for single task: task->TimeToPrioInc
 570:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x const for single task: task->max_allowed_wait_time
 571:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x const for single task: task->min_allowed_wait_time
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 33


 572:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x const for single task: task->overwaittime_per_prio_inc_step //e.g. 100*MinTimeSlice_us
 573:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x const for single task: task->task_group  //to allow processor access control by groups (e.g. u
 574:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x const for single task: task->WaitActUntil
 575:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    (task_group is designed to allow proccessor access control between e.g. Customer Software Task a
 576:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    */
 577:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    For_all_tasks_in_queue(element_nr)
 578:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 579:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       scheduling_queue_member = GetFromSchedulingQueue(element_nr);
 580:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       /*task will have a pointer on the task_obj, and might be equal to "(task_t*) 0" */
 581:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       task             = GetFromTaskQueue(scheduling_queue_member);
 582:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       /* increase prio: high numbers->high prio */
 583:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       if((task != 0)&&(task->task_queued != False))
 584:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 585:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->wait_time >= task->TimeToPrioInc)
 586:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 587:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->current_prio = task->current_prio + task->overwaittime_per_prio_inc_step;
 588:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 589:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* in case wait condition not yet fulfilled, set prio to 0 */
 590:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->WaitActUntil > OS_GetCurrentTime())
 591:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 592:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->current_prio = 0;
 593:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 594:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->wait_time > task->max_allowed_wait_time)
 595:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 596:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* set bug */
 597:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_SetSwBug(os_bug_task_max_wait_time_reached, Func_TaskScheduler);
 598:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 599:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* not active TASK_RUN_QUEUE elements have no valid task_group!!*/
 600:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->task_group!=0)
 601:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 602:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* usage the exe time for scheduling strategy */
 603:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             if(task->task_group->exe_time > task->task_group->fair_exe_time)
 604:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             {
 605:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                if(task->exe_time > Task_min_time)/* guarantee min time */
 1097              		.loc 1 605 0
 1098 0398 DFF83C91 		ldr	r9, .L178+8
 559:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 1099              		.loc 1 559 0
 1100 039c FFF7FEFF 		bl	OS_GetCurrentTime
 1101              	.LVL119:
 1102 03a0 2668     		ldr	r6, [r4]
 1103 03a2 861B     		subs	r6, r0, r6
 1104              	.LVL120:
 561:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 1105              		.loc 1 561 0
 1106 03a4 FFF7FEFF 		bl	OS_GetCurrentTime
 1107              	.LVL121:
 1108 03a8 0025     		movs	r5, #0
 1109 03aa 2060     		str	r0, [r4]
 1110              	.LVL122:
 1111              		.loc 1 605 0
 1112 03ac 4FF00008 		mov	r8, #0
 1113 03b0 14E0     		b	.L148
 1114              	.LVL123:
 1115              	.L145:
 600:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 1116              		.loc 1 600 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 34


 1117 03b2 A36B     		ldr	r3, [r4, #56]
 1118 03b4 002B     		cmp	r3, #0
 1119 03b6 39D0     		beq	.L146
 1120              	.L177:
 603:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             {
 1121              		.loc 1 603 0
 1122 03b8 D3E90023 		ldrd	r2, r3, [r3]
 1123 03bc 9A42     		cmp	r2, r3
 1124 03be 0AD9     		bls	.L141
 1125              		.loc 1 605 0
 1126 03c0 E069     		ldr	r0, [r4, #28]
 1127 03c2 FFF7FEFF 		bl	__aeabi_ui2d
 1128              	.LVL124:
 1129 03c6 4246     		mov	r2, r8
 1130 03c8 4B46     		mov	r3, r9
 1131 03ca FFF7FEFF 		bl	__aeabi_dcmpgt
 1132              	.LVL125:
 1133 03ce 10B1     		cbz	r0, .L141
 606:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                {
 607:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                   task->current_prio = 0;
 1134              		.loc 1 607 0
 1135 03d0 0023     		movs	r3, #0
 1136 03d2 84F82430 		strb	r3, [r4, #36]
 1137              	.L141:
 1138              	.LVL126:
 1139 03d6 0135     		adds	r5, r5, #1
 1140              	.LVL127:
 577:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 1141              		.loc 1 577 0
 1142 03d8 0A2D     		cmp	r5, #10
 1143 03da 2ED0     		beq	.L176
 1144              	.LVL128:
 1145              	.L148:
 579:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       /*task will have a pointer on the task_obj, and might be equal to "(task_t*) 0" */
 1146              		.loc 1 579 0
 1147 03dc E8B2     		uxtb	r0, r5
 1148 03de FFF7FEFF 		bl	GetFromSchedulingQueue
 1149              	.LVL129:
 581:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       /* increase prio: high numbers->high prio */
 1150              		.loc 1 581 0
 1151 03e2 FFF7FEFF 		bl	GetFromTaskQueue
 1152              	.LVL130:
 583:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 1153              		.loc 1 583 0
 1154 03e6 0446     		mov	r4, r0
 1155 03e8 0028     		cmp	r0, #0
 1156 03ea F4D0     		beq	.L141
 1157 03ec 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1158 03ee 9A07     		lsls	r2, r3, #30
 1159 03f0 F1D5     		bpl	.L141
 585:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 1160              		.loc 1 585 0
 1161 03f2 D0E90323 		ldrd	r2, r3, [r0, #12]
 1162 03f6 9A42     		cmp	r2, r3
 1163 03f8 05D3     		bcc	.L143
 587:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 1164              		.loc 1 587 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 35


 1165 03fa 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 1166 03fe 4269     		ldr	r2, [r0, #20]
 1167 0400 1344     		add	r3, r3, r2
 1168 0402 80F82430 		strb	r3, [r0, #36]
 1169              	.L143:
 590:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 1170              		.loc 1 590 0
 1171 0406 A768     		ldr	r7, [r4, #8]
 1172 0408 FFF7FEFF 		bl	OS_GetCurrentTime
 1173              	.LVL131:
 1174 040c 8742     		cmp	r7, r0
 592:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 1175              		.loc 1 592 0
 1176 040e 84BF     		itt	hi
 1177 0410 0023     		movhi	r3, #0
 1178 0412 84F82430 		strbhi	r3, [r4, #36]
 594:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 1179              		.loc 1 594 0
 1180 0416 E268     		ldr	r2, [r4, #12]
 1181 0418 A369     		ldr	r3, [r4, #24]
 1182 041a 9A42     		cmp	r2, r3
 1183 041c C9D9     		bls	.L145
 597:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 1184              		.loc 1 597 0
 1185 041e 0921     		movs	r1, #9
 1186 0420 0320     		movs	r0, #3
 1187 0422 FFF7FEFF 		bl	OS_SetSwBug
 1188              	.LVL132:
 600:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 1189              		.loc 1 600 0
 1190 0426 A36B     		ldr	r3, [r4, #56]
 1191 0428 002B     		cmp	r3, #0
 1192 042a C5D1     		bne	.L177
 1193              	.L146:
 608:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 609:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                }
 610:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             }
 611:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 612:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          else
 613:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 614:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_SetSwBug(os_bug_null_pointer, Func_TaskScheduler);
 1194              		.loc 1 614 0
 1195 042c 0921     		movs	r1, #9
 1196 042e 0220     		movs	r0, #2
 1197 0430 0135     		adds	r5, r5, #1
 1198              	.LVL133:
 1199 0432 FFF7FEFF 		bl	OS_SetSwBug
 1200              	.LVL134:
 577:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 1201              		.loc 1 577 0
 1202 0436 0A2D     		cmp	r5, #10
 1203 0438 D0D1     		bne	.L148
 1204              	.L176:
 1205 043a 0024     		movs	r4, #0
 1206              	.LVL135:
 558:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduler_time_t delta_time = OS_GetCurrentTime() - LAST_CURRENT_TIME;
 1207              		.loc 1 558 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 36


 1208 043c A046     		mov	r8, r4
 555:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_t*         task = 0;
 1209              		.loc 1 555 0
 1210 043e 2746     		mov	r7, r4
 1211              	.LVL136:
 1212              	.L151:
 615:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 616:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 617:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       /* do not set bug, because task =0 is used for empty queue elements
 618:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       else
 619:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 620:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****           OS_SetSwBug(os_bug_null_pointer, Func_TaskScheduler);
 621:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 622:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       */
 623:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 624:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    For_all_tasks_in_queue(element_nr)
 625:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 626:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       scheduling_queue_member = GetFromSchedulingQueue(element_nr);
 1213              		.loc 1 626 0
 1214 0440 E0B2     		uxtb	r0, r4
 1215 0442 FFF7FEFF 		bl	GetFromSchedulingQueue
 1216              	.LVL137:
 1217 0446 0546     		mov	r5, r0
 1218              	.LVL138:
 627:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       task             = GetFromTaskQueue(scheduling_queue_member);
 1219              		.loc 1 627 0
 1220 0448 FFF7FEFF 		bl	GetFromTaskQueue
 1221              	.LVL139:
 1222 044c 0134     		adds	r4, r4, #1
 1223              	.LVL140:
 628:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       if(task != 0)
 1224              		.loc 1 628 0
 1225 044e 58B1     		cbz	r0, .L149
 629:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 630:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /*update wait time */
 631:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->IdleTask != True)
 1226              		.loc 1 631 0
 1227 0450 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1228 0452 5B07     		lsls	r3, r3, #29
 1229 0454 02D4     		bmi	.L150
 632:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 633:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->wait_time += delta_time;
 1230              		.loc 1 633 0
 1231 0456 C368     		ldr	r3, [r0, #12]
 1232 0458 3344     		add	r3, r3, r6
 1233 045a C360     		str	r3, [r0, #12]
 1234              	.L150:
 634:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 635:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* search for task with highest prio and assign it to Winner_task */
 636:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->current_prio > Winner_prio)
 1235              		.loc 1 636 0
 1236 045c 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 1237 0460 BB42     		cmp	r3, r7
 637:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 638:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             Winner_prio = task->current_prio;
 639:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             Winner_task = task;
 640:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             Winner_scheduling_queue_member = scheduling_queue_member;
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 37


 1238              		.loc 1 640 0
 1239 0462 84BF     		itt	hi
 1240 0464 A846     		movhi	r8, r5
 636:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 1241              		.loc 1 636 0
 1242 0466 1F46     		movhi	r7, r3
 1243              	.LVL141:
 1244              	.L149:
 624:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 1245              		.loc 1 624 0
 1246 0468 0A2C     		cmp	r4, #10
 1247 046a E9D1     		bne	.L151
 1248              	.LVL142:
 1249              	.LBE48:
 1250              	.LBE47:
 414:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 1251              		.loc 1 414 0
 1252 046c B8F1000F 		cmp	r8, #0
 1253 0470 08D0     		beq	.L136
 416:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 1254              		.loc 1 416 0
 1255 0472 4046     		mov	r0, r8
 1256 0474 FFF7FEFF 		bl	GetFromTaskQueue
 1257              	.LVL143:
 418:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 1258              		.loc 1 418 0
 1259 0478 20B1     		cbz	r0, .L136
 420:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 1260              		.loc 1 420 0
 1261 047a 4146     		mov	r1, r8
 422:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_0(void* task_ptr)
 1262              		.loc 1 422 0
 1263 047c BDE8F843 		pop	{r3, r4, r5, r6, r7, r8, r9, lr}
 1264              		.cfi_remember_state
 1265              		.cfi_restore 14
 1266              		.cfi_restore 9
 1267              		.cfi_restore 8
 1268              		.cfi_restore 7
 1269              		.cfi_restore 6
 1270              		.cfi_restore 5
 1271              		.cfi_restore 4
 1272              		.cfi_restore 3
 1273              		.cfi_def_cfa_offset 0
 420:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 1274              		.loc 1 420 0
 1275 0480 FFF7FEBF 		b	OS_StartTask
 1276              	.LVL144:
 1277              	.L136:
 1278              		.cfi_restore_state
 422:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_0(void* task_ptr)
 1279              		.loc 1 422 0
 1280 0484 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1281              	.LVL145:
 1282              	.L175:
 1283              	.LBB49:
 1284              	.LBB46:
 361:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TaskSaveTaskEnvironment(task);
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 38


 1285              		.loc 1 361 0
 1286 0488 FFF7FEFF 		bl	LLF_INT_DISABLE
 1287              	.LVL146:
 362:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_RESTORE_SYSTEM_STACK(&OS_STACK[OS_GetCoreId()][0]);
 1288              		.loc 1 362 0
 1289 048c 2046     		mov	r0, r4
 1290 048e FFF7FEFF 		bl	OS_TaskSaveTaskEnvironment
 1291              	.LVL147:
 363:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DeleteFromTaskQueue(task);
 1292              		.loc 1 363 0
 1293 0492 FFF7FEFF 		bl	OS_GetCoreId
 1294              	.LVL148:
 1295 0496 0F4B     		ldr	r3, .L178+4
 1296 0498 00EB8000 		add	r0, r0, r0, lsl #2
 1297 049c 03EB0030 		add	r0, r3, r0, lsl #12
 1298 04a0 FFF7FEFF 		bl	OS_TASK_RESTORE_SYSTEM_STACK
 1299              	.LVL149:
 364:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DeleteFromSchedulingQueue(scheduling_task);
 1300              		.loc 1 364 0
 1301 04a4 2046     		mov	r0, r4
 1302 04a6 FFF7FEFF 		bl	DeleteFromTaskQueue
 1303              	.LVL150:
 365:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 1304              		.loc 1 365 0
 1305 04aa 2846     		mov	r0, r5
 1306 04ac FFF7FEFF 		bl	DeleteFromSchedulingQueue
 1307              	.LVL151:
 367:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* reset the prio increase for waiting */
 1308              		.loc 1 367 0
 1309 04b0 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 369:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             EnableInterrupts();
 1310              		.loc 1 369 0
 1311 04b2 94F82520 		ldrb	r2, [r4, #37]	@ zero_extendqisi2
 1312 04b6 84F82420 		strb	r2, [r4, #36]
 367:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* reset the prio increase for waiting */
 1313              		.loc 1 367 0
 1314 04ba 6FF30003 		bfc	r3, #0, #1
 1315 04be 2370     		strb	r3, [r4]
 370:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 1316              		.loc 1 370 0
 1317 04c0 FFF7FEFF 		bl	LLF_INT_ENABLE
 1318              	.LVL152:
 1319 04c4 67E7     		b	.L137
 1320              	.LVL153:
 1321              	.L138:
 1322              	.LBB44:
 1323              	.LBB45:
 379:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 1324              		.loc 1 379 0
 1325 04c6 0821     		movs	r1, #8
 1326 04c8 0220     		movs	r0, #2
 1327              	.LVL154:
 1328 04ca FFF7FEFF 		bl	OS_SetSwBug
 1329              	.LVL155:
 1330 04ce 62E7     		b	.L137
 1331              	.L179:
 1332              		.align	2
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 39


 1333              	.L178:
 1334 04d0 00000000 		.word	LAST_CURRENT_TIME
 1335 04d4 00000000 		.word	OS_STACK
 1336 04d8 0000F03F 		.word	1072693248
 1337              	.LBE45:
 1338              	.LBE44:
 1339              	.LBE46:
 1340              	.LBE49:
 1341              		.cfi_endproc
 1342              	.LFE8:
 1344              		.align	1
 1345              		.p2align 2,,3
 1346              		.global	OS_InitTasks
 1347              		.syntax unified
 1348              		.thumb
 1349              		.thumb_func
 1350              		.fpu softvfp
 1352              	OS_InitTasks:
 1353              	.LFB13:
 468:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_t* task_ptr = 0;
 1354              		.loc 1 468 0
 1355              		.cfi_startproc
 1356              		@ args = 0, pretend = 0, frame = 0
 1357              		@ frame_needed = 0, uses_anonymous_args = 0
 1358              	.LVL156:
 1359 04dc 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1360              		.cfi_def_cfa_offset 28
 1361              		.cfi_offset 4, -28
 1362              		.cfi_offset 5, -24
 1363              		.cfi_offset 6, -20
 1364              		.cfi_offset 7, -16
 1365              		.cfi_offset 8, -12
 1366              		.cfi_offset 9, -8
 1367              		.cfi_offset 14, -4
 1368 04e0 87B0     		sub	sp, sp, #28
 1369              		.cfi_def_cfa_offset 56
 470:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 1370              		.loc 1 470 0
 1371 04e2 FFF7FEFF 		bl	OS_GetCurrentTime
 1372              	.LVL157:
 1373 04e6 2F4B     		ldr	r3, .L182
 485:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_0,                           /* Task Function*/
 1374              		.loc 1 485 0
 1375 04e8 2F4E     		ldr	r6, .L182+4
 1376 04ea 304D     		ldr	r5, .L182+8
 470:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 1377              		.loc 1 470 0
 1378 04ec 1860     		str	r0, [r3]
 485:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_0,                           /* Task Function*/
 1379              		.loc 1 485 0
 1380 04ee 0024     		movs	r4, #0
 481:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 1381              		.loc 1 481 0
 1382 04f0 FFF7FEFF 		bl	OS_InitTaskQueue
 1383              	.LVL158:
 485:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_0,                           /* Task Function*/
 1384              		.loc 1 485 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 40


 1385 04f4 C827     		movs	r7, #200
 1386 04f6 0123     		movs	r3, #1
 1387 04f8 DFF8D080 		ldr	r8, .L182+40
 1388 04fc CDF80080 		str	r8, [sp]
 1389 0500 1A46     		mov	r2, r3
 1390 0502 3046     		mov	r0, r6
 1391 0504 CDE90157 		strd	r5, r7, [sp, #4]
 1392 0508 2949     		ldr	r1, .L182+12
 1393 050a 0594     		str	r4, [sp, #20]
 1394 050c CDE90344 		strd	r4, r4, [sp, #12]
 1395 0510 FFF7FEFF 		bl	OS_InitTask
 1396              	.LVL159:
 501:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_1,       /* Task Function*/
 1397              		.loc 1 501 0
 1398 0514 DFF8B890 		ldr	r9, .L182+44
 496:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SaveTaskPtr(task_ptr, Task_0_ptr);
 1399              		.loc 1 496 0
 1400 0518 3046     		mov	r0, r6
 1401 051a FFF7FEFF 		bl	AddToSchedulingQueue
 1402              	.LVL160:
 501:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_1,       /* Task Function*/
 1403              		.loc 1 501 0
 1404 051e 0126     		movs	r6, #1
 1405 0520 05F5FA63 		add	r3, r5, #2000
 1406 0524 CDE90083 		strd	r8, r3, [sp]
 1407 0528 3246     		mov	r2, r6
 1408 052a 2346     		mov	r3, r4
 1409 052c 4846     		mov	r0, r9
 1410 052e 2149     		ldr	r1, .L182+16
 1411 0530 0297     		str	r7, [sp, #8]
 1412 0532 CDE90344 		strd	r4, r4, [sp, #12]
 1413 0536 0596     		str	r6, [sp, #20]
 1414 0538 FFF7FEFF 		bl	OS_InitTask
 1415              	.LVL161:
 517:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_2,       /* Task Function*/
 1416              		.loc 1 517 0
 1417 053c DFF89480 		ldr	r8, .L182+48
 512:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SaveTaskPtr(task_ptr, Task_1_ptr);
 1418              		.loc 1 512 0
 1419 0540 4846     		mov	r0, r9
 1420 0542 FFF7FEFF 		bl	AddToSchedulingQueue
 1421              	.LVL162:
 517:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_2,       /* Task Function*/
 1422              		.loc 1 517 0
 1423 0546 05F57A65 		add	r5, r5, #4000
 1424 054a 4FF0020C 		mov	ip, #2
 1425 054e 1A49     		ldr	r1, .L182+20
 1426 0550 CDF814C0 		str	ip, [sp, #20]
 1427 0554 2346     		mov	r3, r4
 1428 0556 3246     		mov	r2, r6
 1429 0558 0195     		str	r5, [sp, #4]
 1430 055a 4046     		mov	r0, r8
 1431 055c 0091     		str	r1, [sp]
 1432 055e CDE90344 		strd	r4, r4, [sp, #12]
 1433 0562 1649     		ldr	r1, .L182+24
 1434 0564 0297     		str	r7, [sp, #8]
 1435 0566 FFF7FEFF 		bl	OS_InitTask
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 41


 1436              	.LVL163:
 528:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SaveTaskPtr(task_ptr, Task_2_ptr);
 1437              		.loc 1 528 0
 1438 056a 4046     		mov	r0, r8
 1439 056c FFF7FEFF 		bl	AddToSchedulingQueue
 1440              	.LVL164:
 533:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_3,       /* Task Function*/
 1441              		.loc 1 533 0
 1442 0570 134D     		ldr	r5, .L182+28
 1443 0572 DFF864C0 		ldr	ip, .L182+52
 1444 0576 1349     		ldr	r1, .L182+32
 1445 0578 0297     		str	r7, [sp, #8]
 1446 057a 4FF0030E 		mov	lr, #3
 1447 057e 2846     		mov	r0, r5
 1448 0580 CDE9001C 		strd	r1, ip, [sp]
 1449 0584 CDE90344 		strd	r4, r4, [sp, #12]
 1450 0588 2346     		mov	r3, r4
 1451 058a 3246     		mov	r2, r6
 1452 058c CDF814E0 		str	lr, [sp, #20]
 1453 0590 0D49     		ldr	r1, .L182+36
 1454 0592 FFF7FEFF 		bl	OS_InitTask
 1455              	.LVL165:
 544:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SaveTaskPtr(task_ptr, Task_3_ptr);
 1456              		.loc 1 544 0
 1457 0596 2846     		mov	r0, r5
 546:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 1458              		.loc 1 546 0
 1459 0598 07B0     		add	sp, sp, #28
 1460              		.cfi_def_cfa_offset 28
 1461              		@ sp needed
 1462 059a BDE8F043 		pop	{r4, r5, r6, r7, r8, r9, lr}
 1463              		.cfi_restore 14
 1464              		.cfi_restore 9
 1465              		.cfi_restore 8
 1466              		.cfi_restore 7
 1467              		.cfi_restore 6
 1468              		.cfi_restore 5
 1469              		.cfi_restore 4
 1470              		.cfi_def_cfa_offset 0
 544:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SaveTaskPtr(task_ptr, Task_3_ptr);
 1471              		.loc 1 544 0
 1472 059e FFF7FEBF 		b	AddToSchedulingQueue
 1473              	.LVL166:
 1474              	.L183:
 1475 05a2 00BF     		.align	2
 1476              	.L182:
 1477 05a4 00000000 		.word	LAST_CURRENT_TIME
 1478 05a8 00000000 		.word	TASK_0_VAR
 1479 05ac 00000000 		.word	TASK_STACK
 1480 05b0 00000000 		.word	TASK_0
 1481 05b4 00000000 		.word	TASK_1
 1482 05b8 00000000 		.word	TASK_GROUP_2
 1483 05bc 00000000 		.word	TASK_2
 1484 05c0 00000000 		.word	TASK_3_VAR
 1485 05c4 00000000 		.word	TASK_GROUP_3
 1486 05c8 00000000 		.word	TASK_3
 1487 05cc 00000000 		.word	TASK_GROUP_1
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 42


 1488 05d0 00000000 		.word	TASK_1_VAR
 1489 05d4 00000000 		.word	TASK_2_VAR
 1490 05d8 70170000 		.word	TASK_STACK+6000
 1491              		.cfi_endproc
 1492              	.LFE13:
 1494              	.Letext0:
 1495              		.file 2 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_base_types.h"
 1496              		.file 3 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_common.h"
 1497              		.file 4 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_drivers\\lld_core.h"
 1498              		.file 5 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_task_common.h"
 1499              		.file 6 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_ram.h"
 1500              		.file 7 "E:\\NeuOrga\\Programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_task_scheduler.h"
 1501              		.file 8 "E:\\NeuOrga\\Programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_task_queue.h"
 1502              		.file 9 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_drivers\\lld_global.h"
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 43


DEFINED SYMBOLS
                            *ABS*:00000000 os_task_scheduler.c
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:15     .text:00000000 $t
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:22     .text:00000000 TASK_2
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:42     .text:0000000c $d
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:46     .text:00000010 $t
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:53     .text:00000010 TASK_3
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:72     .text:0000001c $d
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:76     .text:00000020 $t
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:83     .text:00000020 TASK_1
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:179    .text:00000090 $d
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:188    .text:00000098 $t
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:195    .text:00000098 TASK_0
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:217    .text:0000009c OS_ActivateDispatcher
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:264    .text:000000c4 $d
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:270    .text:000000d0 $t
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:278    .text:000000d0 OS_SleepTask
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:398    .text:0000013c $d
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:404    .text:00000140 $t
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:412    .text:00000140 task_state_request
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:431    .text:0000014e $d
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:435    .text:00000152 $t
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:527    .text:000001ac $d
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:533    .text:000001b8 $t
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:541    .text:000001b8 OS_CreateTask
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:610    .text:000001ec OS_ActivateTask
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:728    .text:00000254 OS_StartTask
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:881    .text:000002e8 $d
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:885    .text:000002ec $t
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:893    .text:000002ec OS_TerminateTask
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:1023   .text:00000364 $d
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:1031   .text:00000368 $t
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:1039   .text:00000368 OS_TaskDispatcher
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:1334   .text:000004d0 $d
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:1344   .text:000004dc $t
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:1352   .text:000004dc OS_InitTasks
C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s:1477   .text:000005a4 $d
                           .group:00000000 wm4.0.d67ddeb5d3f434a0386bf4e126239e16
                           .group:00000000 wm4.os_base_types.h.2.f3c0267f175f5cbacca6b71710665a02
                           .group:00000000 wm4.os_common.h.2.eb6279ca092455f62aa554ec1864872d
                           .group:00000000 wm4.os_task_config.h.2.a73335dbec9f276504b3b94e79d1d898
                           .group:00000000 wm4.os_task_common.h.95.eb4fc951d6d8ca08a3f35501d742a960
                           .group:00000000 wm4.os_stack.h.2.a33fb8b396f31bed4bacb411e67ef75c
                           .group:00000000 wm4.os_heap.h.2.89074aae455d2462b5952479e3530dd1
                           .group:00000000 wm4.os_main.h.2.1f66ae3841c27bd36097fa1d2e1fe6a7
                           .group:00000000 wm4.os_task_scheduler.h.2.125feba674fa85672711aed1ca8ea199
                           .group:00000000 wm4.os_task_queue.h.2.9428c7964838a07bb4b1cac6c50ee9b2

UNDEFINED SYMBOLS
TASK2_CALL_NR
TASK3_CALL_NR
GetRunningSchedulingQueueElementPtr
OS_GetCurrentTime
OS_SetSwBug
LLF_INT_DISABLE
OS_TaskSaveTaskEnvironment
OS_GetCoreId
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccQrsTH4.s 			page 44


OS_TASK_RESTORE_SYSTEM_STACK
LLF_INT_ENABLE
TASK1_CALL_NR
OS_STACK
LLF_WAIT_FOR_INTERRUPT
TASK_TRANSITION_REJECTED_TASK_ADDR
TASK_TRANSITION_REJECTED_STATE
TASK_TRANSITION_CURRENT_STATE
AddToTaskQueue
AddToSchedulingQueue
AddToIdleTaskQueue
OS_TASK_SAVE_SYSTEM_STACK
OS_TASK_RESTORETASK_ENVIRONMENT
SET_RUNNING_TASK
LLF_CHANGE_TO_UNPRIVILIGED_THREAD_MODE
DeleteFromTaskQueue
DeleteFromSchedulingQueue
__aeabi_ui2d
__aeabi_dcmpgt
GetRunningTask
GetFromSchedulingQueue
GetFromTaskQueue
LAST_CURRENT_TIME
OS_InitTaskQueue
OS_InitTask
TASK_0_VAR
TASK_STACK
TASK_GROUP_2
TASK_3_VAR
TASK_GROUP_3
TASK_GROUP_1
TASK_1_VAR
TASK_2_VAR
