ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"os_task_scheduler.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.bss
  19              		.align	2
  20              	TASK_STACK:
  21 0000 00000000 		.space	1000
  21      00000000 
  21      00000000 
  21      00000000 
  21      00000000 
  22              		.align	2
  23              	LAST_CURRENT_TIME:
  24 03e8 00000000 		.space	4
  25              		.text
  26              		.align	2
  27              		.global	OS_ACTIVATE_DISPATCHER
  28              		.thumb
  29              		.thumb_func
  31              	OS_ACTIVATE_DISPATCHER:
  32              	.LFB0:
  33              		.file 1 "E:\\NeuOrga\\Programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_task_scheduler.c"
   1:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** #include "os_firstinc.h"
   2:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** #include "os_common.h"
   3:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** #include "os_task_common.h"
   4:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** #include "os_task_scheduler.h"
   5:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** #include "os_task_queue.h"
   6:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** #include "os_stack.h"
   7:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
   8:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** /*
   9:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 1. running     --(terminate)--> suspend
  10:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 2. running     --(preempt  )--> ready
  11:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 3. suspend     --(activate )--> ready
  12:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 4. ready       --(start    )--> running
  13:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 5. unspecified --(create   )--> suspend
  14:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** */
  15:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  16:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void OS_STARTTASK(task_t* task);
  17:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void OS_TERMINATE_TASK(task_t* task);
  18:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_0(void* task_ptr);
  19:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_1(void* task_ptr);
  20:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_2(void* task_ptr);
  21:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void OS_TASK_DISPATCHER(void);
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 2


  22:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local task_t* OS_TaskScheduler();
  23:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  24:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local unsigned_char_t   TASK_STACK[MAX_RUN_QUEUE_SIZE][TASK_STACK_SIZE];
  25:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local scheduler_time_t LAST_CURRENT_TIME = 0;
  26:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  27:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_ACTIVATE_DISPATCHER(void)
  28:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
  34              		.loc 1 28 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  29:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  30:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* configure the TCMP */
  31:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*
  32:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    Dispatcher function for Core 0:
  33:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****     -> ISR_TASK_DISPATCH_C0
  34:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    Write Adresse into the config register (interrupts are requested by SWI/SVC???)
  35:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    */
  36:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #define SYSTICK_CTRL_STAT_REG ((uint32*)0xE000E010)
  37:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #define SYSTICK_RLD_VAL_REG   ((uint32*)0xE000E014)
  38:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #define SYSTICK_CURRENT_VAL_REG ((uint32*)0xE000E018)
  39:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #define SYSTICK_STAT_REG_TICKINT ((uint32)0x00000002)
  40:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #define SYSTICK_STAT_REG_ENABLE  ((uint32)0x00000001)
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    #define LOOPTIME_IN_USEC ((uint32)10000u) 
  42:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*
  43:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    CLOCK = HCLK / 8
  44:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    vermutlich: CLOCK = 150Mhz / 8 = 18,75 Mhz
  45:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    */
  46:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    
  47:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_RLD_VAL_REG = *SYSTICK_RLD_VAL_REG | (((uint32)MCU_CLOCK_IN_HZ * LOOPTIME_IN_USEC) / ((
  44              		.loc 1 47 0
  45 0004 094A     		ldr	r2, .L2
  46 0006 094B     		ldr	r3, .L2
  47 0008 1B68     		ldr	r3, [r3]
  48 000a 43F42673 		orr	r3, r3, #664
  49 000e 43F00303 		orr	r3, r3, #3
  50 0012 1360     		str	r3, [r2]
  48:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CURRENT_VAL_REG = ((uint32)0x00000000);
  51              		.loc 1 48 0
  52 0014 064B     		ldr	r3, .L2+4
  53 0016 0022     		movs	r2, #0
  54 0018 1A60     		str	r2, [r3]
  49:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    *SYSTICK_CTRL_STAT_REG = *SYSTICK_CTRL_STAT_REG | SYSTICK_STAT_REG_TICKINT | SYSTICK_STAT_REG_EN
  55              		.loc 1 49 0
  56 001a 064A     		ldr	r2, .L2+8
  57 001c 054B     		ldr	r3, .L2+8
  58 001e 1B68     		ldr	r3, [r3]
  59 0020 43F00303 		orr	r3, r3, #3
  60 0024 1360     		str	r3, [r2]
  50:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  51:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* activate now the interrupts */
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 3


  52:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    LLF_INT_ENABLE();
  61              		.loc 1 52 0
  62 0026 FFF7FEFF 		bl	LLF_INT_ENABLE
  53:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
  63              		.loc 1 53 0
  64 002a 80BD     		pop	{r7, pc}
  65              	.L3:
  66              		.align	2
  67              	.L2:
  68 002c 14E000E0 		.word	-536813548
  69 0030 18E000E0 		.word	-536813544
  70 0034 10E000E0 		.word	-536813552
  71              		.cfi_endproc
  72              	.LFE0:
  74              		.align	2
  75              		.global	OS_SLEEPTASK
  76              		.thumb
  77              		.thumb_func
  79              	OS_SLEEPTASK:
  80              	.LFB1:
  54:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  55:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  56:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_SLEEPTASK(task_t* task, task_time_t millisec)
  57:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
  81              		.loc 1 57 0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 8
  84              		@ frame_needed = 1, uses_anonymous_args = 0
  85 0038 80B5     		push	{r7, lr}
  86              		.cfi_def_cfa_offset 8
  87              		.cfi_offset 7, -8
  88              		.cfi_offset 14, -4
  89 003a 82B0     		sub	sp, sp, #8
  90              		.cfi_def_cfa_offset 16
  91 003c 00AF     		add	r7, sp, #0
  92              		.cfi_def_cfa_register 7
  93 003e 7860     		str	r0, [r7, #4]
  94 0040 3960     		str	r1, [r7]
  58:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task->WaitActUntil = Get_current_time() + millisec;
  95              		.loc 1 58 0
  96 0042 FFF7FEFF 		bl	Get_current_time
  97 0046 0246     		mov	r2, r0
  98 0048 3B68     		ldr	r3, [r7]
  99 004a 1A44     		add	r2, r2, r3
 100 004c 7B68     		ldr	r3, [r7, #4]
 101 004e 9A60     		str	r2, [r3, #8]
  59:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 102              		.loc 1 59 0
 103 0050 0837     		adds	r7, r7, #8
 104              		.cfi_def_cfa_offset 8
 105 0052 BD46     		mov	sp, r7
 106              		.cfi_def_cfa_register 13
 107              		@ sp needed
 108 0054 80BD     		pop	{r7, pc}
 109              		.cfi_endproc
 110              	.LFE1:
 112 0056 00BF     		.align	2
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 4


 113              		.global	task_state_request
 114              		.thumb
 115              		.thumb_func
 117              	task_state_request:
 118              	.LFB2:
  60:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  61:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** unsigned_char_t task_state_request(void* temp_task, task_state_t requested_state)
  62:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 119              		.loc 1 62 0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 16
 122              		@ frame_needed = 1, uses_anonymous_args = 0
 123 0058 80B5     		push	{r7, lr}
 124              		.cfi_def_cfa_offset 8
 125              		.cfi_offset 7, -8
 126              		.cfi_offset 14, -4
 127 005a 84B0     		sub	sp, sp, #16
 128              		.cfi_def_cfa_offset 24
 129 005c 00AF     		add	r7, sp, #0
 130              		.cfi_def_cfa_register 7
 131 005e 7860     		str	r0, [r7, #4]
 132 0060 0B46     		mov	r3, r1
 133 0062 FB70     		strb	r3, [r7, #3]
  63:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    unsigned_char_t RequestState = Rejected;
 134              		.loc 1 63 0
 135 0064 0023     		movs	r3, #0
 136 0066 FB73     		strb	r3, [r7, #15]
  64:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  65:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_t* task = (task_t*) temp_task;
 137              		.loc 1 65 0
 138 0068 7B68     		ldr	r3, [r7, #4]
 139 006a BB60     		str	r3, [r7, #8]
  66:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
  67:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    switch(requested_state)
 140              		.loc 1 67 0
 141 006c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 142 006e 032B     		cmp	r3, #3
 143 0070 57D8     		bhi	.L29
 144 0072 01A2     		adr	r2, .L8
 145 0074 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 146              		.p2align 2
 147              	.L8:
 148 0078 89000000 		.word	.L7+1
 149 007c AB000000 		.word	.L9+1
 150 0080 F5000000 		.word	.L10+1
 151 0084 D9000000 		.word	.L11+1
 152              		.p2align 1
 153              	.L7:
  68:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
  69:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    case Task_unspecified:/* 1. create new task */
  70:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
  71:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       switch(task->task_state)
 154              		.loc 1 71 0
 155 0088 BB68     		ldr	r3, [r7, #8]
 156 008a 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 157 008e 013B     		subs	r3, r3, #1
 158 0090 022B     		cmp	r3, #2
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 5


 159 0092 02D8     		bhi	.L12
  72:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
  73:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_ready:
  74:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_running:
  75:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_suspended:
  76:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
  77:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState = Rejected;
 160              		.loc 1 77 0
 161 0094 0023     		movs	r3, #0
 162 0096 FB73     		strb	r3, [r7, #15]
  78:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 163              		.loc 1 78 0
 164 0098 06E0     		b	.L14
 165              	.L12:
  79:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
  80:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       default:
  81:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
  82:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          task->task_state = Task_unspecified;
 166              		.loc 1 82 0
 167 009a BB68     		ldr	r3, [r7, #8]
 168 009c 0022     		movs	r2, #0
 169 009e 83F83020 		strb	r2, [r3, #48]
  83:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState = Accepted;
 170              		.loc 1 83 0
 171 00a2 0123     		movs	r3, #1
 172 00a4 FB73     		strb	r3, [r7, #15]
  84:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 173              		.loc 1 84 0
 174 00a6 00BF     		nop
 175              	.L14:
  85:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
  86:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
  87:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       break;
 176              		.loc 1 87 0
 177 00a8 3CE0     		b	.L15
 178              	.L9:
  88:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
  89:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    case Task_suspended:
  90:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
  91:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       switch(task->task_state)
 179              		.loc 1 91 0
 180 00aa BB68     		ldr	r3, [r7, #8]
 181 00ac 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 182 00b0 002B     		cmp	r3, #0
 183 00b2 02D0     		beq	.L17
 184 00b4 032B     		cmp	r3, #3
 185 00b6 07D0     		beq	.L18
  92:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
  93:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_unspecified: /* 2. create task transition */
  94:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
  95:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* no checks */
  96:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          task->task_state = Task_suspended;
  97:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState = Accepted;
  98:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
  99:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 100:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_running: /* 3. terminate task */
 101:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 6


 102:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          task->task_state = Task_suspended;
 103:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState = Accepted;
 104:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 105:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 106:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       default:
 107:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 108:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* no change in states allowed */
 109:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 186              		.loc 1 109 0
 187 00b8 0DE0     		b	.L19
 188              	.L17:
  96:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState = Accepted;
 189              		.loc 1 96 0
 190 00ba BB68     		ldr	r3, [r7, #8]
 191 00bc 0122     		movs	r2, #1
 192 00be 83F83020 		strb	r2, [r3, #48]
  97:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 193              		.loc 1 97 0
 194 00c2 0123     		movs	r3, #1
 195 00c4 FB73     		strb	r3, [r7, #15]
  98:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 196              		.loc 1 98 0
 197 00c6 06E0     		b	.L19
 198              	.L18:
 102:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState = Accepted;
 199              		.loc 1 102 0
 200 00c8 BB68     		ldr	r3, [r7, #8]
 201 00ca 0122     		movs	r2, #1
 202 00cc 83F83020 		strb	r2, [r3, #48]
 103:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 203              		.loc 1 103 0
 204 00d0 0123     		movs	r3, #1
 205 00d2 FB73     		strb	r3, [r7, #15]
 104:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 206              		.loc 1 104 0
 207 00d4 00BF     		nop
 208              	.L19:
 110:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 111:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 112:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       break;
 209              		.loc 1 112 0 discriminator 1
 210 00d6 25E0     		b	.L15
 211              	.L11:
 113:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 114:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    case Task_running:
 115:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 116:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       switch(task->task_state)
 212              		.loc 1 116 0
 213 00d8 BB68     		ldr	r3, [r7, #8]
 214 00da 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 215 00de 022B     		cmp	r3, #2
 216 00e0 00D0     		beq	.L21
 117:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 118:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_ready: /* 4. start task transition */
 119:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 120:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          task->task_state = Task_running;
 121:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState   = Accepted;
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 7


 122:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 123:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 124:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       default:
 125:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 126:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* no change in states allowed */
 127:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 217              		.loc 1 127 0
 218 00e2 06E0     		b	.L22
 219              	.L21:
 120:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState   = Accepted;
 220              		.loc 1 120 0
 221 00e4 BB68     		ldr	r3, [r7, #8]
 222 00e6 0322     		movs	r2, #3
 223 00e8 83F83020 		strb	r2, [r3, #48]
 121:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 224              		.loc 1 121 0
 225 00ec 0123     		movs	r3, #1
 226 00ee FB73     		strb	r3, [r7, #15]
 122:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 227              		.loc 1 122 0
 228 00f0 00BF     		nop
 229              	.L22:
 128:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 129:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 130:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       break;
 230              		.loc 1 130 0 discriminator 2
 231 00f2 17E0     		b	.L15
 232              	.L10:
 131:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 132:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 133:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    case Task_ready:
 134:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 135:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       switch(task->task_state)
 233              		.loc 1 135 0
 234 00f4 BB68     		ldr	r3, [r7, #8]
 235 00f6 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 236 00fa 012B     		cmp	r3, #1
 237 00fc 02D0     		beq	.L24
 238 00fe 032B     		cmp	r3, #3
 239 0100 07D0     		beq	.L25
 136:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 137:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_suspended: /* activate task transition */
 138:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 139:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          task->task_state = Task_ready;
 140:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState   = Accepted;
 141:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 142:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 143:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       case Task_running: /* preempt task transition */
 144:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 145:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          task->task_state = Task_ready;
 146:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState   = Accepted;
 147:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 148:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 149:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       default:
 150:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 151:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* no change in states allowed */
 152:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 8


 240              		.loc 1 152 0
 241 0102 0DE0     		b	.L26
 242              	.L24:
 139:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState   = Accepted;
 243              		.loc 1 139 0
 244 0104 BB68     		ldr	r3, [r7, #8]
 245 0106 0222     		movs	r2, #2
 246 0108 83F83020 		strb	r2, [r3, #48]
 140:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 247              		.loc 1 140 0
 248 010c 0123     		movs	r3, #1
 249 010e FB73     		strb	r3, [r7, #15]
 141:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 250              		.loc 1 141 0
 251 0110 06E0     		b	.L26
 252              	.L25:
 145:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          RequestState   = Accepted;
 253              		.loc 1 145 0
 254 0112 BB68     		ldr	r3, [r7, #8]
 255 0114 0222     		movs	r2, #2
 256 0116 83F83020 		strb	r2, [r3, #48]
 146:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          break;
 257              		.loc 1 146 0
 258 011a 0123     		movs	r3, #1
 259 011c FB73     		strb	r3, [r7, #15]
 147:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 260              		.loc 1 147 0
 261 011e 00BF     		nop
 262              	.L26:
 153:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 154:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 155:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       break;
 263              		.loc 1 155 0 discriminator 3
 264 0120 00E0     		b	.L15
 265              	.L29:
 156:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 157:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    default:
 158:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 159:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       break;
 266              		.loc 1 159 0
 267 0122 00BF     		nop
 268              	.L15:
 160:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 161:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 162:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    if(RequestState == Rejected)
 269              		.loc 1 162 0
 270 0124 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 271 0126 002B     		cmp	r3, #0
 272 0128 03D1     		bne	.L27
 163:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 164:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       OS_SET_SW_BUG(os_bug_taskstate_request_denied, Func_TaskStateRequest);
 273              		.loc 1 164 0
 274 012a 0120     		movs	r0, #1
 275 012c 0B21     		movs	r1, #11
 276 012e FFF7FEFF 		bl	OS_SET_SW_BUG
 277              	.L27:
 165:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 9


 166:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    return RequestState;
 278              		.loc 1 166 0
 279 0132 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 167:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 280              		.loc 1 167 0
 281 0134 1846     		mov	r0, r3
 282 0136 1037     		adds	r7, r7, #16
 283              		.cfi_def_cfa_offset 8
 284 0138 BD46     		mov	sp, r7
 285              		.cfi_def_cfa_register 13
 286              		@ sp needed
 287 013a 80BD     		pop	{r7, pc}
 288              		.cfi_endproc
 289              	.LFE2:
 291              		.align	2
 292              		.global	OS_ActivateTask
 293              		.thumb
 294              		.thumb_func
 296              	OS_ActivateTask:
 297              	.LFB3:
 168:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_ActivateTask(task_t* task)
 169:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 298              		.loc 1 169 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 8
 301              		@ frame_needed = 1, uses_anonymous_args = 0
 302 013c 80B5     		push	{r7, lr}
 303              		.cfi_def_cfa_offset 8
 304              		.cfi_offset 7, -8
 305              		.cfi_offset 14, -4
 306 013e 82B0     		sub	sp, sp, #8
 307              		.cfi_def_cfa_offset 16
 308 0140 00AF     		add	r7, sp, #0
 309              		.cfi_def_cfa_register 7
 310 0142 7860     		str	r0, [r7, #4]
 170:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*
 171:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    Activate Task:
 172:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - Disable Interrupts
 173:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - Add to schedule Queue
 174:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - Enable Interrupts
 175:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 176:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    in case of valid request, the content, where the "task_t* task" is point to is stored in TASK_RU
 177:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    */
 178:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    if(task != 0)
 311              		.loc 1 178 0
 312 0144 7B68     		ldr	r3, [r7, #4]
 313 0146 002B     		cmp	r3, #0
 314 0148 45D0     		beq	.L30
 179:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 180:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       if((task->IdleTask != False)||(task->state_request(task, Task_ready)==Accepted))
 315              		.loc 1 180 0
 316 014a 7B68     		ldr	r3, [r7, #4]
 317 014c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 318 014e 03F00403 		and	r3, r3, #4
 319 0152 DBB2     		uxtb	r3, r3
 320 0154 002B     		cmp	r3, #0
 321 0156 07D1     		bne	.L32
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 10


 322              		.loc 1 180 0 is_stmt 0 discriminator 1
 323 0158 7B68     		ldr	r3, [r7, #4]
 324 015a DB6A     		ldr	r3, [r3, #44]
 325 015c 7868     		ldr	r0, [r7, #4]
 326 015e 0221     		movs	r1, #2
 327 0160 9847     		blx	r3
 328 0162 0346     		mov	r3, r0
 329 0164 012B     		cmp	r3, #1
 330 0166 32D1     		bne	.L33
 331              	.L32:
 181:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 182:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          DisableInterrupts();
 332              		.loc 1 182 0 is_stmt 1
 333 0168 FFF7FEFF 		bl	LLF_INT_DISABLE
 183:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* 3. suspended to ready (add to runqueue) */
 184:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->IdleTask == False)
 334              		.loc 1 184 0
 335 016c 7B68     		ldr	r3, [r7, #4]
 336 016e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 337 0170 03F00403 		and	r3, r3, #4
 338 0174 DBB2     		uxtb	r3, r3
 339 0176 002B     		cmp	r3, #0
 340 0178 23D1     		bne	.L34
 185:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 186:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             if( (task->active == False)
 341              		.loc 1 186 0
 342 017a 7B68     		ldr	r3, [r7, #4]
 343 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 344 017e 03F00103 		and	r3, r3, #1
 345 0182 DBB2     		uxtb	r3, r3
 346 0184 002B     		cmp	r3, #0
 347 0186 0CD0     		beq	.L35
 187:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                   || ( (task->active == True) && (task->NrOfInsAllowed > task->NrOfInsActivated) )
 348              		.loc 1 187 0
 349 0188 7B68     		ldr	r3, [r7, #4]
 350 018a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 351 018c 03F00103 		and	r3, r3, #1
 352 0190 DBB2     		uxtb	r3, r3
 353 0192 002B     		cmp	r3, #0
 354 0194 18D0     		beq	.L37
 355              		.loc 1 187 0 is_stmt 0 discriminator 1
 356 0196 7B68     		ldr	r3, [r7, #4]
 357 0198 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 358 019a 7B68     		ldr	r3, [r7, #4]
 359 019c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 360 019e 9A42     		cmp	r2, r3
 361 01a0 12D9     		bls	.L37
 362              	.L35:
 188:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****               )
 189:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             {
 190:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                /* only activate if allowed by rule */
 191:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                task = AddToTaskQueue(task);
 363              		.loc 1 191 0 is_stmt 1
 364 01a2 7868     		ldr	r0, [r7, #4]
 365 01a4 FFF7FEFF 		bl	AddToTaskQueue
 366 01a8 7860     		str	r0, [r7, #4]
 192:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 11


 193:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                AddToLinkList(task);
 367              		.loc 1 193 0
 368 01aa 7868     		ldr	r0, [r7, #4]
 369 01ac FFF7FEFF 		bl	AddToLinkList
 194:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                UpdateLinkList();
 370              		.loc 1 194 0
 371 01b0 FFF7FEFF 		bl	UpdateLinkList
 195:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                task->NrOfInsActivated++;
 372              		.loc 1 195 0
 373 01b4 7B68     		ldr	r3, [r7, #4]
 374 01b6 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 375 01b8 0133     		adds	r3, r3, #1
 376 01ba DAB2     		uxtb	r2, r3
 377 01bc 7B68     		ldr	r3, [r7, #4]
 378 01be 5A71     		strb	r2, [r3, #5]
 379 01c0 02E0     		b	.L37
 380              	.L34:
 196:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             }
 197:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             else
 198:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             {
 199:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                /* multiple activation bug occured */
 200:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             }
 201:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 202:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          else
 203:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 204:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             AddToIdleTaskQueue(task);
 381              		.loc 1 204 0
 382 01c2 7868     		ldr	r0, [r7, #4]
 383 01c4 FFF7FEFF 		bl	AddToIdleTaskQueue
 384              	.L37:
 205:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 206:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          EnableInterrupts();
 385              		.loc 1 206 0
 386 01c8 FFF7FEFF 		bl	LLF_INT_ENABLE
 387 01cc 03E0     		b	.L30
 388              	.L33:
 207:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 208:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       else
 209:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 210:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          OS_SET_SW_BUG(os_bug_taskstate_request_denied, Func_ActivateTask);
 389              		.loc 1 210 0
 390 01ce 0120     		movs	r0, #1
 391 01d0 0A21     		movs	r1, #10
 392 01d2 FFF7FEFF 		bl	OS_SET_SW_BUG
 393              	.L30:
 211:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 212:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 213:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 394              		.loc 1 213 0
 395 01d6 0837     		adds	r7, r7, #8
 396              		.cfi_def_cfa_offset 8
 397 01d8 BD46     		mov	sp, r7
 398              		.cfi_def_cfa_register 13
 399              		@ sp needed
 400 01da 80BD     		pop	{r7, pc}
 401              		.cfi_endproc
 402              	.LFE3:
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 12


 404              		.align	2
 405              		.thumb
 406              		.thumb_func
 408              	OS_STARTTASK:
 409              	.LFB4:
 214:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void OS_STARTTASK(task_t* task)
 215:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 410              		.loc 1 215 0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 16
 413              		@ frame_needed = 1, uses_anonymous_args = 0
 414 01dc 80B5     		push	{r7, lr}
 415              		.cfi_def_cfa_offset 8
 416              		.cfi_offset 7, -8
 417              		.cfi_offset 14, -4
 418 01de 84B0     		sub	sp, sp, #16
 419              		.cfi_def_cfa_offset 24
 420 01e0 00AF     		add	r7, sp, #0
 421              		.cfi_def_cfa_register 7
 422 01e2 7860     		str	r0, [r7, #4]
 216:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* OS_STARTTASK
 217:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - Disable interrupts
 218:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - restore Environment
 219:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - enable interrupts
 220:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 221:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - Start Task
 222:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****     */
 223:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduler_time_t start_time;
 224:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    if(task != 0 && ((task->task_queued != False)||(task->IdleTask != False)))
 423              		.loc 1 224 0
 424 01e4 7B68     		ldr	r3, [r7, #4]
 425 01e6 002B     		cmp	r3, #0
 426 01e8 7CD0     		beq	.L38
 427              		.loc 1 224 0 is_stmt 0 discriminator 1
 428 01ea 7B68     		ldr	r3, [r7, #4]
 429 01ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 430 01ee 03F00203 		and	r3, r3, #2
 431 01f2 DBB2     		uxtb	r3, r3
 432 01f4 002B     		cmp	r3, #0
 433 01f6 06D1     		bne	.L40
 434              		.loc 1 224 0 discriminator 2
 435 01f8 7B68     		ldr	r3, [r7, #4]
 436 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 437 01fc 03F00403 		and	r3, r3, #4
 438 0200 DBB2     		uxtb	r3, r3
 439 0202 002B     		cmp	r3, #0
 440 0204 6ED0     		beq	.L38
 441              	.L40:
 225:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 226:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       if(task->state_request !=0)
 442              		.loc 1 226 0 is_stmt 1
 443 0206 7B68     		ldr	r3, [r7, #4]
 444 0208 DB6A     		ldr	r3, [r3, #44]
 445 020a 002B     		cmp	r3, #0
 446 020c 66D0     		beq	.L41
 227:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 228:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->state_request(task, Task_running)== Accepted)
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 13


 447              		.loc 1 228 0
 448 020e 7B68     		ldr	r3, [r7, #4]
 449 0210 DB6A     		ldr	r3, [r3, #44]
 450 0212 7868     		ldr	r0, [r7, #4]
 451 0214 0321     		movs	r1, #3
 452 0216 9847     		blx	r3
 453 0218 0346     		mov	r3, r0
 454 021a 012B     		cmp	r3, #1
 455 021c 59D1     		bne	.L42
 229:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 230:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DisableInterrupts();
 456              		.loc 1 230 0
 457 021e FFF7FEFF 		bl	LLF_INT_DISABLE
 231:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->active =  True;
 458              		.loc 1 231 0
 459 0222 7A68     		ldr	r2, [r7, #4]
 460 0224 1378     		ldrb	r3, [r2]
 461 0226 43F00103 		orr	r3, r3, #1
 462 022a 1370     		strb	r3, [r2]
 232:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->wait_time = 0;
 463              		.loc 1 232 0
 464 022c 7B68     		ldr	r3, [r7, #4]
 465 022e 0022     		movs	r2, #0
 466 0230 DA60     		str	r2, [r3, #12]
 233:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->current_prio = task->default_prio;
 467              		.loc 1 233 0
 468 0232 7B68     		ldr	r3, [r7, #4]
 469 0234 93F82120 		ldrb	r2, [r3, #33]	@ zero_extendqisi2
 470 0238 7B68     		ldr	r3, [r7, #4]
 471 023a 83F82020 		strb	r2, [r3, #32]
 234:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_SAVE_SYSTEM_STACK(&OS_STACK[GET_CORE_ID()][0]);
 472              		.loc 1 234 0
 473 023e FFF7FEFF 		bl	GET_CORE_ID
 474 0242 0346     		mov	r3, r0
 475 0244 1B02     		lsls	r3, r3, #8
 476 0246 294A     		ldr	r2, .L44
 477 0248 1344     		add	r3, r3, r2
 478 024a 1846     		mov	r0, r3
 479 024c FFF7FEFF 		bl	OS_TASK_SAVE_SYSTEM_STACK
 235:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_RESTORETASK_ENVIRONMENT(task);
 480              		.loc 1 235 0
 481 0250 7868     		ldr	r0, [r7, #4]
 482 0252 FFF7FEFF 		bl	OS_TASK_RESTORETASK_ENVIRONMENT
 236:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             start_time = Get_current_time();
 483              		.loc 1 236 0
 484 0256 FFF7FEFF 		bl	Get_current_time
 485 025a F860     		str	r0, [r7, #12]
 237:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             EnableInterrupts();
 486              		.loc 1 237 0
 487 025c FFF7FEFF 		bl	LLF_INT_ENABLE
 238:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 239:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* task execution shall not happen with disabled interrupts */
 240:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             SET_RUNNING_TASK(task);
 488              		.loc 1 240 0
 489 0260 7868     		ldr	r0, [r7, #4]
 490 0262 FFF7FEFF 		bl	SET_RUNNING_TASK
 241:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* save and enter privilige levels...*/
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 14


 242:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             Privilige_level_save_current();
 243:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             if(task->task_kernel_mode == True)
 244:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             {
 245:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                Privilige_level_enter_kernel_mode();
 246:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             }
 247:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->fp(task);
 491              		.loc 1 247 0
 492 0266 7B68     		ldr	r3, [r7, #4]
 493 0268 9B6A     		ldr	r3, [r3, #40]
 494 026a 7868     		ldr	r0, [r7, #4]
 495 026c 9847     		blx	r3
 248:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             Privilige_level_restore_saved();
 249:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 250:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DisableInterrupts();
 496              		.loc 1 250 0
 497 026e FFF7FEFF 		bl	LLF_INT_DISABLE
 251:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_SAVETASK_ENVIRONMENT(task);
 498              		.loc 1 251 0
 499 0272 7868     		ldr	r0, [r7, #4]
 500 0274 FFF7FEFF 		bl	OS_TASK_SAVETASK_ENVIRONMENT
 252:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_RESTORE_SYSTEM_STACK(&OS_STACK[GET_CORE_ID()][0]);
 501              		.loc 1 252 0
 502 0278 FFF7FEFF 		bl	GET_CORE_ID
 503 027c 0346     		mov	r3, r0
 504 027e 1B02     		lsls	r3, r3, #8
 505 0280 1A4A     		ldr	r2, .L44
 506 0282 1344     		add	r3, r3, r2
 507 0284 1846     		mov	r0, r3
 508 0286 FFF7FEFF 		bl	OS_TASK_RESTORE_SYSTEM_STACK
 253:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->active = False;
 509              		.loc 1 253 0
 510 028a 7A68     		ldr	r2, [r7, #4]
 511 028c 1378     		ldrb	r3, [r2]
 512 028e 6FF30003 		bfc	r3, #0, #1
 513 0292 1370     		strb	r3, [r2]
 254:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->exe_time += (Get_current_time() - start_time);
 514              		.loc 1 254 0
 515 0294 FFF7FEFF 		bl	Get_current_time
 516 0298 0246     		mov	r2, r0
 517 029a FB68     		ldr	r3, [r7, #12]
 518 029c D31A     		subs	r3, r2, r3
 519 029e 7A68     		ldr	r2, [r7, #4]
 520 02a0 D269     		ldr	r2, [r2, #28]
 521 02a2 1A44     		add	r2, r2, r3
 522 02a4 7B68     		ldr	r3, [r7, #4]
 523 02a6 DA61     		str	r2, [r3, #28]
 255:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->task_group->exe_time += (Get_current_time() - start_time);
 524              		.loc 1 255 0
 525 02a8 FFF7FEFF 		bl	Get_current_time
 526 02ac 0246     		mov	r2, r0
 527 02ae FB68     		ldr	r3, [r7, #12]
 528 02b0 D21A     		subs	r2, r2, r3
 529 02b2 7B68     		ldr	r3, [r7, #4]
 530 02b4 5B6B     		ldr	r3, [r3, #52]
 531 02b6 7968     		ldr	r1, [r7, #4]
 532 02b8 496B     		ldr	r1, [r1, #52]
 533 02ba 0968     		ldr	r1, [r1]
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 15


 534 02bc 0A44     		add	r2, r2, r1
 535 02be 1A60     		str	r2, [r3]
 256:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             SET_RUNNING_TASK(0);
 536              		.loc 1 256 0
 537 02c0 0020     		movs	r0, #0
 538 02c2 FFF7FEFF 		bl	SET_RUNNING_TASK
 257:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TERMINATE_TASK(task);
 539              		.loc 1 257 0
 540 02c6 7868     		ldr	r0, [r7, #4]
 541 02c8 00F012F8 		bl	OS_TERMINATE_TASK
 258:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             EnableInterrupts();
 542              		.loc 1 258 0
 543 02cc FFF7FEFF 		bl	LLF_INT_ENABLE
 544 02d0 08E0     		b	.L38
 545              	.L42:
 259:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* RUNNING_TASK->task_state sollte an dieser stelle (bei beendigung des Tasks durch Ter
 260:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 261:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          else
 262:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 263:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_SET_SW_BUG(os_bug_taskstate_request_denied, Func_StartTask);
 546              		.loc 1 263 0
 547 02d2 0120     		movs	r0, #1
 548 02d4 0521     		movs	r1, #5
 549 02d6 FFF7FEFF 		bl	OS_SET_SW_BUG
 550 02da 03E0     		b	.L38
 551              	.L41:
 264:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 265:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 266:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 267:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       else
 268:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 269:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          OS_SET_SW_BUG(os_bug_null_pointer, Func_StartTask);
 552              		.loc 1 269 0
 553 02dc 0220     		movs	r0, #2
 554 02de 0521     		movs	r1, #5
 555 02e0 FFF7FEFF 		bl	OS_SET_SW_BUG
 556              	.L38:
 270:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 271:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 272:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* allowed in case of empty QUEUE elements (queue elements which have no activate_task yet recei
 273:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    else
 274:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 275:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****        OS_SET_SW_BUG(os_bug_null_pointer, Func_StartTask);
 276:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 277:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    */
 278:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 557              		.loc 1 278 0
 558 02e4 1037     		adds	r7, r7, #16
 559              		.cfi_def_cfa_offset 8
 560 02e6 BD46     		mov	sp, r7
 561              		.cfi_def_cfa_register 13
 562              		@ sp needed
 563 02e8 80BD     		pop	{r7, pc}
 564              	.L45:
 565 02ea 00BF     		.align	2
 566              	.L44:
 567 02ec 00000000 		.word	OS_STACK
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 16


 568              		.cfi_endproc
 569              	.LFE4:
 571              		.align	2
 572              		.thumb
 573              		.thumb_func
 575              	OS_TERMINATE_TASK:
 576              	.LFB5:
 279:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void OS_TERMINATE_TASK(task_t* task)
 280:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 577              		.loc 1 280 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 8
 580              		@ frame_needed = 1, uses_anonymous_args = 0
 581 02f0 80B5     		push	{r7, lr}
 582              		.cfi_def_cfa_offset 8
 583              		.cfi_offset 7, -8
 584              		.cfi_offset 14, -4
 585 02f2 82B0     		sub	sp, sp, #8
 586              		.cfi_def_cfa_offset 16
 587 02f4 00AF     		add	r7, sp, #0
 588              		.cfi_def_cfa_register 7
 589 02f6 7860     		str	r0, [r7, #4]
 281:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* Preempt task
 282:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - Disable Interrupts
 283:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - os_TASK_SAVETASK_ENVIRONMENT
 284:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - add to Schedule Queue / delete from RunQueue
 285:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - delete active flag
 286:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    - enable Interrupts
 287:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    */
 288:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    if(task != 0)
 590              		.loc 1 288 0
 591 02f8 7B68     		ldr	r3, [r7, #4]
 592 02fa 002B     		cmp	r3, #0
 593 02fc 38D0     		beq	.L47
 289:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 290:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       if(task->state_request != 0)
 594              		.loc 1 290 0
 595 02fe 7B68     		ldr	r3, [r7, #4]
 596 0300 DB6A     		ldr	r3, [r3, #44]
 597 0302 002B     		cmp	r3, #0
 598 0304 2FD0     		beq	.L48
 291:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 292:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if((task->IdleTask != False)||(task->state_request(task, Task_ready)== Accepted))
 599              		.loc 1 292 0
 600 0306 7B68     		ldr	r3, [r7, #4]
 601 0308 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 602 030a 03F00403 		and	r3, r3, #4
 603 030e DBB2     		uxtb	r3, r3
 604 0310 002B     		cmp	r3, #0
 605 0312 07D1     		bne	.L49
 606              		.loc 1 292 0 is_stmt 0 discriminator 1
 607 0314 7B68     		ldr	r3, [r7, #4]
 608 0316 DB6A     		ldr	r3, [r3, #44]
 609 0318 7868     		ldr	r0, [r7, #4]
 610 031a 0221     		movs	r1, #2
 611 031c 9847     		blx	r3
 612 031e 0346     		mov	r3, r0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 17


 613 0320 012B     		cmp	r3, #1
 614 0322 1BD1     		bne	.L50
 615              	.L49:
 293:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 294:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             DisableInterrupts();
 616              		.loc 1 294 0 is_stmt 1
 617 0324 FFF7FEFF 		bl	LLF_INT_DISABLE
 295:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_SAVETASK_ENVIRONMENT(task);
 618              		.loc 1 295 0
 619 0328 7868     		ldr	r0, [r7, #4]
 620 032a FFF7FEFF 		bl	OS_TASK_SAVETASK_ENVIRONMENT
 296:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_TASK_RESTORE_SYSTEM_STACK(&OS_STACK[GET_CORE_ID()][0]);
 621              		.loc 1 296 0
 622 032e FFF7FEFF 		bl	GET_CORE_ID
 623 0332 0346     		mov	r3, r0
 624 0334 1B02     		lsls	r3, r3, #8
 625 0336 124A     		ldr	r2, .L54
 626 0338 1344     		add	r3, r3, r2
 627 033a 1846     		mov	r0, r3
 628 033c FFF7FEFF 		bl	OS_TASK_RESTORE_SYSTEM_STACK
 297:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 298:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->active = False;
 629              		.loc 1 298 0
 630 0340 7A68     		ldr	r2, [r7, #4]
 631 0342 1378     		ldrb	r3, [r2]
 632 0344 6FF30003 		bfc	r3, #0, #1
 633 0348 1370     		strb	r3, [r2]
 299:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* reset the prio increase for waiting */
 300:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->current_prio = task->default_prio;
 634              		.loc 1 300 0
 635 034a 7B68     		ldr	r3, [r7, #4]
 636 034c 93F82120 		ldrb	r2, [r3, #33]	@ zero_extendqisi2
 637 0350 7B68     		ldr	r3, [r7, #4]
 638 0352 83F82020 		strb	r2, [r3, #32]
 301:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             EnableInterrupts();
 639              		.loc 1 301 0
 640 0356 FFF7FEFF 		bl	LLF_INT_ENABLE
 641 035a 0DE0     		b	.L46
 642              	.L50:
 302:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 303:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          else
 304:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 305:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_SET_SW_BUG(os_bug_taskstate_request_denied, Func_TerminateTask);
 643              		.loc 1 305 0
 644 035c 0120     		movs	r0, #1
 645 035e 0721     		movs	r1, #7
 646 0360 FFF7FEFF 		bl	OS_SET_SW_BUG
 647 0364 08E0     		b	.L46
 648              	.L48:
 306:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 307:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 308:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       else
 309:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 310:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          OS_SET_SW_BUG(os_bug_null_pointer, Func_TerminateTask);
 649              		.loc 1 310 0
 650 0366 0220     		movs	r0, #2
 651 0368 0721     		movs	r1, #7
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 18


 652 036a FFF7FEFF 		bl	OS_SET_SW_BUG
 653 036e 03E0     		b	.L46
 654              	.L47:
 311:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 312:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 313:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 314:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    else
 315:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 316:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       OS_SET_SW_BUG(os_bug_null_pointer, Func_TerminateTask);
 655              		.loc 1 316 0
 656 0370 0220     		movs	r0, #2
 657 0372 0721     		movs	r1, #7
 658 0374 FFF7FEFF 		bl	OS_SET_SW_BUG
 659              	.L46:
 317:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 318:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 660              		.loc 1 318 0
 661 0378 0837     		adds	r7, r7, #8
 662              		.cfi_def_cfa_offset 8
 663 037a BD46     		mov	sp, r7
 664              		.cfi_def_cfa_register 13
 665              		@ sp needed
 666 037c 80BD     		pop	{r7, pc}
 667              	.L55:
 668 037e 00BF     		.align	2
 669              	.L54:
 670 0380 00000000 		.word	OS_STACK
 671              		.cfi_endproc
 672              	.LFE5:
 674              		.align	2
 675              		.thumb
 676              		.thumb_func
 678              	OS_TASK_DISPATCHER:
 679              	.LFB6:
 319:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_TASK_DISPATCHER(void)
 320:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 680              		.loc 1 320 0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 8
 683              		@ frame_needed = 1, uses_anonymous_args = 0
 684 0384 80B5     		push	{r7, lr}
 685              		.cfi_def_cfa_offset 8
 686              		.cfi_offset 7, -8
 687              		.cfi_offset 14, -4
 688 0386 82B0     		sub	sp, sp, #8
 689              		.cfi_def_cfa_offset 16
 690 0388 00AF     		add	r7, sp, #0
 691              		.cfi_def_cfa_register 7
 321:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* called in an certain core context (Core_0/1/2/3)*/
 322:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 323:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 324:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*
 325:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    1. running     --(terminate)--> suspend
 326:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    2. running     --(preempt  )--> ready
 327:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    3. suspend     --(activate )--> ready
 328:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    4. ready       --(start    )--> running
 329:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    5. unspecified --(create   )--> suspend
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 19


 330:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    */
 331:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_t* task = 0;
 692              		.loc 1 331 0
 693 038a 0023     		movs	r3, #0
 694 038c 7B60     		str	r3, [r7, #4]
 332:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* get running task */
 333:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task = GetRunningTask(); /* bug: at first call of TaskSheduler*//* might reply tasks in state re
 695              		.loc 1 333 0
 696 038e FFF7FEFF 		bl	GetRunningTask
 697 0392 7860     		str	r0, [r7, #4]
 334:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 335:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* Preempt Task */
 336:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_TERMINATE_TASK(task);
 698              		.loc 1 336 0
 699 0394 7868     		ldr	r0, [r7, #4]
 700 0396 FFF7ABFF 		bl	OS_TERMINATE_TASK
 337:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 338:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* ask for the next task to be activated... */
 339:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task = OS_TaskScheduler();
 701              		.loc 1 339 0
 702 039a 00F0A5F8 		bl	OS_TaskScheduler
 703 039e 7860     		str	r0, [r7, #4]
 340:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 341:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_STARTTASK(task);
 704              		.loc 1 341 0
 705 03a0 7868     		ldr	r0, [r7, #4]
 706 03a2 FFF71BFF 		bl	OS_STARTTASK
 342:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 707              		.loc 1 342 0
 708 03a6 0837     		adds	r7, r7, #8
 709              		.cfi_def_cfa_offset 8
 710 03a8 BD46     		mov	sp, r7
 711              		.cfi_def_cfa_register 13
 712              		@ sp needed
 713 03aa 80BD     		pop	{r7, pc}
 714              		.cfi_endproc
 715              	.LFE6:
 717              		.align	2
 718              		.thumb
 719              		.thumb_func
 721              	TASK_0:
 722              	.LFB7:
 343:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_0(void* task_ptr)
 344:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 723              		.loc 1 344 0
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 8
 726              		@ frame_needed = 1, uses_anonymous_args = 0
 727              		@ link register save eliminated.
 728 03ac 80B4     		push	{r7}
 729              		.cfi_def_cfa_offset 4
 730              		.cfi_offset 7, -4
 731 03ae 83B0     		sub	sp, sp, #12
 732              		.cfi_def_cfa_offset 16
 733 03b0 00AF     		add	r7, sp, #0
 734              		.cfi_def_cfa_register 7
 735 03b2 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 20


 345:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter(task_ptr);
 346:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    HaltMcu();/* HLT will be ended by timer interrupt, what shall be done with the rest of the funct
 347:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 736              		.loc 1 347 0
 737 03b4 0C37     		adds	r7, r7, #12
 738              		.cfi_def_cfa_offset 4
 739 03b6 BD46     		mov	sp, r7
 740              		.cfi_def_cfa_register 13
 741              		@ sp needed
 742 03b8 5DF8047B 		ldr	r7, [sp], #4
 743              		.cfi_restore 7
 744              		.cfi_def_cfa_offset 0
 745 03bc 7047     		bx	lr
 746              		.cfi_endproc
 747              	.LFE7:
 749 03be 00BF     		.align	2
 750              		.thumb
 751              		.thumb_func
 753              	TASK_1:
 754              	.LFB8:
 348:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_1(void* task_ptr)
 349:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 755              		.loc 1 349 0
 756              		.cfi_startproc
 757              		@ args = 0, pretend = 0, frame = 8
 758              		@ frame_needed = 1, uses_anonymous_args = 0
 759 03c0 80B5     		push	{r7, lr}
 760              		.cfi_def_cfa_offset 8
 761              		.cfi_offset 7, -8
 762              		.cfi_offset 14, -4
 763 03c2 82B0     		sub	sp, sp, #8
 764              		.cfi_def_cfa_offset 16
 765 03c4 00AF     		add	r7, sp, #0
 766              		.cfi_def_cfa_register 7
 767 03c6 7860     		str	r0, [r7, #4]
 350:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter(task_ptr);
 351:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* worker task */
 352:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 353:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* do some things */
 354:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*while(1) {}*/
 355:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SLEEPTASK((task_t*)task_ptr, 100000000);
 768              		.loc 1 355 0
 769 03c8 7868     		ldr	r0, [r7, #4]
 770 03ca 0349     		ldr	r1, .L59
 771 03cc FFF7FEFF 		bl	OS_SLEEPTASK
 356:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 357:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* end */
 358:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 772              		.loc 1 358 0
 773 03d0 0837     		adds	r7, r7, #8
 774              		.cfi_def_cfa_offset 8
 775 03d2 BD46     		mov	sp, r7
 776              		.cfi_def_cfa_register 13
 777              		@ sp needed
 778 03d4 80BD     		pop	{r7, pc}
 779              	.L60:
 780 03d6 00BF     		.align	2
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 21


 781              	.L59:
 782 03d8 00E1F505 		.word	100000000
 783              		.cfi_endproc
 784              	.LFE8:
 786              		.align	2
 787              		.thumb
 788              		.thumb_func
 790              	TASK_2:
 791              	.LFB9:
 359:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_2(void* task_ptr)
 360:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 792              		.loc 1 360 0
 793              		.cfi_startproc
 794              		@ args = 0, pretend = 0, frame = 8
 795              		@ frame_needed = 1, uses_anonymous_args = 0
 796              		@ link register save eliminated.
 797 03dc 80B4     		push	{r7}
 798              		.cfi_def_cfa_offset 4
 799              		.cfi_offset 7, -4
 800 03de 83B0     		sub	sp, sp, #12
 801              		.cfi_def_cfa_offset 16
 802 03e0 00AF     		add	r7, sp, #0
 803              		.cfi_def_cfa_register 7
 804 03e2 7860     		str	r0, [r7, #4]
 361:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter(task_ptr);
 362:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* worker task */
 363:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 364:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* do some things */
 365:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*while(1) {}*/
 366:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 367:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* end */
 368:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 805              		.loc 1 368 0
 806 03e4 0C37     		adds	r7, r7, #12
 807              		.cfi_def_cfa_offset 4
 808 03e6 BD46     		mov	sp, r7
 809              		.cfi_def_cfa_register 13
 810              		@ sp needed
 811 03e8 5DF8047B 		ldr	r7, [sp], #4
 812              		.cfi_restore 7
 813              		.cfi_def_cfa_offset 0
 814 03ec 7047     		bx	lr
 815              		.cfi_endproc
 816              	.LFE9:
 818 03ee 00BF     		.align	2
 819              		.thumb
 820              		.thumb_func
 822              	TASK_3:
 823              	.LFB10:
 369:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local void TASK_3(void* task_ptr)
 370:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 824              		.loc 1 370 0
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 8
 827              		@ frame_needed = 1, uses_anonymous_args = 0
 828              		@ link register save eliminated.
 829 03f0 80B4     		push	{r7}
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 22


 830              		.cfi_def_cfa_offset 4
 831              		.cfi_offset 7, -4
 832 03f2 83B0     		sub	sp, sp, #12
 833              		.cfi_def_cfa_offset 16
 834 03f4 00AF     		add	r7, sp, #0
 835              		.cfi_def_cfa_register 7
 836 03f6 7860     		str	r0, [r7, #4]
 371:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter(task_ptr);
 372:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* worker task */
 373:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 374:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* do some things */
 375:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*while(1) {}*/
 376:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 377:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* end */
 378:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 837              		.loc 1 378 0
 838 03f8 0C37     		adds	r7, r7, #12
 839              		.cfi_def_cfa_offset 4
 840 03fa BD46     		mov	sp, r7
 841              		.cfi_def_cfa_register 13
 842              		@ sp needed
 843 03fc 5DF8047B 		ldr	r7, [sp], #4
 844              		.cfi_restore 7
 845              		.cfi_def_cfa_offset 0
 846 0400 7047     		bx	lr
 847              		.cfi_endproc
 848              	.LFE10:
 850 0402 00BF     		.align	2
 851              		.global	OS_INIT_TASKS
 852              		.thumb
 853              		.thumb_func
 855              	OS_INIT_TASKS:
 856              	.LFB11:
 379:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void OS_INIT_TASKS(void)
 380:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 857              		.loc 1 380 0
 858              		.cfi_startproc
 859              		@ args = 0, pretend = 0, frame = 8
 860              		@ frame_needed = 1, uses_anonymous_args = 0
 861 0404 80B5     		push	{r7, lr}
 862              		.cfi_def_cfa_offset 8
 863              		.cfi_offset 7, -8
 864              		.cfi_offset 14, -4
 865 0406 86B0     		sub	sp, sp, #24
 866              		.cfi_def_cfa_offset 32
 867 0408 04AF     		add	r7, sp, #16
 868              		.cfi_def_cfa 7, 16
 381:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    Local task_t task_0, task_1, task_2, task_3;
 382:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    Local task_group_t TASK_GROUP_1;
 383:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    Local task_group_t TASK_GROUP_2;
 384:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    Local task_group_t TASK_GROUP_3;
 385:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    Local task_group_t TASK_GROUP_4;
 386:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    Local task_group_t TASK_GROUP_5;
 387:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_t* task_ptr = 0;
 869              		.loc 1 387 0
 870 040a 0023     		movs	r3, #0
 871 040c 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 23


 388:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    LAST_CURRENT_TIME = Get_current_time();
 872              		.loc 1 388 0
 873 040e FFF7FEFF 		bl	Get_current_time
 874 0412 0246     		mov	r2, r0
 875 0414 244B     		ldr	r3, .L64
 876 0416 1A60     		str	r2, [r3]
 389:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 390:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter (TASK_GROUP_1);
 391:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter (TASK_GROUP_2);
 392:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter (TASK_GROUP_3);
 393:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter (TASK_GROUP_4);
 394:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    ReferenceUnusedParameter (TASK_GROUP_5);
 395:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 396:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 397:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*#warn "CoreId, Privilige Level (User Mode, System Mode, Abort, Undefined, FiQ, IRQ), MEMORY Re
 398:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*
 399:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    set task_state for all tasks to Task_unspecified
 400:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****     */
 401:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_INIT_TASK_QUEUE();
 877              		.loc 1 401 0
 878 0418 FFF7FEFF 		bl	OS_INIT_TASK_QUEUE
 402:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 403:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* setup idle task */
 404:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_ptr = &task_0;
 879              		.loc 1 404 0
 880 041c 234B     		ldr	r3, .L64+4
 881 041e 7B60     		str	r3, [r7, #4]
 405:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_INIT_TASK(task_ptr,                          /* task */
 882              		.loc 1 405 0
 883 0420 234B     		ldr	r3, .L64+8
 884 0422 0093     		str	r3, [sp]
 885 0424 234B     		ldr	r3, .L64+12
 886 0426 0193     		str	r3, [sp, #4]
 887 0428 C823     		movs	r3, #200
 888 042a 0293     		str	r3, [sp, #8]
 889 042c 0123     		movs	r3, #1
 890 042e 0393     		str	r3, [sp, #12]
 891 0430 7868     		ldr	r0, [r7, #4]
 892 0432 2149     		ldr	r1, .L64+16
 893 0434 0122     		movs	r2, #1
 894 0436 0123     		movs	r3, #1
 895 0438 FFF7FEFF 		bl	OS_INIT_TASK
 406:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_0,                           /* Task Function*/
 407:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 1,                                 /* Nr of allowed instances*/
 408:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 True,                              /* Idle Task */
 409:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_GROUP_1,                     /* Task Group */
 410:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 (unsigned_char_t*)&TASK_STACK[0],  /* Task_stack */
 411:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 200,                                /* Stack Size */
 412:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 True                                /* Kernel Mode */
 413:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                );
 414:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SaveTaskPtr(task_ptr, Task_0_ptr);
 415:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 416:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*set the idle-task as first running task, otherwise preempt might fail */
 417:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    SET_RUNNING_TASK(task_ptr);
 896              		.loc 1 417 0
 897 043c 7868     		ldr	r0, [r7, #4]
 898 043e FFF7FEFF 		bl	SET_RUNNING_TASK
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 24


 418:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 419:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* setup worker task */
 420:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_ptr = &task_1;
 899              		.loc 1 420 0
 900 0442 1E4B     		ldr	r3, .L64+20
 901 0444 7B60     		str	r3, [r7, #4]
 421:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_INIT_TASK(task_ptr,      /* task */
 902              		.loc 1 421 0
 903 0446 1A4B     		ldr	r3, .L64+8
 904 0448 0093     		str	r3, [sp]
 905 044a 1D4B     		ldr	r3, .L64+24
 906 044c 0193     		str	r3, [sp, #4]
 907 044e C823     		movs	r3, #200
 908 0450 0293     		str	r3, [sp, #8]
 909 0452 0023     		movs	r3, #0
 910 0454 0393     		str	r3, [sp, #12]
 911 0456 7868     		ldr	r0, [r7, #4]
 912 0458 1A49     		ldr	r1, .L64+28
 913 045a 0122     		movs	r2, #1
 914 045c 0023     		movs	r3, #0
 915 045e FFF7FEFF 		bl	OS_INIT_TASK
 422:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_1,       /* Task Function*/
 423:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 1,             /* Nr of allowed instances*/
 424:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 False,          /* Idle Task */
 425:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_GROUP_1, /* Task Group */
 426:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 (unsigned_char_t*)&TASK_STACK[1],/* Task_stack */
 427:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 200,            /* Stack Size */
 428:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 False           /* Kernel Mode */
 429:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                );
 430:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SaveTaskPtr(task_ptr, Task_1_ptr);
 431:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 432:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* setup worker task */
 433:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_ptr = &task_2;
 916              		.loc 1 433 0
 917 0462 194B     		ldr	r3, .L64+32
 918 0464 7B60     		str	r3, [r7, #4]
 434:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_INIT_TASK(task_ptr,      /* task */
 919              		.loc 1 434 0
 920 0466 194B     		ldr	r3, .L64+36
 921 0468 0093     		str	r3, [sp]
 922 046a 194B     		ldr	r3, .L64+40
 923 046c 0193     		str	r3, [sp, #4]
 924 046e C823     		movs	r3, #200
 925 0470 0293     		str	r3, [sp, #8]
 926 0472 0023     		movs	r3, #0
 927 0474 0393     		str	r3, [sp, #12]
 928 0476 7868     		ldr	r0, [r7, #4]
 929 0478 1649     		ldr	r1, .L64+44
 930 047a 0122     		movs	r2, #1
 931 047c 0023     		movs	r3, #0
 932 047e FFF7FEFF 		bl	OS_INIT_TASK
 435:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_2,       /* Task Function*/
 436:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 1,             /* Nr of allowed instances*/
 437:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 False,          /* Idle Task */
 438:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_GROUP_2, /* Task Group */
 439:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 (unsigned_char_t*)&TASK_STACK[2],/* Task_stack */
 440:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 200,            /* Stack Size */
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 25


 441:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 False           /* Kernel Mode */
 442:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                );
 443:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SaveTaskPtr(task_ptr, Task_2_ptr);
 444:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 445:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* setup worker task */
 446:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_ptr = &task_3;
 933              		.loc 1 446 0
 934 0482 154B     		ldr	r3, .L64+48
 935 0484 7B60     		str	r3, [r7, #4]
 447:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_INIT_TASK(task_ptr,      /* task */
 936              		.loc 1 447 0
 937 0486 154B     		ldr	r3, .L64+52
 938 0488 0093     		str	r3, [sp]
 939 048a 154B     		ldr	r3, .L64+56
 940 048c 0193     		str	r3, [sp, #4]
 941 048e C823     		movs	r3, #200
 942 0490 0293     		str	r3, [sp, #8]
 943 0492 0123     		movs	r3, #1
 944 0494 0393     		str	r3, [sp, #12]
 945 0496 7868     		ldr	r0, [r7, #4]
 946 0498 1249     		ldr	r1, .L64+60
 947 049a 0122     		movs	r2, #1
 948 049c 0023     		movs	r3, #0
 949 049e FFF7FEFF 		bl	OS_INIT_TASK
 448:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_3,       /* Task Function*/
 449:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 1,             /* Nr of allowed instances*/
 450:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 False,          /* Idle Task */
 451:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 &TASK_GROUP_3, /* Task Group */
 452:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 (unsigned_char_t*)&TASK_STACK[3],/* Task_stack */
 453:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 200,           /* Stack Size */
 454:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                 True                                /* Kernel Mode */
 455:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                );
 456:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_SaveTaskPtr(task_ptr, Task_3_ptr);
 457:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 950              		.loc 1 457 0
 951 04a2 0837     		adds	r7, r7, #8
 952              		.cfi_def_cfa_offset 8
 953 04a4 BD46     		mov	sp, r7
 954              		.cfi_def_cfa_register 13
 955              		@ sp needed
 956 04a6 80BD     		pop	{r7, pc}
 957              	.L65:
 958              		.align	2
 959              	.L64:
 960 04a8 E8030000 		.word	LAST_CURRENT_TIME
 961 04ac 14040000 		.word	task_0.4045
 962 04b0 EC030000 		.word	TASK_GROUP_1.4049
 963 04b4 00000000 		.word	TASK_STACK
 964 04b8 00000000 		.word	TASK_0
 965 04bc 98040000 		.word	task_1.4046
 966 04c0 C8000000 		.word	TASK_STACK+200
 967 04c4 00000000 		.word	TASK_1
 968 04c8 1C050000 		.word	task_2.4047
 969 04cc F4030000 		.word	TASK_GROUP_2.4050
 970 04d0 90010000 		.word	TASK_STACK+400
 971 04d4 00000000 		.word	TASK_2
 972 04d8 A0050000 		.word	task_3.4048
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 26


 973 04dc FC030000 		.word	TASK_GROUP_3.4051
 974 04e0 58020000 		.word	TASK_STACK+600
 975 04e4 00000000 		.word	TASK_3
 976              		.cfi_endproc
 977              	.LFE11:
 979              		.global	__aeabi_ui2d
 980              		.global	__aeabi_dcmpgt
 981              		.align	2
 982              		.thumb
 983              		.thumb_func
 985              	OS_TaskScheduler:
 986              	.LFB12:
 458:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 459:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 460:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** Local task_t* OS_TaskScheduler(void)
 461:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 987              		.loc 1 461 0
 988              		.cfi_startproc
 989              		@ args = 0, pretend = 0, frame = 16
 990              		@ frame_needed = 1, uses_anonymous_args = 0
 991 04e8 90B5     		push	{r4, r7, lr}
 992              		.cfi_def_cfa_offset 12
 993              		.cfi_offset 4, -12
 994              		.cfi_offset 7, -8
 995              		.cfi_offset 14, -4
 996 04ea 85B0     		sub	sp, sp, #20
 997              		.cfi_def_cfa_offset 32
 998 04ec 00AF     		add	r7, sp, #0
 999              		.cfi_def_cfa_register 7
 462:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    Local task_t* task = 0;
 463:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    Local unsigned_char_t Winner_prio = 0;
 464:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    task_t*         Winner_task = 0;
 1000              		.loc 1 464 0
 1001 04ee 0023     		movs	r3, #0
 1002 04f0 FB60     		str	r3, [r7, #12]
 465:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    Local link_list_t*    link_list_member;
 466:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    unsigned_char_t       element_nr;
 467:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 468:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    scheduler_time_t delta_time = Get_current_time() - LAST_CURRENT_TIME;
 1003              		.loc 1 468 0
 1004 04f2 FFF7FEFF 		bl	Get_current_time
 1005 04f6 0246     		mov	r2, r0
 1006 04f8 6A4B     		ldr	r3, .L84
 1007 04fa 1B68     		ldr	r3, [r3]
 1008 04fc D31A     		subs	r3, r2, r3
 1009 04fe 7B60     		str	r3, [r7, #4]
 469:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    LAST_CURRENT_TIME = Get_current_time();
 1010              		.loc 1 469 0
 1011 0500 FFF7FEFF 		bl	Get_current_time
 1012 0504 0246     		mov	r2, r0
 1013 0506 674B     		ldr	r3, .L84
 1014 0508 1A60     		str	r2, [r3]
 470:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 471:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*
 472:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x const for single task: task->default_prio // low = 0,.....high=100
 473:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x var   for single task: task->current_prio // see prio_std
 474:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x var   for single task: task->wait_time    //
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 27


 475:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x var   for single task: task->exe_time
 476:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x const for single task: task->TimeToPrioInc
 477:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x const for single task: task->max_allowed_wait_time
 478:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x const for single task: task->min_allowed_wait_time
 479:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x const for single task: task->overwaittime_per_prio_inc_step //e.g. 100*MinTimeSlice_us
 480:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x const for single task: task->task_group  //to allow processor access control by groups (e.g. u
 481:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    x const for single task: task->WaitActUntil
 482:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    (task_group is designed to allow proccessor access control between e.g. Customer Software Task a
 483:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    */
 484:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    For_all_tasks_in_queue(element_nr)
 1015              		.loc 1 484 0
 1016 050a 0023     		movs	r3, #0
 1017 050c FB72     		strb	r3, [r7, #11]
 1018 050e 78E0     		b	.L67
 1019              	.L75:
 485:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 486:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       link_list_member = GetFromLinkList(element_nr);
 1020              		.loc 1 486 0
 1021 0510 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1022 0512 1846     		mov	r0, r3
 1023 0514 FFF7FEFF 		bl	GetFromLinkList
 1024 0518 0246     		mov	r2, r0
 1025 051a 634B     		ldr	r3, .L84+4
 1026 051c 1A60     		str	r2, [r3]
 487:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       /*task will have a pointer on the task_obj, and might be equal to "(task_t*) 0" */
 488:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       task             = GetFromTaskQueue(link_list_member);
 1027              		.loc 1 488 0
 1028 051e 624B     		ldr	r3, .L84+4
 1029 0520 1B68     		ldr	r3, [r3]
 1030 0522 1846     		mov	r0, r3
 1031 0524 FFF7FEFF 		bl	GetFromTaskQueue
 1032 0528 0246     		mov	r2, r0
 1033 052a 604B     		ldr	r3, .L84+8
 1034 052c 1A60     		str	r2, [r3]
 489:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       /* increase prio: high numbers->high prio */
 490:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       if((task != 0)&&(task->task_queued != False))
 1035              		.loc 1 490 0
 1036 052e 5F4B     		ldr	r3, .L84+8
 1037 0530 1B68     		ldr	r3, [r3]
 1038 0532 002B     		cmp	r3, #0
 1039 0534 62D0     		beq	.L68
 1040              		.loc 1 490 0 is_stmt 0 discriminator 1
 1041 0536 5D4B     		ldr	r3, .L84+8
 1042 0538 1B68     		ldr	r3, [r3]
 1043 053a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1044 053c 03F00203 		and	r3, r3, #2
 1045 0540 DBB2     		uxtb	r3, r3
 1046 0542 002B     		cmp	r3, #0
 1047 0544 5AD0     		beq	.L68
 491:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 492:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->wait_time >= task->TimeToPrioInc)
 1048              		.loc 1 492 0 is_stmt 1
 1049 0546 594B     		ldr	r3, .L84+8
 1050 0548 1B68     		ldr	r3, [r3]
 1051 054a DA68     		ldr	r2, [r3, #12]
 1052 054c 574B     		ldr	r3, .L84+8
 1053 054e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 28


 1054 0550 1B69     		ldr	r3, [r3, #16]
 1055 0552 9A42     		cmp	r2, r3
 1056 0554 0DD3     		bcc	.L69
 493:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 494:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->current_prio = task->current_prio + task->overwaittime_per_prio_inc_step;
 1057              		.loc 1 494 0
 1058 0556 554B     		ldr	r3, .L84+8
 1059 0558 1B68     		ldr	r3, [r3]
 1060 055a 544A     		ldr	r2, .L84+8
 1061 055c 1268     		ldr	r2, [r2]
 1062 055e 92F82010 		ldrb	r1, [r2, #32]	@ zero_extendqisi2
 1063 0562 524A     		ldr	r2, .L84+8
 1064 0564 1268     		ldr	r2, [r2]
 1065 0566 5269     		ldr	r2, [r2, #20]
 1066 0568 D2B2     		uxtb	r2, r2
 1067 056a 0A44     		add	r2, r2, r1
 1068 056c D2B2     		uxtb	r2, r2
 1069 056e 83F82020 		strb	r2, [r3, #32]
 1070              	.L69:
 495:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 496:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* in case wait condition not yet fulfilled, set prio to 0 */
 497:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->WaitActUntil > Get_current_time())
 1071              		.loc 1 497 0
 1072 0572 4E4B     		ldr	r3, .L84+8
 1073 0574 1B68     		ldr	r3, [r3]
 1074 0576 9C68     		ldr	r4, [r3, #8]
 1075 0578 FFF7FEFF 		bl	Get_current_time
 1076 057c 0346     		mov	r3, r0
 1077 057e 9C42     		cmp	r4, r3
 1078 0580 04D9     		bls	.L70
 498:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 499:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->current_prio = 0;
 1079              		.loc 1 499 0
 1080 0582 4A4B     		ldr	r3, .L84+8
 1081 0584 1B68     		ldr	r3, [r3]
 1082 0586 0022     		movs	r2, #0
 1083 0588 83F82020 		strb	r2, [r3, #32]
 1084              	.L70:
 500:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 501:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->wait_time > task->max_allowed_wait_time)
 1085              		.loc 1 501 0
 1086 058c 474B     		ldr	r3, .L84+8
 1087 058e 1B68     		ldr	r3, [r3]
 1088 0590 DA68     		ldr	r2, [r3, #12]
 1089 0592 464B     		ldr	r3, .L84+8
 1090 0594 1B68     		ldr	r3, [r3]
 1091 0596 9B69     		ldr	r3, [r3, #24]
 1092 0598 9A42     		cmp	r2, r3
 1093 059a 03D9     		bls	.L71
 502:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 503:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* set bug */
 504:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_SET_SW_BUG(os_bug_task_max_wait_time_reached, Func_TaskScheduler);
 1094              		.loc 1 504 0
 1095 059c 0320     		movs	r0, #3
 1096 059e 0821     		movs	r1, #8
 1097 05a0 FFF7FEFF 		bl	OS_SET_SW_BUG
 1098              	.L71:
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 29


 505:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 506:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* not active TASK_RUN_QUEUE elements have no valid task_group!!*/
 507:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->task_group!=0)
 1099              		.loc 1 507 0
 1100 05a4 414B     		ldr	r3, .L84+8
 1101 05a6 1B68     		ldr	r3, [r3]
 1102 05a8 5B6B     		ldr	r3, [r3, #52]
 1103 05aa 002B     		cmp	r3, #0
 1104 05ac 22D0     		beq	.L72
 508:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 509:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             /* usage the exe time for scheduling strategy */
 510:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             if(task->task_group->exe_time > task->task_group->fair_exe_time)
 1105              		.loc 1 510 0
 1106 05ae 3F4B     		ldr	r3, .L84+8
 1107 05b0 1B68     		ldr	r3, [r3]
 1108 05b2 5B6B     		ldr	r3, [r3, #52]
 1109 05b4 1A68     		ldr	r2, [r3]
 1110 05b6 3D4B     		ldr	r3, .L84+8
 1111 05b8 1B68     		ldr	r3, [r3]
 1112 05ba 5B6B     		ldr	r3, [r3, #52]
 1113 05bc 5B68     		ldr	r3, [r3, #4]
 1114 05be 9A42     		cmp	r2, r3
 1115 05c0 1CD9     		bls	.L68
 511:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             {
 512:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                if(task->exe_time > Task_min_time)/* guarantee min time */
 1116              		.loc 1 512 0
 1117 05c2 3A4B     		ldr	r3, .L84+8
 1118 05c4 1B68     		ldr	r3, [r3]
 1119 05c6 DB69     		ldr	r3, [r3, #28]
 1120 05c8 1846     		mov	r0, r3
 1121 05ca FFF7FEFF 		bl	__aeabi_ui2d
 1122 05ce 0246     		mov	r2, r0
 1123 05d0 0B46     		mov	r3, r1
 1124 05d2 1046     		mov	r0, r2
 1125 05d4 1946     		mov	r1, r3
 1126 05d6 4FF00002 		mov	r2, #0
 1127 05da 354B     		ldr	r3, .L84+12
 1128 05dc FFF7FEFF 		bl	__aeabi_dcmpgt
 1129 05e0 0346     		mov	r3, r0
 1130 05e2 002B     		cmp	r3, #0
 1131 05e4 00D1     		bne	.L83
 1132 05e6 09E0     		b	.L68
 1133              	.L83:
 513:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                {
 514:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                   task->current_prio = 0;
 1134              		.loc 1 514 0
 1135 05e8 304B     		ldr	r3, .L84+8
 1136 05ea 1B68     		ldr	r3, [r3]
 1137 05ec 0022     		movs	r2, #0
 1138 05ee 83F82020 		strb	r2, [r3, #32]
 1139 05f2 03E0     		b	.L68
 1140              	.L72:
 515:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 516:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****                }
 517:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             }
 518:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 519:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          else
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 30


 520:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 521:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             OS_SET_SW_BUG(os_bug_null_pointer, Func_TaskScheduler);
 1141              		.loc 1 521 0
 1142 05f4 0220     		movs	r0, #2
 1143 05f6 0821     		movs	r1, #8
 1144 05f8 FFF7FEFF 		bl	OS_SET_SW_BUG
 1145              	.L68:
 484:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 1146              		.loc 1 484 0 discriminator 2
 1147 05fc FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1148 05fe 0133     		adds	r3, r3, #1
 1149 0600 FB72     		strb	r3, [r7, #11]
 1150              	.L67:
 484:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 1151              		.loc 1 484 0 is_stmt 0 discriminator 1
 1152 0602 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1153 0604 042B     		cmp	r3, #4
 1154 0606 83D9     		bls	.L75
 522:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 523:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 524:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       /* do not set bug, because task =0 is used for empty queue elements
 525:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       else
 526:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 527:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****           OS_SET_SW_BUG(os_bug_null_pointer, Func_TaskScheduler);
 528:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 529:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       */
 530:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 531:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    For_all_tasks_in_queue(element_nr)
 1155              		.loc 1 531 0 is_stmt 1
 1156 0608 0023     		movs	r3, #0
 1157 060a FB72     		strb	r3, [r7, #11]
 1158 060c 36E0     		b	.L76
 1159              	.L79:
 532:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 533:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       link_list_member = GetFromLinkList(element_nr);
 1160              		.loc 1 533 0
 1161 060e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1162 0610 1846     		mov	r0, r3
 1163 0612 FFF7FEFF 		bl	GetFromLinkList
 1164 0616 0246     		mov	r2, r0
 1165 0618 234B     		ldr	r3, .L84+4
 1166 061a 1A60     		str	r2, [r3]
 534:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       task             = GetFromTaskQueue(link_list_member);
 1167              		.loc 1 534 0
 1168 061c 224B     		ldr	r3, .L84+4
 1169 061e 1B68     		ldr	r3, [r3]
 1170 0620 1846     		mov	r0, r3
 1171 0622 FFF7FEFF 		bl	GetFromTaskQueue
 1172 0626 0246     		mov	r2, r0
 1173 0628 204B     		ldr	r3, .L84+8
 1174 062a 1A60     		str	r2, [r3]
 535:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       if(task != 0)
 1175              		.loc 1 535 0
 1176 062c 1F4B     		ldr	r3, .L84+8
 1177 062e 1B68     		ldr	r3, [r3]
 1178 0630 002B     		cmp	r3, #0
 1179 0632 20D0     		beq	.L77
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 31


 536:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 537:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /*update wait time */
 538:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->IdleTask != True)
 1180              		.loc 1 538 0
 1181 0634 1D4B     		ldr	r3, .L84+8
 1182 0636 1B68     		ldr	r3, [r3]
 1183 0638 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1184 063a 03F00403 		and	r3, r3, #4
 1185 063e DBB2     		uxtb	r3, r3
 1186 0640 002B     		cmp	r3, #0
 1187 0642 07D1     		bne	.L78
 539:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 540:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             task->wait_time += delta_time;
 1188              		.loc 1 540 0
 1189 0644 194B     		ldr	r3, .L84+8
 1190 0646 1B68     		ldr	r3, [r3]
 1191 0648 184A     		ldr	r2, .L84+8
 1192 064a 1268     		ldr	r2, [r2]
 1193 064c D168     		ldr	r1, [r2, #12]
 1194 064e 7A68     		ldr	r2, [r7, #4]
 1195 0650 0A44     		add	r2, r2, r1
 1196 0652 DA60     		str	r2, [r3, #12]
 1197              	.L78:
 541:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 542:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          /* search for task with highest prio and assign it to Winner_task */
 543:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          if(task->current_prio > Winner_prio)
 1198              		.loc 1 543 0
 1199 0654 154B     		ldr	r3, .L84+8
 1200 0656 1B68     		ldr	r3, [r3]
 1201 0658 93F82020 		ldrb	r2, [r3, #32]	@ zero_extendqisi2
 1202 065c 154B     		ldr	r3, .L84+16
 1203 065e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1204 0660 9A42     		cmp	r2, r3
 1205 0662 08D9     		bls	.L77
 544:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          {
 545:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             Winner_prio = task->current_prio;
 1206              		.loc 1 545 0
 1207 0664 114B     		ldr	r3, .L84+8
 1208 0666 1B68     		ldr	r3, [r3]
 1209 0668 93F82020 		ldrb	r2, [r3, #32]	@ zero_extendqisi2
 1210 066c 114B     		ldr	r3, .L84+16
 1211 066e 1A70     		strb	r2, [r3]
 546:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****             Winner_task = task;
 1212              		.loc 1 546 0
 1213 0670 0E4B     		ldr	r3, .L84+8
 1214 0672 1B68     		ldr	r3, [r3]
 1215 0674 FB60     		str	r3, [r7, #12]
 1216              	.L77:
 531:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 1217              		.loc 1 531 0 discriminator 2
 1218 0676 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1219 0678 0133     		adds	r3, r3, #1
 1220 067a FB72     		strb	r3, [r7, #11]
 1221              	.L76:
 531:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 1222              		.loc 1 531 0 is_stmt 0 discriminator 1
 1223 067c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 32


 1224 067e 042B     		cmp	r3, #4
 1225 0680 C5D9     		bls	.L79
 547:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****          }
 548:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 549:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 550:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       /* do not set bug, because task =0 is used for empty queue elements
 551:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       else
 552:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       {
 553:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****           OS_SET_SW_BUG(os_bug_null_pointer, Func_TaskScheduler);
 554:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       }
 555:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       */
 556:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 557:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* prevent deathlook by permanently winning same task */
 558:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    if(Winner_task != 0)
 1226              		.loc 1 558 0 is_stmt 1
 1227 0682 FB68     		ldr	r3, [r7, #12]
 1228 0684 002B     		cmp	r3, #0
 1229 0686 04D0     		beq	.L80
 559:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 560:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       Winner_task->current_prio = 0;
 1230              		.loc 1 560 0
 1231 0688 FB68     		ldr	r3, [r7, #12]
 1232 068a 0022     		movs	r2, #0
 1233 068c 83F82020 		strb	r2, [r3, #32]
 1234 0690 02E0     		b	.L81
 1235              	.L80:
 561:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 562:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    else
 563:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    {
 564:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****       Winner_task = GetIdleTask();
 1236              		.loc 1 564 0
 1237 0692 FFF7FEFF 		bl	GetIdleTask
 1238 0696 F860     		str	r0, [r7, #12]
 1239              	.L81:
 565:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    }
 566:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    return Winner_task;
 1240              		.loc 1 566 0
 1241 0698 FB68     		ldr	r3, [r7, #12]
 567:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 1242              		.loc 1 567 0
 1243 069a 1846     		mov	r0, r3
 1244 069c 1437     		adds	r7, r7, #20
 1245              		.cfi_def_cfa_offset 12
 1246 069e BD46     		mov	sp, r7
 1247              		.cfi_def_cfa_register 13
 1248              		@ sp needed
 1249 06a0 90BD     		pop	{r4, r7, pc}
 1250              	.L85:
 1251 06a2 00BF     		.align	2
 1252              	.L84:
 1253 06a4 E8030000 		.word	LAST_CURRENT_TIME
 1254 06a8 24060000 		.word	link_list_member.4061
 1255 06ac 28060000 		.word	task.4058
 1256 06b0 0000F03F 		.word	1072693248
 1257 06b4 2C060000 		.word	Winner_prio.4059
 1258              		.cfi_endproc
 1259              	.LFE12:
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 33


 1261              		.align	2
 1262              		.global	ISR_TASK_DISPATCH_C0
 1263              		.thumb
 1264              		.thumb_func
 1266              	ISR_TASK_DISPATCH_C0:
 1267              	.LFB13:
 568:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 569:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void ISR_TASK_DISPATCH_C0(void)
 570:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 1268              		.loc 1 570 0
 1269              		.cfi_startproc
 1270              		@ args = 0, pretend = 0, frame = 0
 1271              		@ frame_needed = 1, uses_anonymous_args = 0
 1272 06b8 80B5     		push	{r7, lr}
 1273              		.cfi_def_cfa_offset 8
 1274              		.cfi_offset 7, -8
 1275              		.cfi_offset 14, -4
 1276 06ba 00AF     		add	r7, sp, #0
 1277              		.cfi_def_cfa_register 7
 571:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* after time MinTimeSlice_us is elapsed, the OS_TASK_DISPATCHER will be called again, interrupt
 572:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    LLF_ADD_2_TCMP(MinTimeSlice_us);
 1278              		.loc 1 572 0
 1279 06bc 4FF47A70 		mov	r0, #1000
 1280 06c0 FFF7FEFF 		bl	LLF_ADD_2_TCMP
 573:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 574:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*#warn "task scheduler should know which core it is running, to select the correct task to term
 575:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_TASK_DISPATCHER();
 1281              		.loc 1 575 0
 1282 06c4 FFF75EFE 		bl	OS_TASK_DISPATCHER
 576:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 577:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 1283              		.loc 1 577 0
 1284 06c8 80BD     		pop	{r7, pc}
 1285              		.cfi_endproc
 1286              	.LFE13:
 1288 06ca 00BF     		.align	2
 1289              		.global	ISR_TASK_DISPATCH_C1
 1290              		.thumb
 1291              		.thumb_func
 1293              	ISR_TASK_DISPATCH_C1:
 1294              	.LFB14:
 578:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 579:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void ISR_TASK_DISPATCH_C1(void)
 580:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 1295              		.loc 1 580 0
 1296              		.cfi_startproc
 1297              		@ args = 0, pretend = 0, frame = 0
 1298              		@ frame_needed = 1, uses_anonymous_args = 0
 1299 06cc 80B5     		push	{r7, lr}
 1300              		.cfi_def_cfa_offset 8
 1301              		.cfi_offset 7, -8
 1302              		.cfi_offset 14, -4
 1303 06ce 00AF     		add	r7, sp, #0
 1304              		.cfi_def_cfa_register 7
 581:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* after time MinTimeSlice_us is elapsed, the OS_TASK_DISPATCHER will be called again, interrupt
 582:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    LLF_ADD_2_TCMP(MinTimeSlice_us);
 1305              		.loc 1 582 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 34


 1306 06d0 4FF47A70 		mov	r0, #1000
 1307 06d4 FFF7FEFF 		bl	LLF_ADD_2_TCMP
 583:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 584:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*#warn "task scheduler should know which core it is running, to select the correct task to term
 585:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_TASK_DISPATCHER();
 1308              		.loc 1 585 0
 1309 06d8 FFF754FE 		bl	OS_TASK_DISPATCHER
 586:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 587:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 1310              		.loc 1 587 0
 1311 06dc 80BD     		pop	{r7, pc}
 1312              		.cfi_endproc
 1313              	.LFE14:
 1315 06de 00BF     		.align	2
 1316              		.global	ISR_TASK_DISPATCH_C2
 1317              		.thumb
 1318              		.thumb_func
 1320              	ISR_TASK_DISPATCH_C2:
 1321              	.LFB15:
 588:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 589:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void ISR_TASK_DISPATCH_C2(void)
 590:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 1322              		.loc 1 590 0
 1323              		.cfi_startproc
 1324              		@ args = 0, pretend = 0, frame = 0
 1325              		@ frame_needed = 1, uses_anonymous_args = 0
 1326 06e0 80B5     		push	{r7, lr}
 1327              		.cfi_def_cfa_offset 8
 1328              		.cfi_offset 7, -8
 1329              		.cfi_offset 14, -4
 1330 06e2 00AF     		add	r7, sp, #0
 1331              		.cfi_def_cfa_register 7
 591:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* after time MinTimeSlice_us is elapsed, the OS_TASK_DISPATCHER will be called again, interrupt
 592:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    LLF_ADD_2_TCMP(MinTimeSlice_us);
 1332              		.loc 1 592 0
 1333 06e4 4FF47A70 		mov	r0, #1000
 1334 06e8 FFF7FEFF 		bl	LLF_ADD_2_TCMP
 593:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 594:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*#warn "task scheduler should know which core it is running, to select the correct task to term
 595:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_TASK_DISPATCHER();
 1335              		.loc 1 595 0
 1336 06ec FFF74AFE 		bl	OS_TASK_DISPATCHER
 596:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 597:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 1337              		.loc 1 597 0
 1338 06f0 80BD     		pop	{r7, pc}
 1339              		.cfi_endproc
 1340              	.LFE15:
 1342 06f2 00BF     		.align	2
 1343              		.global	ISR_TASK_DISPATCH_C3
 1344              		.thumb
 1345              		.thumb_func
 1347              	ISR_TASK_DISPATCH_C3:
 1348              	.LFB16:
 598:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** void ISR_TASK_DISPATCH_C3(void)
 599:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** {
 1349              		.loc 1 599 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 35


 1350              		.cfi_startproc
 1351              		@ args = 0, pretend = 0, frame = 0
 1352              		@ frame_needed = 1, uses_anonymous_args = 0
 1353 06f4 80B5     		push	{r7, lr}
 1354              		.cfi_def_cfa_offset 8
 1355              		.cfi_offset 7, -8
 1356              		.cfi_offset 14, -4
 1357 06f6 00AF     		add	r7, sp, #0
 1358              		.cfi_def_cfa_register 7
 600:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /* after time MinTimeSlice_us is elapsed, the OS_TASK_DISPATCHER will be called again, interrupt
 601:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    LLF_ADD_2_TCMP(MinTimeSlice_us);
 1359              		.loc 1 601 0
 1360 06f8 4FF47A70 		mov	r0, #1000
 1361 06fc FFF7FEFF 		bl	LLF_ADD_2_TCMP
 602:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 603:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    /*#warn "task scheduler should know which core it is running, to select the correct task to term
 604:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c ****    OS_TASK_DISPATCHER();
 1362              		.loc 1 604 0
 1363 0700 FFF740FE 		bl	OS_TASK_DISPATCHER
 605:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** 
 606:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_scheduler.c **** }
 1364              		.loc 1 606 0
 1365 0704 80BD     		pop	{r7, pc}
 1366              		.cfi_endproc
 1367              	.LFE16:
 1369              		.bss
 1370              		.align	2
 1371              	TASK_GROUP_1.4049:
 1372 03ec 00000000 		.space	8
 1372      00000000 
 1373              		.align	2
 1374              	TASK_GROUP_2.4050:
 1375 03f4 00000000 		.space	8
 1375      00000000 
 1376              		.align	2
 1377              	TASK_GROUP_3.4051:
 1378 03fc 00000000 		.space	8
 1378      00000000 
 1379              		.align	2
 1380              	TASK_GROUP_4.4052:
 1381 0404 00000000 		.space	8
 1381      00000000 
 1382              		.align	2
 1383              	TASK_GROUP_5.4053:
 1384 040c 00000000 		.space	8
 1384      00000000 
 1385              		.align	2
 1386              	task_0.4045:
 1387 0414 00000000 		.space	132
 1387      00000000 
 1387      00000000 
 1387      00000000 
 1387      00000000 
 1388              		.align	2
 1389              	task_1.4046:
 1390 0498 00000000 		.space	132
 1390      00000000 
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 36


 1390      00000000 
 1390      00000000 
 1390      00000000 
 1391              		.align	2
 1392              	task_2.4047:
 1393 051c 00000000 		.space	132
 1393      00000000 
 1393      00000000 
 1393      00000000 
 1393      00000000 
 1394              		.align	2
 1395              	task_3.4048:
 1396 05a0 00000000 		.space	132
 1396      00000000 
 1396      00000000 
 1396      00000000 
 1396      00000000 
 1397              		.align	2
 1398              	link_list_member.4061:
 1399 0624 00000000 		.space	4
 1400              		.align	2
 1401              	task.4058:
 1402 0628 00000000 		.space	4
 1403              	Winner_prio.4059:
 1404 062c 00       		.space	1
 1405 062d 000000   		.text
 1406              	.Letext0:
 1407              		.file 2 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_base_types.h"
 1408              		.file 3 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_common.h"
 1409              		.file 4 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_task_common.h"
 1410              		.file 5 "E:\\NeuOrga\\Programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_task_scheduler.h"
 1411              		.file 6 "E:\\NeuOrga\\Programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_task_queue.h"
 1412              		.file 7 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_ram.h"
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 37


DEFINED SYMBOLS
                            *ABS*:00000000 os_task_scheduler.c
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:19     .bss:00000000 $d
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:20     .bss:00000000 TASK_STACK
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:23     .bss:000003e8 LAST_CURRENT_TIME
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:26     .text:00000000 $t
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:31     .text:00000000 OS_ACTIVATE_DISPATCHER
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:68     .text:0000002c $d
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:74     .text:00000038 $t
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:79     .text:00000038 OS_SLEEPTASK
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:117    .text:00000058 task_state_request
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:148    .text:00000078 $d
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:152    .text:00000088 $t
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:296    .text:0000013c OS_ActivateTask
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:408    .text:000001dc OS_STARTTASK
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:575    .text:000002f0 OS_TERMINATE_TASK
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:567    .text:000002ec $d
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:571    .text:000002f0 $t
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:670    .text:00000380 $d
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:674    .text:00000384 $t
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:678    .text:00000384 OS_TASK_DISPATCHER
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:985    .text:000004e8 OS_TaskScheduler
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:721    .text:000003ac TASK_0
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:753    .text:000003c0 TASK_1
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:782    .text:000003d8 $d
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:786    .text:000003dc $t
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:790    .text:000003dc TASK_2
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:822    .text:000003f0 TASK_3
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:855    .text:00000404 OS_INIT_TASKS
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:960    .text:000004a8 $d
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:1386   .bss:00000414 task_0.4045
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:1371   .bss:000003ec TASK_GROUP_1.4049
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:1389   .bss:00000498 task_1.4046
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:1392   .bss:0000051c task_2.4047
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:1374   .bss:000003f4 TASK_GROUP_2.4050
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:1395   .bss:000005a0 task_3.4048
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:1377   .bss:000003fc TASK_GROUP_3.4051
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:981    .text:000004e8 $t
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:1253   .text:000006a4 $d
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:1398   .bss:00000624 link_list_member.4061
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:1401   .bss:00000628 task.4058
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:1403   .bss:0000062c Winner_prio.4059
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:1261   .text:000006b8 $t
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:1266   .text:000006b8 ISR_TASK_DISPATCH_C0
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:1293   .text:000006cc ISR_TASK_DISPATCH_C1
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:1320   .text:000006e0 ISR_TASK_DISPATCH_C2
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:1347   .text:000006f4 ISR_TASK_DISPATCH_C3
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:1380   .bss:00000404 TASK_GROUP_4.4052
C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s:1383   .bss:0000040c TASK_GROUP_5.4053
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.718a663455c795daf5c6dd176ef70bbe
                           .group:00000000 wm4.os_base_types.h.2.f3c0267f175f5cbacca6b71710665a02
                           .group:00000000 wm4.os_common.h.2.17fb4bbab233edcbaca9a4c22556f36d
                           .group:00000000 wm4.os_stack.h.2.19e5f67d3b2f1e569581f0c055512986
                           .group:00000000 wm4.os_heap.h.2.89074aae455d2462b5952479e3530dd1
                           .group:00000000 wm4.os_task_config.h.2.7cfaa082f19f6144d85c64ce1f04b914
                           .group:00000000 wm4.os_task_common.h.92.310ae0de7be5874c80e3c1d4bf919b37
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cchVUA90.s 			page 38


                           .group:00000000 wm4.os_task_scheduler.h.2.125feba674fa85672711aed1ca8ea199
                           .group:00000000 wm4.os_task_queue.h.2.9428c7964838a07bb4b1cac6c50ee9b2

UNDEFINED SYMBOLS
LLF_INT_ENABLE
Get_current_time
OS_SET_SW_BUG
LLF_INT_DISABLE
AddToTaskQueue
AddToLinkList
UpdateLinkList
AddToIdleTaskQueue
GET_CORE_ID
OS_TASK_SAVE_SYSTEM_STACK
OS_TASK_RESTORETASK_ENVIRONMENT
SET_RUNNING_TASK
OS_TASK_SAVETASK_ENVIRONMENT
OS_TASK_RESTORE_SYSTEM_STACK
OS_STACK
GetRunningTask
OS_INIT_TASK_QUEUE
OS_INIT_TASK
__aeabi_ui2d
__aeabi_dcmpgt
GetFromLinkList
GetFromTaskQueue
GetIdleTask
LLF_ADD_2_TCMP
