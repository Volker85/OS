ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cc5wRBJW.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"os_main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	OS_STATE_HANDLER
  20              		.thumb
  21              		.thumb_func
  23              	OS_STATE_HANDLER:
  24              	.LFB0:
  25              		.file 1 "E:\\NeuOrga\\Programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_main.c"
   1:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "os_firstinc.h"
   2:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "os_task_common.h"
   3:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "os_task_scheduler.h"
   4:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "os_shutdown.h"
   5:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "os_start_init_mc.h"
   6:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "os_start_init_hw.h"
   7:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "os_start_init_sw.h"
   8:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "os_task_scheduler.h"
   9:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  10:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** /*
  11:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** OS_State: OS_INIT (Start im Supervisor Mode)
  12:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Exception Handler aufsetzen
  13:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - HW Internal Peripherie, RAM, etc
  14:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Tasks konfigurieren
  15:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** --> Stack, MMU_REGION,CoreId, Task-Function, TaskPrio, Interruptable, MultipleActChk, Privilige Lev
  16:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - TCMP Interrupts für Tasks konfigurieren, Starten vom Dispatcher
  17:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - MMU konfigurieren
  18:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - TaskScheduler für Core 0...n starten (jeder Core hat eigenen Scheduler)(User/Supervisor Mode??)
  19:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - SW mit erhöhtem Rechtebedarf wird mittels Interrupt gestartet (Dispatcher, WD, FMON, Shutdown)(Us
  20:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - FMON / Watchdog aktivieren
  21:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Interrupts aktivieren
  22:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Zu UserMode wechseln
  23:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  24:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** OS_State: OS_Running (User Mode)
  25:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Starten / Beenden der einzelnen Tasks auf den jeweiligen Cores(User/Supervisor Mode??)
  26:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Timer Compare Interrupts
  27:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Interrupt Prioritäten von Cat2.(SW) Interrupts und Cat1.(HW) Interrupts
  28:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  29:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** (OS_State: OS_Exception (Supervisor Mode))
  30:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Link-Register Adresse im Eeprom abspeichern, an der die Exceptioin erzeugt wurde
  31:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - OS_Shutdown mit Reset
  32:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  33:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** OS_State: OS_Shutdown (nur erlaubt im Supervisor Mode)
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cc5wRBJW.s 			page 2


  34:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Interrupts deaktivieren
  35:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Tasks beenden (Timer Interrupts löschen)
  36:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - FMON / Watchdog deinitialisieren
  37:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - MMU deaktivieren / deintialisieren
  38:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - RAM neu initalisieren
  39:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - HW Reset auslösen (optional)
  40:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** */
  42:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  43:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** typedef enum os_reset_req_state_e
  44:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** {
  45:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    Reset_powerdown = 0,
  46:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    Reset_restart,
  47:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    Reset_exit
  48:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** } os_reset_req_state_t;
  49:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  50:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** void OS_STATE_HANDLER(void)
  51:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** {
  26              		.loc 1 51 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 7, -8
  33              		.cfi_offset 14, -4
  34 0002 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
  52:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    /* running in supervisor mode */
  53:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    Local os_reset_req_state_t sys_req_reset_state = Reset_powerdown;
  54:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    
  55:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    switch(OS_STATE)
  36              		.loc 1 55 0
  37 0004 1C4B     		ldr	r3, .L13
  38 0006 1B68     		ldr	r3, [r3]
  39 0008 012B     		cmp	r3, #1
  40 000a 18D0     		beq	.L3
  41 000c 012B     		cmp	r3, #1
  42 000e 02D3     		bcc	.L4
  43 0010 022B     		cmp	r3, #2
  44 0012 17D0     		beq	.L5
  56:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    {
  57:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    case os_init:
  58:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    {
  59:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /*init the MCU including MMU, RAM, Registers */
  60:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_INIT_MC();
  61:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /* start the task system */
  62:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /* initialisation of SW, HW will be done in the tasks, after starting the task system.... */
  63:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_INIT_HW();
  64:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_INIT_SW();
  65:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_INIT_TASK_SYSTEM();
  66:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  67:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /* trigger dispatcher */
  68:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /* activate the dispatcher, configure TCMP interrupts for tasks */
  69:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_ACTIVATE_DISPATCHER();
  70:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  71:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_STATE = os_running;
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cc5wRBJW.s 			page 3


  72:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /* activate the interrupts, tasks will be executed from now on ... */
  73:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       LLF_INT_ENABLE();
  74:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  75:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       #if(CFG_PROCESSOR == cMCU_CORTEX_M4)
  76:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       #define SYSTICK_CURRENT_VAL_REG ((uint32*)0xE000E018)
  77:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       BACKUP_SYSTICK_CURRENT_VAL_REG = *SYSTICK_CURRENT_VAL_REG;
  78:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       #endif
  79:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       while(1)/*wait until timer task*/
  80:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       {
  81:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  82:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
  83:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       break;
  84:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    }
  85:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    case os_running:
  86:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    {
  87:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       ISR_TASK_DISPATCH_C0();
  88:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       break;
  89:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    }
  90:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    case os_shutdown:
  91:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    {
  92:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       LLF_INT_DISABLE();
  93:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       switch(sys_req_reset_state)
  94:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       {
  95:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       case Reset_powerdown:
  96:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       {
  97:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          OS_SHUTDOWN(os_reset_powerdown);
  98:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          break;
  99:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
 100:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       case Reset_restart:
 101:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       {
 102:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          OS_SHUTDOWN(os_reset_hardreset);
 103:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          break;
 104:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
 105:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       case Reset_exit:
 106:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       {
 107:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          OS_SHUTDOWN(os_reset_exit);
 108:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
 109:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
 110:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       break;
 111:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    }
 112:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    default:
 113:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    {
 114:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       break;
  45              		.loc 1 114 0
  46 0014 2EE0     		b	.L1
  47              	.L4:
  60:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /* start the task system */
  48              		.loc 1 60 0
  49 0016 FFF7FEFF 		bl	OS_INIT_MC
  63:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_INIT_SW();
  50              		.loc 1 63 0
  51 001a FFF7FEFF 		bl	OS_INIT_HW
  64:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_INIT_TASK_SYSTEM();
  52              		.loc 1 64 0
  53 001e FFF7FEFF 		bl	OS_INIT_SW
  65:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  54              		.loc 1 65 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cc5wRBJW.s 			page 4


  55 0022 FFF7FEFF 		bl	OS_INIT_TASK_SYSTEM
  69:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  56              		.loc 1 69 0
  57 0026 FFF7FEFF 		bl	OS_ACTIVATE_DISPATCHER
  71:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /* activate the interrupts, tasks will be executed from now on ... */
  58              		.loc 1 71 0
  59 002a 134B     		ldr	r3, .L13
  60 002c 0122     		movs	r2, #1
  61 002e 1A60     		str	r2, [r3]
  73:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  62              		.loc 1 73 0
  63 0030 FFF7FEFF 		bl	LLF_INT_ENABLE
  77:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       #endif
  64              		.loc 1 77 0
  65 0034 114B     		ldr	r3, .L13+4
  66 0036 1B68     		ldr	r3, [r3]
  67 0038 114A     		ldr	r2, .L13+8
  68 003a 1360     		str	r3, [r2]
  69              	.L6:
  82:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       break;
  70              		.loc 1 82 0 discriminator 1
  71 003c FEE7     		b	.L6
  72              	.L3:
  87:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       break;
  73              		.loc 1 87 0
  74 003e FFF7FEFF 		bl	ISR_TASK_DISPATCH_C0
  88:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    }
  75              		.loc 1 88 0
  76 0042 17E0     		b	.L1
  77              	.L5:
  92:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       switch(sys_req_reset_state)
  78              		.loc 1 92 0
  79 0044 FFF7FEFF 		bl	LLF_INT_DISABLE
  93:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       {
  80              		.loc 1 93 0
  81 0048 0E4B     		ldr	r3, .L13+12
  82 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  83 004c 012B     		cmp	r3, #1
  84 004e 08D0     		beq	.L9
  85 0050 022B     		cmp	r3, #2
  86 0052 0AD0     		beq	.L10
  87 0054 002B     		cmp	r3, #0
  88 0056 00D0     		beq	.L11
 110:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    }
  89              		.loc 1 110 0
  90 0058 0BE0     		b	.L12
  91              	.L11:
  97:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          break;
  92              		.loc 1 97 0
  93 005a 0120     		movs	r0, #1
  94 005c FFF7FEFF 		bl	OS_SHUTDOWN
  98:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
  95              		.loc 1 98 0
  96 0060 07E0     		b	.L8
  97              	.L9:
 102:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          break;
  98              		.loc 1 102 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cc5wRBJW.s 			page 5


  99 0062 0020     		movs	r0, #0
 100 0064 FFF7FEFF 		bl	OS_SHUTDOWN
 103:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
 101              		.loc 1 103 0
 102 0068 03E0     		b	.L8
 103              	.L10:
 107:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
 104              		.loc 1 107 0
 105 006a 0220     		movs	r0, #2
 106 006c FFF7FEFF 		bl	OS_SHUTDOWN
 110:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    }
 107              		.loc 1 110 0
 108 0070 FFE7     		b	.L12
 109              	.L8:
 110              	.L12:
 111 0072 00BF     		nop
 112              	.L1:
 115:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    }
 116:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    }
 117:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** }
 113              		.loc 1 117 0
 114 0074 80BD     		pop	{r7, pc}
 115              	.L14:
 116 0076 00BF     		.align	2
 117              	.L13:
 118 0078 00000000 		.word	OS_STATE
 119 007c 18E000E0 		.word	-536813544
 120 0080 00000000 		.word	BACKUP_SYSTICK_CURRENT_VAL_REG
 121 0084 00000000 		.word	sys_req_reset_state.3966
 122              		.cfi_endproc
 123              	.LFE0:
 125              		.bss
 126              	sys_req_reset_state.3966:
 127 0000 00       		.space	1
 128              		.text
 129              	.Letext0:
 130              		.file 2 "E:\\NeuOrga\\Programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_shutdown.h"
 131              		.file 3 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_base_types.h"
 132              		.file 4 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_ram.h"
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cc5wRBJW.s 			page 6


DEFINED SYMBOLS
                            *ABS*:00000000 os_main.c
C:\Users\PRESID~1\AppData\Local\Temp\cc5wRBJW.s:18     .text:00000000 $t
C:\Users\PRESID~1\AppData\Local\Temp\cc5wRBJW.s:23     .text:00000000 OS_STATE_HANDLER
C:\Users\PRESID~1\AppData\Local\Temp\cc5wRBJW.s:118    .text:00000078 $d
C:\Users\PRESID~1\AppData\Local\Temp\cc5wRBJW.s:126    .bss:00000000 sys_req_reset_state.3966
C:\Users\PRESID~1\AppData\Local\Temp\cc5wRBJW.s:127    .bss:00000000 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.718a663455c795daf5c6dd176ef70bbe
                           .group:00000000 wm4.os_base_types.h.2.f3c0267f175f5cbacca6b71710665a02
                           .group:00000000 wm4.os_common.h.2.17fb4bbab233edcbaca9a4c22556f36d
                           .group:00000000 wm4.os_stack.h.2.19e5f67d3b2f1e569581f0c055512986
                           .group:00000000 wm4.os_heap.h.2.89074aae455d2462b5952479e3530dd1
                           .group:00000000 wm4.os_main.h.2.1f66ae3841c27bd36097fa1d2e1fe6a7
                           .group:00000000 wm4.os_task_config.h.2.7cfaa082f19f6144d85c64ce1f04b914
                           .group:00000000 wm4.os_task_common.h.92.310ae0de7be5874c80e3c1d4bf919b37
                           .group:00000000 wm4.os_task_scheduler.h.2.125feba674fa85672711aed1ca8ea199

UNDEFINED SYMBOLS
OS_INIT_MC
OS_INIT_HW
OS_INIT_SW
OS_INIT_TASK_SYSTEM
OS_ACTIVATE_DISPATCHER
LLF_INT_ENABLE
ISR_TASK_DISPATCH_C0
LLF_INT_DISABLE
OS_SHUTDOWN
OS_STATE
BACKUP_SYSTICK_CURRENT_VAL_REG
