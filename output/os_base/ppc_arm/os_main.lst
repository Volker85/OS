ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccy3KDjR.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"os_main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.syntax unified
  17              		.thumb
  18              		.thumb_func
  19              		.fpu softvfp
  21              	OS_DetermineNextTaskActivation:
  22              	.LFB0:
  23              		.file 1 "E:\\NeuOrga\\Programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_main.c"
   1:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "os_firstinc.h"
   2:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "os_task_common.h"
   3:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "os_task_scheduler.h"
   4:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "OS_shutdown.h"
   5:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "os_start_init_mc.h"
   6:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "os_start_init_hw.h"
   7:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "os_start_init_sw.h"
   8:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "os_task_scheduler.h"
   9:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "os_task_queue.h"
  10:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  11:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** /*
  12:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** OS_State: OS_INIT (Start im Supervisor Mode)
  13:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Exception Handler aufsetzen  -> Done
  14:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - HW Internal Peripherie, RAM, etc -> Done
  15:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Tasks konfigurieren -> Done via OS_InitTaskSystem()
  16:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** --> Stack -> assigned in function OS_InitTasks / OS_InitTaskSystem -> Done
  17:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** --> MMU_REGION ->NA
  18:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** --> CoreId -> Done
  19:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** --> Task-Function -> assigned in function OS_InitTask / OS_InitTaskSystem -> Done
  20:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** --> TaskPrio -> Done
  21:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** --> MultipleActChk -> Done in OS_ActivateTask()
  22:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** --> Privilige Level (Handler mode (priviliged): System Mode, Abort, Undefined, FiQ, IRQ; Thread mod
  23:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - TCMP Interrupts für Tasks konfigurieren, Starten vom Dispatcher -> Done
  24:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - MMU konfigurieren -> NA
  25:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - TaskScheduler für Core 0...n starten (jeder Core hat eigenen Scheduler) -> Not needed for CortexM
  26:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - SW mit erhöhtem Rechtebedarf wird mittels Interrupt gestartet (Dispatcher, WD, FMON, Shutdown) ->
  27:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - FMON / Watchdog aktivieren -> NA
  28:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Interrupts aktivieren -> Done
  29:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Zu UserMode wechseln -> Done
  30:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  31:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** OS_State: OS_Running (User Mode)
  32:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Starten / Beenden der einzelnen Tasks auf den jeweiligen Cores(User/Supervisor Mode??) -> Done
  33:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Timer Compare Interrupts -> not needed  -> Systick used instead
  34:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Interrupt Prioritäten von Cat2.(SW) Interrupts und Cat1.(HW) Interrupts -> NA
  35:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccy3KDjR.s 			page 2


  36:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** (OS_State: OS_Exception (Supervisor Mode))
  37:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Link-Register Adresse im Eeprom abspeichern, an der die Exceptioin erzeugt wurde -> NA (no EEPROM
  38:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - OS_Shutdown mit Reset -> Done in handler functions via call of "OS_Shutdown(os_reset_hardreset)"
  39:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  40:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** OS_State: OS_Shutdown (nur erlaubt im Supervisor Mode)
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Interrupts deaktivieren -> Done
  42:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Tasks beenden (Timer Interrupts löschen) -> Done OS_Shutdown(os_reset_hardreset
  43:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - FMON / Watchdog deinitialisieren -> NA
  44:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - MMU deaktivieren / deintialisieren -> NA
  45:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - HW Reset auslösen -> Done
  46:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  47:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** */
  48:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  49:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** typedef enum os_reset_req_state_e
  50:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** {
  51:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    Reset_powerdown = 0,
  52:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    Reset_restart,
  53:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    Reset_exit
  54:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** } os_reset_req_state_t;
  55:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  56:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** Local void OS_DetermineNextTaskActivation(void)
  57:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** {
  24              		.loc 1 57 0
  25              		.cfi_startproc
  26              		@ args = 0, pretend = 0, frame = 0
  27              		@ frame_needed = 1, uses_anonymous_args = 0
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 00AF     		add	r7, sp, #0
  33              		.cfi_def_cfa_register 7
  58:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****     Local uint32 call_nr = 0;
  59:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****     switch(call_nr)
  34              		.loc 1 59 0
  35 0004 1C4B     		ldr	r3, .L11
  36 0006 1B68     		ldr	r3, [r3]
  37 0008 042B     		cmp	r3, #4
  38 000a 32D8     		bhi	.L10
  39 000c 01A2     		adr	r2, .L4
  40 000e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  41 0012 00BF     		.p2align 2
  42              	.L4:
  43 0014 29000000 		.word	.L3+1
  44 0018 3B000000 		.word	.L5+1
  45 001c 47000000 		.word	.L6+1
  46 0020 59000000 		.word	.L7+1
  47 0024 65000000 		.word	.L8+1
  48              		.p2align 1
  49              	.L3:
  60:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****     {
  61:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****     case 0:
  62:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****         OS_ActivateTask(&TASK_1_VAR);
  50              		.loc 1 62 0
  51 0028 1448     		ldr	r0, .L11+4
  52 002a FFF7FEFF 		bl	OS_ActivateTask
  63:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****         call_nr++;
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccy3KDjR.s 			page 3


  53              		.loc 1 63 0
  54 002e 124B     		ldr	r3, .L11
  55 0030 1B68     		ldr	r3, [r3]
  56 0032 0133     		adds	r3, r3, #1
  57 0034 104A     		ldr	r2, .L11
  58 0036 1360     		str	r3, [r2]
  64:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****         break;
  59              		.loc 1 64 0
  60 0038 1CE0     		b	.L9
  61              	.L5:
  65:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****     case 1:
  66:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  67:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****         call_nr++;
  62              		.loc 1 67 0
  63 003a 0F4B     		ldr	r3, .L11
  64 003c 1B68     		ldr	r3, [r3]
  65 003e 0133     		adds	r3, r3, #1
  66 0040 0D4A     		ldr	r2, .L11
  67 0042 1360     		str	r3, [r2]
  68:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****         break;
  68              		.loc 1 68 0
  69 0044 16E0     		b	.L9
  70              	.L6:
  69:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****     case 2:
  70:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****         OS_ActivateTask(&TASK_2_VAR);
  71              		.loc 1 70 0
  72 0046 0E48     		ldr	r0, .L11+8
  73 0048 FFF7FEFF 		bl	OS_ActivateTask
  71:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****         call_nr++;
  74              		.loc 1 71 0
  75 004c 0A4B     		ldr	r3, .L11
  76 004e 1B68     		ldr	r3, [r3]
  77 0050 0133     		adds	r3, r3, #1
  78 0052 094A     		ldr	r2, .L11
  79 0054 1360     		str	r3, [r2]
  72:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****         break;
  80              		.loc 1 72 0
  81 0056 0DE0     		b	.L9
  82              	.L7:
  73:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****     case 3:
  74:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  75:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****         call_nr++;
  83              		.loc 1 75 0
  84 0058 074B     		ldr	r3, .L11
  85 005a 1B68     		ldr	r3, [r3]
  86 005c 0133     		adds	r3, r3, #1
  87 005e 064A     		ldr	r2, .L11
  88 0060 1360     		str	r3, [r2]
  76:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****         break;
  89              		.loc 1 76 0
  90 0062 07E0     		b	.L9
  91              	.L8:
  77:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****     case 4:
  78:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****         OS_ActivateTask(&TASK_3_VAR);
  92              		.loc 1 78 0
  93 0064 0748     		ldr	r0, .L11+12
  94 0066 FFF7FEFF 		bl	OS_ActivateTask
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccy3KDjR.s 			page 4


  79:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****         call_nr = 0;
  95              		.loc 1 79 0
  96 006a 034B     		ldr	r3, .L11
  97 006c 0022     		movs	r2, #0
  98 006e 1A60     		str	r2, [r3]
  80:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****         break;
  99              		.loc 1 80 0
 100 0070 00E0     		b	.L9
 101              	.L10:
  81:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****     default:
  82:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****         break;
 102              		.loc 1 82 0
 103 0072 00BF     		nop
 104              	.L9:
  83:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  84:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****     }
  85:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  86:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** }
 105              		.loc 1 86 0
 106 0074 00BF     		nop
 107 0076 80BD     		pop	{r7, pc}
 108              	.L12:
 109              		.align	2
 110              	.L11:
 111 0078 00000000 		.word	call_nr.4056
 112 007c 00000000 		.word	TASK_1_VAR
 113 0080 00000000 		.word	TASK_2_VAR
 114 0084 00000000 		.word	TASK_3_VAR
 115              		.cfi_endproc
 116              	.LFE0:
 118              		.align	1
 119              		.global	OS_StateHandler
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu softvfp
 125              	OS_StateHandler:
 126              	.LFB1:
  87:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  88:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** void OS_StateHandler(void)
  89:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** {
 127              		.loc 1 89 0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 1, uses_anonymous_args = 0
 131 0088 80B5     		push	{r7, lr}
 132              		.cfi_def_cfa_offset 8
 133              		.cfi_offset 7, -8
 134              		.cfi_offset 14, -4
 135 008a 00AF     		add	r7, sp, #0
 136              		.cfi_def_cfa_register 7
  90:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    /* the following code runs in priviliged mode!! */
  91:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    Local os_reset_req_state_t sys_req_reset_state = Reset_powerdown;
  92:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    Local uint32 call_nr = 0;
  93:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  94:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    switch(OS_STATE)
 137              		.loc 1 94 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccy3KDjR.s 			page 5


 138 008c 294B     		ldr	r3, .L27
 139 008e 1B68     		ldr	r3, [r3]
 140 0090 012B     		cmp	r3, #1
 141 0092 1CD0     		beq	.L15
 142 0094 012B     		cmp	r3, #1
 143 0096 02D3     		bcc	.L16
 144 0098 022B     		cmp	r3, #2
 145 009a 2ED0     		beq	.L17
  95:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    {
  96:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    case os_init:
  97:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    {
  98:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /*init the MCU including MMU, RAM, Registers */
  99:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_InitMc();
 100:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /* start the task system */
 101:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /* initialisation of SW, HW will be done in the tasks, after starting the task system.... */
 102:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_InitHw();
 103:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_InitSw();
 104:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
 105:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /* trigger dispatcher */
 106:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /* activate the dispatcher, configure TCMP interrupts for tasks */
 107:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /* activate & start the Idle task */
 108:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_ActivateTask(&TASK_0_VAR);
 109:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_StartTask(GetIdleTask(),0);
 110:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_ActivateDispatcher();
 111:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
 112:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_STATE = os_running;
 113:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /* activate the interrupts, tasks will be executed from now on ... */
 114:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       LLF_INT_ENABLE();
 115:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #if(CFG_PROCESSOR != cMCU_X86)
 116:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       while(1)/*wait until timer task*/
 117:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       {
 118:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
 119:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
 120:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #endif
 121:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       break;
 122:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    }
 123:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    case os_running:
 124:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    {
 125:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       if(call_nr % 5 == 0)
 126:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       {
 127:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          OS_DetermineNextTaskActivation();
 128:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
 129:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       call_nr++;
 130:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /* run the task function */
 131:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_TaskDispatcher();
 132:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       if(0) /* check for shutdown/reset/exit conditions: currently shutdown is not planned to be su
 133:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       {
 134:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          OS_STATE = os_shutdown;
 135:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          sys_req_reset_state = Reset_restart;
 136:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
 137:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
 138:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       break;
 139:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    }
 140:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    case os_shutdown:
 141:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    {
 142:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       LLF_INT_DISABLE();
 143:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       switch(sys_req_reset_state)
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccy3KDjR.s 			page 6


 144:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       {
 145:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       case Reset_powerdown:
 146:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       {
 147:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          OS_Shutdown(os_reset_powerdown);
 148:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          break;
 149:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
 150:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       case Reset_restart:
 151:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       {
 152:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          OS_Shutdown(os_reset_hardreset);
 153:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          break;
 154:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
 155:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       case Reset_exit:
 156:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       {
 157:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          OS_Shutdown(os_reset_exit);
 158:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          break;
 159:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
 160:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       default:
 161:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       {
 162:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          OS_Shutdown(os_reset_hardreset);
 163:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          break;
 164:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
 165:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
 166:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       break;
 167:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    }
 168:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    default:
 169:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    {
 170:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       break;
 146              		.loc 1 170 0
 147 009c 48E0     		b	.L20
 148              	.L16:
  99:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /* start the task system */
 149              		.loc 1 99 0
 150 009e FFF7FEFF 		bl	OS_InitMc
 102:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_InitSw();
 151              		.loc 1 102 0
 152 00a2 FFF7FEFF 		bl	OS_InitHw
 103:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
 153              		.loc 1 103 0
 154 00a6 FFF7FEFF 		bl	OS_InitSw
 108:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_StartTask(GetIdleTask(),0);
 155              		.loc 1 108 0
 156 00aa 2348     		ldr	r0, .L27+4
 157 00ac FFF7FEFF 		bl	OS_ActivateTask
 109:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_ActivateDispatcher();
 158              		.loc 1 109 0
 159 00b0 FFF7FEFF 		bl	GetIdleTask
 160 00b4 0346     		mov	r3, r0
 161 00b6 0021     		movs	r1, #0
 162 00b8 1846     		mov	r0, r3
 163 00ba FFF7FEFF 		bl	OS_StartTask
 110:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
 164              		.loc 1 110 0
 165 00be FFF7FEFF 		bl	OS_ActivateDispatcher
 112:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /* activate the interrupts, tasks will be executed from now on ... */
 166              		.loc 1 112 0
 167 00c2 1C4B     		ldr	r3, .L27
 168 00c4 0122     		movs	r2, #1
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccy3KDjR.s 			page 7


 169 00c6 1A60     		str	r2, [r3]
 114:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #if(CFG_PROCESSOR != cMCU_X86)
 170              		.loc 1 114 0
 171 00c8 FFF7FEFF 		bl	LLF_INT_ENABLE
 172              	.L18:
 116:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       {
 173              		.loc 1 116 0 discriminator 1
 174 00cc FEE7     		b	.L18
 175              	.L15:
 125:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       {
 176              		.loc 1 125 0
 177 00ce 1B4B     		ldr	r3, .L27+8
 178 00d0 1968     		ldr	r1, [r3]
 179 00d2 1B4B     		ldr	r3, .L27+12
 180 00d4 A3FB0123 		umull	r2, r3, r3, r1
 181 00d8 9A08     		lsrs	r2, r3, #2
 182 00da 1346     		mov	r3, r2
 183 00dc 9B00     		lsls	r3, r3, #2
 184 00de 1344     		add	r3, r3, r2
 185 00e0 CA1A     		subs	r2, r1, r3
 186 00e2 002A     		cmp	r2, #0
 187 00e4 01D1     		bne	.L19
 127:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
 188              		.loc 1 127 0
 189 00e6 FFF78BFF 		bl	OS_DetermineNextTaskActivation
 190              	.L19:
 129:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /* run the task function */
 191              		.loc 1 129 0
 192 00ea 144B     		ldr	r3, .L27+8
 193 00ec 1B68     		ldr	r3, [r3]
 194 00ee 0133     		adds	r3, r3, #1
 195 00f0 124A     		ldr	r2, .L27+8
 196 00f2 1360     		str	r3, [r2]
 131:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       if(0) /* check for shutdown/reset/exit conditions: currently shutdown is not planned to be su
 197              		.loc 1 131 0
 198 00f4 FFF7FEFF 		bl	OS_TaskDispatcher
 138:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    }
 199              		.loc 1 138 0
 200 00f8 1AE0     		b	.L20
 201              	.L17:
 142:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       switch(sys_req_reset_state)
 202              		.loc 1 142 0
 203 00fa FFF7FEFF 		bl	LLF_INT_DISABLE
 143:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       {
 204              		.loc 1 143 0
 205 00fe 114B     		ldr	r3, .L27+16
 206 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 207 0102 012B     		cmp	r3, #1
 208 0104 07D0     		beq	.L22
 209 0106 022B     		cmp	r3, #2
 210 0108 09D0     		beq	.L23
 211 010a 002B     		cmp	r3, #0
 212 010c 0BD1     		bne	.L26
 147:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          break;
 213              		.loc 1 147 0
 214 010e 0120     		movs	r0, #1
 215 0110 FFF7FEFF 		bl	OS_Shutdown
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccy3KDjR.s 			page 8


 148:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
 216              		.loc 1 148 0
 217 0114 0BE0     		b	.L25
 218              	.L22:
 152:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          break;
 219              		.loc 1 152 0
 220 0116 0020     		movs	r0, #0
 221 0118 FFF7FEFF 		bl	OS_Shutdown
 153:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
 222              		.loc 1 153 0
 223 011c 07E0     		b	.L25
 224              	.L23:
 157:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          break;
 225              		.loc 1 157 0
 226 011e 0220     		movs	r0, #2
 227 0120 FFF7FEFF 		bl	OS_Shutdown
 158:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
 228              		.loc 1 158 0
 229 0124 03E0     		b	.L25
 230              	.L26:
 162:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          break;
 231              		.loc 1 162 0
 232 0126 0020     		movs	r0, #0
 233 0128 FFF7FEFF 		bl	OS_Shutdown
 163:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
 234              		.loc 1 163 0
 235 012c 00BF     		nop
 236              	.L25:
 166:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    }
 237              		.loc 1 166 0
 238 012e 00BF     		nop
 239              	.L20:
 171:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    }
 172:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    }
 173:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** }
 240              		.loc 1 173 0
 241 0130 00BF     		nop
 242 0132 80BD     		pop	{r7, pc}
 243              	.L28:
 244              		.align	2
 245              	.L27:
 246 0134 00000000 		.word	OS_STATE
 247 0138 00000000 		.word	TASK_0_VAR
 248 013c 04000000 		.word	call_nr.4068
 249 0140 CDCCCCCC 		.word	-858993459
 250 0144 08000000 		.word	sys_req_reset_state.4067
 251              		.cfi_endproc
 252              	.LFE1:
 254              		.bss
 255              		.align	2
 256              	call_nr.4056:
 257 0000 00000000 		.space	4
 259              		.align	2
 260              	call_nr.4068:
 261 0004 00000000 		.space	4
 263              	sys_req_reset_state.4067:
 264 0008 00       		.space	1
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccy3KDjR.s 			page 9


 266              		.text
 267              	.Letext0:
 268              		.file 2 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_base_types.h"
 269              		.file 3 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_common.h"
 270              		.file 4 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_drivers\\lld_core.h"
 271              		.file 5 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_task_common.h"
 272              		.file 6 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_ram.h"
 273              		.file 7 "E:\\NeuOrga\\Programmieren\\c_cpp\\github_os\\input\\src\\os_base\\OS_shutdown.h"
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccy3KDjR.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 os_main.c
C:\Users\PRESID~1\AppData\Local\Temp\ccy3KDjR.s:15     .text:00000000 $t
C:\Users\PRESID~1\AppData\Local\Temp\ccy3KDjR.s:21     .text:00000000 OS_DetermineNextTaskActivation
C:\Users\PRESID~1\AppData\Local\Temp\ccy3KDjR.s:43     .text:00000014 $d
C:\Users\PRESID~1\AppData\Local\Temp\ccy3KDjR.s:48     .text:00000028 $t
C:\Users\PRESID~1\AppData\Local\Temp\ccy3KDjR.s:111    .text:00000078 $d
C:\Users\PRESID~1\AppData\Local\Temp\ccy3KDjR.s:256    .bss:00000000 call_nr.4056
C:\Users\PRESID~1\AppData\Local\Temp\ccy3KDjR.s:118    .text:00000088 $t
C:\Users\PRESID~1\AppData\Local\Temp\ccy3KDjR.s:125    .text:00000088 OS_StateHandler
C:\Users\PRESID~1\AppData\Local\Temp\ccy3KDjR.s:246    .text:00000134 $d
C:\Users\PRESID~1\AppData\Local\Temp\ccy3KDjR.s:260    .bss:00000004 call_nr.4068
C:\Users\PRESID~1\AppData\Local\Temp\ccy3KDjR.s:263    .bss:00000008 sys_req_reset_state.4067
C:\Users\PRESID~1\AppData\Local\Temp\ccy3KDjR.s:255    .bss:00000000 $d
                           .group:00000000 wm4.0.aa75c0738974a382baf71fbad152c229
                           .group:00000000 wm4.os_base_types.h.2.f3c0267f175f5cbacca6b71710665a02
                           .group:00000000 wm4.os_common.h.2.eb6279ca092455f62aa554ec1864872d
                           .group:00000000 wm4.os_task_config.h.2.a73335dbec9f276504b3b94e79d1d898
                           .group:00000000 wm4.os_task_common.h.95.eb4fc951d6d8ca08a3f35501d742a960
                           .group:00000000 wm4.os_stack.h.2.a33fb8b396f31bed4bacb411e67ef75c
                           .group:00000000 wm4.os_heap.h.2.89074aae455d2462b5952479e3530dd1
                           .group:00000000 wm4.os_main.h.2.1f66ae3841c27bd36097fa1d2e1fe6a7
                           .group:00000000 wm4.os_task_scheduler.h.2.125feba674fa85672711aed1ca8ea199
                           .group:00000000 wm4.os_task_queue.h.2.9428c7964838a07bb4b1cac6c50ee9b2

UNDEFINED SYMBOLS
OS_ActivateTask
TASK_1_VAR
TASK_2_VAR
TASK_3_VAR
OS_InitMc
OS_InitHw
OS_InitSw
GetIdleTask
OS_StartTask
OS_ActivateDispatcher
LLF_INT_ENABLE
OS_TaskDispatcher
LLF_INT_DISABLE
OS_Shutdown
OS_STATE
TASK_0_VAR
