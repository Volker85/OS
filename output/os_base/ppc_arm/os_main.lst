ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cciAOU2S.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"os_main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	OS_STATE_HANDLER
  20              		.thumb
  21              		.thumb_func
  23              	OS_STATE_HANDLER:
  24              	.LFB0:
  25              		.file 1 "E:\\NeuOrga\\Programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_main.c"
   1:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "os_firstinc.h"
   2:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "os_task_common.h"
   3:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "os_task_scheduler.h"
   4:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "os_shutdown.h"
   5:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "os_start_init_mc.h"
   6:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "os_start_init_hw.h"
   7:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "os_start_init_sw.h"
   8:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "os_task_scheduler.h"
   9:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  10:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** /*
  11:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** OS_State: OS_INIT (Start im Supervisor Mode)
  12:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Exception Handler aufsetzen
  13:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - HW Internal Peripherie, RAM, etc
  14:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Tasks konfigurieren
  15:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** --> Stack, MMU_REGION,CoreId, Task-Function, TaskPrio, Interruptable, MultipleActChk, Privilige Lev
  16:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - TCMP Interrupts für Tasks konfigurieren, Starten vom Dispatcher
  17:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - MMU konfigurieren
  18:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - TaskScheduler für Core 0...n starten (jeder Core hat eigenen Scheduler)(User/Supervisor Mode??)
  19:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - SW mit erhöhtem Rechtebedarf wird mittels Interrupt gestartet (Dispatcher, WD, FMON, Shutdown)(Us
  20:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - FMON / Watchdog aktivieren
  21:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Interrupts aktivieren
  22:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Zu UserMode wechseln
  23:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  24:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** OS_State: OS_Running (User Mode)
  25:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Starten / Beenden der einzelnen Tasks auf den jeweiligen Cores(User/Supervisor Mode??)
  26:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Timer Compare Interrupts
  27:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Interrupt Prioritäten von Cat2.(SW) Interrupts und Cat1.(HW) Interrupts
  28:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  29:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** (OS_State: OS_Exception (Supervisor Mode))
  30:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Link-Register Adresse im Eeprom abspeichern, an der die Exceptioin erzeugt wurde
  31:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - OS_Shutdown mit Reset
  32:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  33:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** OS_State: OS_Shutdown (nur erlaubt im Supervisor Mode)
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cciAOU2S.s 			page 2


  34:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Interrupts deaktivieren
  35:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Tasks beenden (Timer Interrupts löschen)
  36:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - FMON / Watchdog deinitialisieren
  37:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - MMU deaktivieren / deintialisieren
  38:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - RAM neu initalisieren
  39:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - HW Reset auslösen (optional)
  40:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** */
  42:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** /*#warn "above list implemented??"*/
  43:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** typedef enum os_state_e
  44:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** {
  45:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    os_init = 0,
  46:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    os_running,
  47:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    os_shutdown
  48:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** } os_state_t;
  49:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  50:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** typedef enum os_reset_req_state_e
  51:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** {
  52:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    Reset_powerdown = 0,
  53:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    Reset_restart
  54:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** } os_reset_req_state_t;
  55:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  56:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** void OS_STATE_HANDLER(void)
  57:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** {
  26              		.loc 1 57 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 7, -8
  33              		.cfi_offset 14, -4
  34 0002 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
  58:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    /* running in supervisor mode */
  59:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    Local os_state_t OS_STATE = os_init;
  60:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    Local os_reset_req_state_t sys_req_reset_state = Reset_powerdown;
  61:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  62:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    switch(OS_STATE)
  36              		.loc 1 62 0
  37 0004 174B     		ldr	r3, .L11
  38 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  39 0008 012B     		cmp	r3, #1
  40 000a 14D0     		beq	.L3
  41 000c 022B     		cmp	r3, #2
  42 000e 15D0     		beq	.L4
  43 0010 002B     		cmp	r3, #0
  44 0012 00D0     		beq	.L5
  63:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    {
  64:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    case os_init:
  65:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    {
  66:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /*init the MCU including MMU, RAM, Registers */
  67:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_INIT_MC();
  68:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /* start the task system */
  69:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /* initialisation of SW, HW will be done in the tasks, after starting the task system.... */
  70:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_INIT_HW();
  71:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_INIT_SW();
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cciAOU2S.s 			page 3


  72:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_INIT_TASK_SYSTEM();
  73:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  74:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /* trigger dispatcher */
  75:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /* activate the dispatcher, configure TCMP interrupts for tasks */
  76:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_ACTIVATE_DISPATCHER();
  77:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  78:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_STATE = os_running;
  79:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /* activate the interrupts, tasks will be executed from now on ... */
  80:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       LLF_INT_ENABLE();
  81:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       break;
  82:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    }
  83:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    case os_running:
  84:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    {
  85:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       ISR_TASK_DISPATCH_C0();
  86:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       break;
  87:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    }
  88:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    case os_shutdown:
  89:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    {
  90:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       LLF_INT_DISABLE();
  91:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       switch(sys_req_reset_state)
  92:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       {
  93:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       case Reset_powerdown:
  94:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       {
  95:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          OS_SHUTDOWN(os_reset_powerdown);
  96:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          break;
  97:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
  98:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       case Reset_restart:
  99:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       {
 100:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          OS_SHUTDOWN(os_reset_hardreset);
 101:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          break;
 102:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
 103:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
 104:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       break;
 105:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    }
 106:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    default:
 107:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    {
 108:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       break;
  45              		.loc 1 108 0
  46 0014 24E0     		b	.L1
  47              	.L5:
  67:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /* start the task system */
  48              		.loc 1 67 0
  49 0016 FFF7FEFF 		bl	OS_INIT_MC
  70:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_INIT_SW();
  50              		.loc 1 70 0
  51 001a FFF7FEFF 		bl	OS_INIT_HW
  71:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_INIT_TASK_SYSTEM();
  52              		.loc 1 71 0
  53 001e FFF7FEFF 		bl	OS_INIT_SW
  72:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  54              		.loc 1 72 0
  55 0022 FFF7FEFF 		bl	OS_INIT_TASK_SYSTEM
  76:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  56              		.loc 1 76 0
  57 0026 FFF7FEFF 		bl	OS_ACTIVATE_DISPATCHER
  78:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /* activate the interrupts, tasks will be executed from now on ... */
  58              		.loc 1 78 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cciAOU2S.s 			page 4


  59 002a 0E4B     		ldr	r3, .L11
  60 002c 0122     		movs	r2, #1
  61 002e 1A70     		strb	r2, [r3]
  80:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       break;
  62              		.loc 1 80 0
  63 0030 FFF7FEFF 		bl	LLF_INT_ENABLE
  81:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    }
  64              		.loc 1 81 0
  65 0034 14E0     		b	.L1
  66              	.L3:
  85:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       break;
  67              		.loc 1 85 0
  68 0036 FFF7FEFF 		bl	ISR_TASK_DISPATCH_C0
  86:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    }
  69              		.loc 1 86 0
  70 003a 11E0     		b	.L1
  71              	.L4:
  90:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       switch(sys_req_reset_state)
  72              		.loc 1 90 0
  73 003c FFF7FEFF 		bl	LLF_INT_DISABLE
  91:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       {
  74              		.loc 1 91 0
  75 0040 094B     		ldr	r3, .L11+4
  76 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  77 0044 002B     		cmp	r3, #0
  78 0046 02D0     		beq	.L8
  79 0048 012B     		cmp	r3, #1
  80 004a 04D0     		beq	.L9
 104:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    }
  81              		.loc 1 104 0
  82 004c 07E0     		b	.L10
  83              	.L8:
  95:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          break;
  84              		.loc 1 95 0
  85 004e 0120     		movs	r0, #1
  86 0050 FFF7FEFF 		bl	OS_SHUTDOWN
  96:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
  87              		.loc 1 96 0
  88 0054 03E0     		b	.L7
  89              	.L9:
 100:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          break;
  90              		.loc 1 100 0
  91 0056 0020     		movs	r0, #0
  92 0058 FFF7FEFF 		bl	OS_SHUTDOWN
 101:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
  93              		.loc 1 101 0
  94 005c 00BF     		nop
  95              	.L7:
  96              	.L10:
 104:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    }
  97              		.loc 1 104 0
  98 005e 00BF     		nop
  99              	.L1:
 109:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    }
 110:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    }
 111:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** }
 100              		.loc 1 111 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cciAOU2S.s 			page 5


 101 0060 80BD     		pop	{r7, pc}
 102              	.L12:
 103 0062 00BF     		.align	2
 104              	.L11:
 105 0064 00000000 		.word	OS_STATE.3964
 106 0068 01000000 		.word	sys_req_reset_state.3965
 107              		.cfi_endproc
 108              	.LFE0:
 110              		.bss
 111              	OS_STATE.3964:
 112 0000 00       		.space	1
 113              	sys_req_reset_state.3965:
 114 0001 00       		.space	1
 115              		.text
 116              	.Letext0:
 117              		.file 2 "E:\\NeuOrga\\Programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_shutdown.h"
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cciAOU2S.s 			page 6


DEFINED SYMBOLS
                            *ABS*:00000000 os_main.c
C:\Users\PRESID~1\AppData\Local\Temp\cciAOU2S.s:18     .text:00000000 $t
C:\Users\PRESID~1\AppData\Local\Temp\cciAOU2S.s:23     .text:00000000 OS_STATE_HANDLER
C:\Users\PRESID~1\AppData\Local\Temp\cciAOU2S.s:105    .text:00000064 $d
C:\Users\PRESID~1\AppData\Local\Temp\cciAOU2S.s:111    .bss:00000000 OS_STATE.3964
C:\Users\PRESID~1\AppData\Local\Temp\cciAOU2S.s:113    .bss:00000001 sys_req_reset_state.3965
C:\Users\PRESID~1\AppData\Local\Temp\cciAOU2S.s:112    .bss:00000000 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.718a663455c795daf5c6dd176ef70bbe
                           .group:00000000 wm4.os_base_types.h.2.f3c0267f175f5cbacca6b71710665a02
                           .group:00000000 wm4.os_common.h.2.d75289bcbcba9f0e2c2ffeda9394ea88
                           .group:00000000 wm4.os_stack.h.2.19e5f67d3b2f1e569581f0c055512986
                           .group:00000000 wm4.os_heap.h.2.89074aae455d2462b5952479e3530dd1
                           .group:00000000 wm4.os_task_config.h.2.7cfaa082f19f6144d85c64ce1f04b914
                           .group:00000000 wm4.os_task_common.h.92.310ae0de7be5874c80e3c1d4bf919b37
                           .group:00000000 wm4.os_task_scheduler.h.2.125feba674fa85672711aed1ca8ea199

UNDEFINED SYMBOLS
OS_INIT_MC
OS_INIT_HW
OS_INIT_SW
OS_INIT_TASK_SYSTEM
OS_ACTIVATE_DISPATCHER
LLF_INT_ENABLE
ISR_TASK_DISPATCH_C0
LLF_INT_DISABLE
OS_SHUTDOWN
