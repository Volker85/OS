ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccrnu7Ia.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"os_main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.global	OS_STATE_HANDLER
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	OS_STATE_HANDLER:
  23              	.LFB0:
  24              		.file 1 "E:\\NeuOrga\\Programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_main.c"
   1:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "os_firstinc.h"
   2:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "os_task_common.h"
   3:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "os_task_scheduler.h"
   4:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "os_shutdown.h"
   5:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "os_start_init_mc.h"
   6:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "os_start_init_hw.h"
   7:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "os_start_init_sw.h"
   8:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** #include "os_task_scheduler.h"
   9:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  10:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** /*
  11:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** OS_State: OS_INIT (Start im Supervisor Mode)
  12:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Exception Handler aufsetzen  -> Done 
  13:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - HW Internal Peripherie, RAM, etc -> Done 
  14:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Tasks konfigurieren -> Done via OS_INIT_TASK_SYSTEM()
  15:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** --> Stack -> assigned in function OS_INIT_TASKS / OS_INIT_TASK_SYSTEM -> Done
  16:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** --> MMU_REGION ->NA
  17:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** --> CoreId -> Done
  18:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** --> Task-Function -> assigned in function OS_INIT_TASKS / OS_INIT_TASK_SYSTEM -> Done
  19:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** --> TaskPrio -> Done 
  20:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** --> MultipleActChk -> Done in OS_ActivateTask()
  21:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** --> Privilige Level (Handler mode (priviliged): System Mode, Abort, Undefined, FiQ, IRQ; Thread mod
  22:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - TCMP Interrupts für Tasks konfigurieren, Starten vom Dispatcher -> Done
  23:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - MMU konfigurieren -> NA
  24:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - TaskScheduler für Core 0...n starten (jeder Core hat eigenen Scheduler) -> TODO
  25:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - SW mit erhöhtem Rechtebedarf wird mittels Interrupt gestartet (Dispatcher, WD, FMON, Shutdown) ->
  26:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - FMON / Watchdog aktivieren -> NA
  27:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Interrupts aktivieren -> Done
  28:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Zu UserMode wechseln -> Done
  29:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  30:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** OS_State: OS_Running (User Mode)
  31:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Starten / Beenden der einzelnen Tasks auf den jeweiligen Cores(User/Supervisor Mode??) -> Done
  32:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Timer Compare Interrupts -> not needed  -> TODO
  33:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Interrupt Prioritäten von Cat2.(SW) Interrupts und Cat1.(HW) Interrupts -> NA
  34:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccrnu7Ia.s 			page 2


  35:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** (OS_State: OS_Exception (Supervisor Mode))
  36:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Link-Register Adresse im Eeprom abspeichern, an der die Exceptioin erzeugt wurde -> NA (no EEPROM
  37:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - OS_Shutdown mit Reset -> Done in handler functions via call of "OS_SHUTDOWN(os_reset_hardreset)"
  38:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  39:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** OS_State: OS_Shutdown (nur erlaubt im Supervisor Mode)
  40:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Interrupts deaktivieren -> Done
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - Tasks beenden (Timer Interrupts löschen) -> Done OS_SHUTDOWN(os_reset_hardreset
  42:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - FMON / Watchdog deinitialisieren -> NA
  43:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - MMU deaktivieren / deintialisieren -> NA
  44:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** - HW Reset auslösen -> Done 
  45:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  46:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** */
  47:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  48:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** typedef enum os_reset_req_state_e
  49:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** {
  50:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    Reset_powerdown = 0,
  51:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    Reset_restart,
  52:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    Reset_exit
  53:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** } os_reset_req_state_t;
  54:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  55:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** void OS_STATE_HANDLER(void)
  56:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** {
  25              		.loc 1 56 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 1, uses_anonymous_args = 0
  29 0000 80B5     		push	{r7, lr}
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 7, -8
  32              		.cfi_offset 14, -4
  33 0002 00AF     		add	r7, sp, #0
  34              		.cfi_def_cfa_register 7
  57:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    /* the following code runs in priviliged mode!! */
  58:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    Local os_reset_req_state_t sys_req_reset_state = Reset_powerdown;
  59:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    
  60:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    switch(OS_STATE)
  35              		.loc 1 60 0
  36 0004 1B4B     		ldr	r3, .L14
  37 0006 1B68     		ldr	r3, [r3]
  38 0008 012B     		cmp	r3, #1
  39 000a 12D0     		beq	.L3
  40 000c 012B     		cmp	r3, #1
  41 000e 02D3     		bcc	.L4
  42 0010 022B     		cmp	r3, #2
  43 0012 11D0     		beq	.L5
  61:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    {
  62:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    case os_init:
  63:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    {
  64:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /*init the MCU including MMU, RAM, Registers */
  65:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_INIT_MC();
  66:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /* start the task system */
  67:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /* initialisation of SW, HW will be done in the tasks, after starting the task system.... */
  68:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_INIT_HW();
  69:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_INIT_SW();
  70:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  71:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /* trigger dispatcher */
  72:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /* activate the dispatcher, configure TCMP interrupts for tasks */
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccrnu7Ia.s 			page 3


  73:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_ACTIVATE_DISPATCHER();
  74:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  75:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_STATE = os_running;
  76:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /* activate the interrupts, tasks will be executed from now on ... */
  77:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       LLF_INT_ENABLE();
  78:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  79:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       while(1)/*wait until timer task*/
  80:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       {
  81:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  82:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
  83:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       break;
  84:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    }
  85:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    case os_running:
  86:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    {
  87:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /* run the task function */
  88:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_TASK_DISPATCHER();      
  89:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       if(0) /* check for shutdown/reset/exit conditions: currently shutdown is not planned to be su
  90:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       {
  91:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          OS_STATE = os_shutdown;
  92:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          sys_req_reset_state = Reset_restart;         
  93:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
  94:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       
  95:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       break;
  96:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    }
  97:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    case os_shutdown:
  98:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    {
  99:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       LLF_INT_DISABLE();         
 100:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       switch(sys_req_reset_state)
 101:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       {
 102:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       case Reset_powerdown:
 103:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       {
 104:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          OS_SHUTDOWN(os_reset_powerdown);
 105:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          break;
 106:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
 107:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       case Reset_restart:
 108:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       {
 109:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          OS_SHUTDOWN(os_reset_hardreset);
 110:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          break;
 111:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
 112:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       case Reset_exit:
 113:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       {
 114:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          OS_SHUTDOWN(os_reset_exit);
 115:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          break;
 116:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
 117:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       default:
 118:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       {
 119:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          OS_SHUTDOWN(os_reset_hardreset);
 120:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          break;         
 121:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
 122:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
 123:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       break;
 124:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    }
 125:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    default:
 126:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    {
 127:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       break;
  44              		.loc 1 127 0
  45 0014 2BE0     		b	.L7
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccrnu7Ia.s 			page 4


  46              	.L4:
  65:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /* start the task system */
  47              		.loc 1 65 0
  48 0016 FFF7FEFF 		bl	OS_INIT_MC
  68:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       OS_INIT_SW();
  49              		.loc 1 68 0
  50 001a FFF7FEFF 		bl	OS_INIT_HW
  69:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  51              		.loc 1 69 0
  52 001e FFF7FEFF 		bl	OS_INIT_SW
  73:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  53              		.loc 1 73 0
  54 0022 FFF7FEFF 		bl	OS_ACTIVATE_DISPATCHER
  75:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       /* activate the interrupts, tasks will be executed from now on ... */
  55              		.loc 1 75 0
  56 0026 134B     		ldr	r3, .L14
  57 0028 0122     		movs	r2, #1
  58 002a 1A60     		str	r2, [r3]
  77:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** 
  59              		.loc 1 77 0
  60 002c FFF7FEFF 		bl	LLF_INT_ENABLE
  61              	.L6:
  79:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       {
  62              		.loc 1 79 0 discriminator 1
  63 0030 FEE7     		b	.L6
  64              	.L3:
  88:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       if(0) /* check for shutdown/reset/exit conditions: currently shutdown is not planned to be su
  65              		.loc 1 88 0
  66 0032 FFF7FEFF 		bl	OS_TASK_DISPATCHER
  95:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    }
  67              		.loc 1 95 0
  68 0036 1AE0     		b	.L7
  69              	.L5:
  99:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       switch(sys_req_reset_state)
  70              		.loc 1 99 0
  71 0038 FFF7FEFF 		bl	LLF_INT_DISABLE
 100:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       {
  72              		.loc 1 100 0
  73 003c 0E4B     		ldr	r3, .L14+4
  74 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  75 0040 012B     		cmp	r3, #1
  76 0042 07D0     		beq	.L9
  77 0044 022B     		cmp	r3, #2
  78 0046 09D0     		beq	.L10
  79 0048 002B     		cmp	r3, #0
  80 004a 0BD1     		bne	.L13
 104:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          break;
  81              		.loc 1 104 0
  82 004c 0120     		movs	r0, #1
  83 004e FFF7FEFF 		bl	OS_SHUTDOWN
 105:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
  84              		.loc 1 105 0
  85 0052 0BE0     		b	.L12
  86              	.L9:
 109:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          break;
  87              		.loc 1 109 0
  88 0054 0020     		movs	r0, #0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccrnu7Ia.s 			page 5


  89 0056 FFF7FEFF 		bl	OS_SHUTDOWN
 110:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
  90              		.loc 1 110 0
  91 005a 07E0     		b	.L12
  92              	.L10:
 114:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          break;
  93              		.loc 1 114 0
  94 005c 0220     		movs	r0, #2
  95 005e FFF7FEFF 		bl	OS_SHUTDOWN
 115:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
  96              		.loc 1 115 0
  97 0062 03E0     		b	.L12
  98              	.L13:
 119:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****          break;         
  99              		.loc 1 119 0
 100 0064 0020     		movs	r0, #0
 101 0066 FFF7FEFF 		bl	OS_SHUTDOWN
 120:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****       }
 102              		.loc 1 120 0
 103 006a 00BF     		nop
 104              	.L12:
 123:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    }
 105              		.loc 1 123 0
 106 006c 00BF     		nop
 107              	.L7:
 128:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    }
 129:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c ****    }
 130:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_main.c **** }
 108              		.loc 1 130 0
 109 006e 00BF     		nop
 110 0070 80BD     		pop	{r7, pc}
 111              	.L15:
 112 0072 00BF     		.align	2
 113              	.L14:
 114 0074 00000000 		.word	OS_STATE
 115 0078 00000000 		.word	sys_req_reset_state.4010
 116              		.cfi_endproc
 117              	.LFE0:
 119              		.bss
 120              	sys_req_reset_state.4010:
 121 0000 00       		.space	1
 123              		.text
 124              	.Letext0:
 125              		.file 2 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_base_types.h"
 126              		.file 3 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_ram.h"
 127              		.file 4 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_drivers\\lld_core.h"
 128              		.file 5 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_task_common.h"
 129              		.file 6 "E:\\NeuOrga\\Programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_shutdown.h"
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccrnu7Ia.s 			page 6


DEFINED SYMBOLS
                            *ABS*:00000000 os_main.c
C:\Users\PRESID~1\AppData\Local\Temp\ccrnu7Ia.s:15     .text:00000000 $t
C:\Users\PRESID~1\AppData\Local\Temp\ccrnu7Ia.s:22     .text:00000000 OS_STATE_HANDLER
C:\Users\PRESID~1\AppData\Local\Temp\ccrnu7Ia.s:114    .text:00000074 $d
C:\Users\PRESID~1\AppData\Local\Temp\ccrnu7Ia.s:120    .bss:00000000 sys_req_reset_state.4010
C:\Users\PRESID~1\AppData\Local\Temp\ccrnu7Ia.s:121    .bss:00000000 $d
                           .group:00000000 wm4.0.aa75c0738974a382baf71fbad152c229
                           .group:00000000 wm4.os_base_types.h.2.f3c0267f175f5cbacca6b71710665a02
                           .group:00000000 wm4.os_common.h.2.c6c04bcf238b83a2cba2b703b96f6544
                           .group:00000000 wm4.os_stack.h.2.19e5f67d3b2f1e569581f0c055512986
                           .group:00000000 wm4.os_heap.h.2.89074aae455d2462b5952479e3530dd1
                           .group:00000000 wm4.os_main.h.2.1f66ae3841c27bd36097fa1d2e1fe6a7
                           .group:00000000 wm4.os_task_config.h.2.7cfaa082f19f6144d85c64ce1f04b914
                           .group:00000000 wm4.os_task_common.h.93.9db5c540899793a03f331176d195d033
                           .group:00000000 wm4.os_task_scheduler.h.2.125feba674fa85672711aed1ca8ea199
                           .group:00000000 wm4.os_start_init_mc.h.2.79503a6a1599a616c43dcfe5bf69e7cb

UNDEFINED SYMBOLS
OS_INIT_MC
OS_INIT_HW
OS_INIT_SW
OS_ACTIVATE_DISPATCHER
LLF_INT_ENABLE
OS_TASK_DISPATCHER
LLF_INT_DISABLE
OS_SHUTDOWN
OS_STATE
