ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccNichwK.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"os_stack.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.p2align 2,,3
  17              		.global	OS_StackCheck
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	OS_StackCheck:
  24              	.LFB0:
  25              		.file 1 "E:\\NeuOrga\\Programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_stack.c"
   1:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c **** #include "os_firstinc.h"
   2:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c **** 
   3:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c **** void OS_StackCheck(uint32 amount_bytes_to_check)
   4:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c **** {
  26              		.loc 1 4 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
   5:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    #if(0)
   6:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    /* the last 64 bytes are reserved for stack check for every stack
   7:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    unsigned_char_t OS_MAIN_STACK[OS_STACK_SIZE];
   8:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c **** 
   9:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    the stack is starting at the highest address and growing to lower addresses -> pattern start on 
  10:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c **** 
  11:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    */
  12:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    static volatile uint32 stack_pos = 0, nr_of_cores = 0, failed = False;
  13:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    CRITICAL_ADDR = (volatile uint32*)-1;
  14:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    CRITICAL_POS =  (volatile uint32) -1;
  15:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    CRITICAL_STACK_USAGE_PERCENT = 0u;
  16:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c **** 
  17:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    for(stack_pos = 0; stack_pos < amount_bytes_to_check; stack_pos++)
  18:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    {
  19:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****       if(OS_MAIN_STACK[stack_pos] != 0xAA)
  20:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****       {
  21:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****          failed = True;
  22:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****          if(stack_pos < CRITICAL_POS)
  23:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****          {
  24:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****             CRITICAL_POS  = (volatile uint32 )stack_pos;
  25:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****             CRITICAL_ADDR = (volatile uint32*)&OS_MAIN_STACK[stack_pos];
  26:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****          }
  27:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****       }
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccNichwK.s 			page 2


  28:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    }
  29:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    CRITICAL_STACK_USAGE_PERCENT = (OS_STACK_SIZE - CRITICAL_POS) * 100u / OS_STACK_SIZE;
  30:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c **** 
  31:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    if((failed == True) && (CRITICAL_STACK_USAGE_PERCENT > 80u))
  32:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    {
  33:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****       OS_SetSwBug(os_bug_critical_stack_usage,Func_StackCheck);
  34:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****       ReferenceUnusedParameter(CRITICAL_POS);
  35:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****       ReferenceUnusedParameter(CRITICAL_ADDR);
  36:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****       while(1)
  37:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****       {
  38:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****          /* allow easy debugging */
  39:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****       }
  40:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    }
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    #endif
  42:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c **** }
  32              		.loc 1 42 0
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE0:
  37              		.align	1
  38 0002 00BF     		.p2align 2,,3
  39              		.global	OS_StackChkPatternInit
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu softvfp
  45              	OS_StackChkPatternInit:
  46              	.LFB1:
  43:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c **** void OS_StackChkPatternInit(void)
  44:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c **** {
  47              		.loc 1 44 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52              	.LVL1:
  53 0004 4FF4E072 		mov	r2, #448
  54 0008 AA21     		movs	r1, #170
  55 000a 0148     		ldr	r0, .L4
  56 000c FFF7FEBF 		b	memset
  57              	.LVL2:
  58              	.L5:
  59              		.align	2
  60              	.L4:
  61 0010 00000000 		.word	OS_MAIN_STACK
  62              		.cfi_endproc
  63              	.LFE1:
  65              	.Letext0:
  66              		.file 2 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_base_types.h"
  67              		.file 3 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_common.h"
  68              		.file 4 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_drivers\\lld_core.h"
  69              		.file 5 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_task_common.h"
  70              		.file 6 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_ram.h"
  71              		.file 7 "<built-in>"
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccNichwK.s 			page 3


DEFINED SYMBOLS
                            *ABS*:00000000 os_stack.c
C:\Users\PRESID~1\AppData\Local\Temp\ccNichwK.s:15     .text:00000000 $t
C:\Users\PRESID~1\AppData\Local\Temp\ccNichwK.s:23     .text:00000000 OS_StackCheck
C:\Users\PRESID~1\AppData\Local\Temp\ccNichwK.s:45     .text:00000004 OS_StackChkPatternInit
C:\Users\PRESID~1\AppData\Local\Temp\ccNichwK.s:61     .text:00000010 $d
                           .group:00000000 wm4.0.d67ddeb5d3f434a0386bf4e126239e16
                           .group:00000000 wm4.os_base_types.h.2.f3c0267f175f5cbacca6b71710665a02
                           .group:00000000 wm4.os_common.h.2.7d3083dfb0b17ee9cbe20f6fe4481cd9
                           .group:00000000 wm4.os_task_config.h.2.a73335dbec9f276504b3b94e79d1d898
                           .group:00000000 wm4.os_task_common.h.97.d031f1e6a25f19c1fb076c4a4d7927a1
                           .group:00000000 wm4.os_stack.h.2.0b496ee49cecbb9eb97fc92684c656a4
                           .group:00000000 wm4.os_heap.h.2.89074aae455d2462b5952479e3530dd1
                           .group:00000000 wm4.os_main.h.2.1f66ae3841c27bd36097fa1d2e1fe6a7

UNDEFINED SYMBOLS
memset
OS_MAIN_STACK
