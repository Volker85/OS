ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccIfr5ZA.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"os_stack.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.p2align 2,,3
  17              		.global	OS_StackCheck
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	OS_StackCheck:
  24              	.LFB0:
  25              		.file 1 "E:\\NeuOrga\\Programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_stack.c"
   1:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c **** #include "os_firstinc.h"
   2:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c **** 
   3:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c **** void OS_StackCheck(uint32 amount_bytes_to_check)
   4:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c **** {
  26              		.loc 1 4 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  32              		.cfi_def_cfa_offset 32
  33              		.cfi_offset 4, -32
  34              		.cfi_offset 5, -28
  35              		.cfi_offset 6, -24
  36              		.cfi_offset 7, -20
  37              		.cfi_offset 8, -16
  38              		.cfi_offset 9, -12
  39              		.cfi_offset 10, -8
  40              		.cfi_offset 14, -4
   5:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    #if(1)
   6:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    /* the last 64 bytes are reserved for stack check for every stack 
   7:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    unsigned_char_t OS_STACK[NR_OF_CORES][OS_STACK_SIZE];
   8:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    unsigned_char_t OS_MAIN_STACK[OS_STACK_SIZE];
   9:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    
  10:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    the stack is starting at the highest address and growing to lower addresses -> pattern start on 
  11:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    
  12:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    */
  13:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    static volatile uint32 stack_pos = 0, nr_of_cores = 0, failed = False;
  14:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    CRITICAL_ADDR = (volatile uint32*)-1;
  15:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    CRITICAL_POS =  (volatile uint32) -1;
  16:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    CRITICAL_STACK_USAGE_PERCENT = 0u;
  17:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c **** 
  18:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    for(stack_pos = 0; stack_pos < amount_bytes_to_check; stack_pos++)
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccIfr5ZA.s 			page 2


  41              		.loc 1 18 0
  42 0004 354B     		ldr	r3, .L28
  15:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    CRITICAL_STACK_USAGE_PERCENT = 0u;
  43              		.loc 1 15 0
  44 0006 364D     		ldr	r5, .L28+4
  16:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c **** 
  45              		.loc 1 16 0
  46 0008 DFF8DCE0 		ldr	lr, .L28+12
  14:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    CRITICAL_POS =  (volatile uint32) -1;
  47              		.loc 1 14 0
  48 000c DFF8DC80 		ldr	r8, .L28+16
  49 0010 4FF0FF31 		mov	r1, #-1
  16:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c **** 
  50              		.loc 1 16 0
  51 0014 0027     		movs	r7, #0
  15:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    CRITICAL_STACK_USAGE_PERCENT = 0u;
  52              		.loc 1 15 0
  53 0016 2960     		str	r1, [r5]
  16:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c **** 
  54              		.loc 1 16 0
  55 0018 CEF80070 		str	r7, [lr]
  56              		.loc 1 18 0
  57 001c 1F60     		str	r7, [r3]
  58 001e 1A68     		ldr	r2, [r3]
  14:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    CRITICAL_POS =  (volatile uint32) -1;
  59              		.loc 1 14 0
  60 0020 C8F80010 		str	r1, [r8]
  61              		.loc 1 18 0
  62 0024 9042     		cmp	r0, r2
  63 0026 3CD9     		bls	.L3
  64 0028 DFF8C4C0 		ldr	ip, .L28+20
  65 002c 2D4C     		ldr	r4, .L28+8
  19:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    {
  20:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****       for(nr_of_cores = 0; nr_of_cores < NR_OF_CORES; nr_of_cores++)
  66              		.loc 1 20 0
  67 002e B946     		mov	r9, r7
  21:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****       {
  22:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****          if(OS_STACK[nr_of_cores][stack_pos] != 0xAA)
  23:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****          {
  24:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****             failed = True;
  68              		.loc 1 24 0
  69 0030 0126     		movs	r6, #1
  70              	.L2:
  20:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****       {
  71              		.loc 1 20 0
  72 0032 C3F80490 		str	r9, [r3, #4]
  73 0036 5A68     		ldr	r2, [r3, #4]
  74 0038 E2B9     		cbnz	r2, .L4
  75              	.L6:
  22:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****          {
  76              		.loc 1 22 0
  77 003a 5A68     		ldr	r2, [r3, #4]
  78 003c D3F800A0 		ldr	r10, [r3]
  79 0040 04EB4222 		add	r2, r4, r2, lsl #9
  80 0044 12F80A20 		ldrb	r2, [r2, r10]	@ zero_extendqisi2
  81 0048 AA2A     		cmp	r2, #170
  82 004a 0DD0     		beq	.L5
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccIfr5ZA.s 			page 3


  83              		.loc 1 24 0
  84 004c 9E60     		str	r6, [r3, #8]
  25:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****             if(stack_pos < CRITICAL_POS)
  85              		.loc 1 25 0
  86 004e D3F800A0 		ldr	r10, [r3]
  87 0052 2A68     		ldr	r2, [r5]
  88 0054 9245     		cmp	r10, r2
  89 0056 07D2     		bcs	.L5
  26:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****             {
  27:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****                CRITICAL_POS  = (volatile uint32 )stack_pos;
  90              		.loc 1 27 0
  91 0058 1A68     		ldr	r2, [r3]
  92 005a 2A60     		str	r2, [r5]
  28:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****                CRITICAL_ADDR = (volatile uint32*)&OS_STACK[nr_of_cores][stack_pos];
  93              		.loc 1 28 0
  94 005c 5A68     		ldr	r2, [r3, #4]
  95 005e 1968     		ldr	r1, [r3]
  96 0060 01EB4221 		add	r1, r1, r2, lsl #9
  97 0064 2144     		add	r1, r1, r4
  98 0066 0127     		movs	r7, #1
  99              	.L5:
  20:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****       {
 100              		.loc 1 20 0 discriminator 2
 101 0068 5A68     		ldr	r2, [r3, #4]
 102 006a 0132     		adds	r2, r2, #1
 103 006c 5A60     		str	r2, [r3, #4]
 104 006e 5A68     		ldr	r2, [r3, #4]
 105 0070 002A     		cmp	r2, #0
 106 0072 E2D0     		beq	.L6
 107              	.L4:
  29:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****             }   
  30:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****          }   
  31:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****       }
  32:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****       if(OS_MAIN_STACK[stack_pos] != 0xAA)
 108              		.loc 1 32 0
 109 0074 1A68     		ldr	r2, [r3]
 110 0076 1CF80220 		ldrb	r2, [ip, r2]	@ zero_extendqisi2
 111 007a AA2A     		cmp	r2, #170
 112 007c 0AD0     		beq	.L7
  33:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****       {
  34:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****          failed = True;
 113              		.loc 1 34 0
 114 007e 9E60     		str	r6, [r3, #8]
  35:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****          if(stack_pos < CRITICAL_POS)
 115              		.loc 1 35 0
 116 0080 D3F800A0 		ldr	r10, [r3]
 117 0084 2A68     		ldr	r2, [r5]
 118 0086 9245     		cmp	r10, r2
 119 0088 04D2     		bcs	.L7
  36:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****          {
  37:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****             CRITICAL_POS  = (volatile uint32 )stack_pos;
 120              		.loc 1 37 0
 121 008a 1A68     		ldr	r2, [r3]
 122 008c 2A60     		str	r2, [r5]
  38:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****             CRITICAL_ADDR = (volatile uint32*)&OS_MAIN_STACK[stack_pos];
 123              		.loc 1 38 0
 124 008e 1968     		ldr	r1, [r3]
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccIfr5ZA.s 			page 4


 125 0090 0127     		movs	r7, #1
 126 0092 6144     		add	r1, r1, ip
 127              	.L7:
  18:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    {
 128              		.loc 1 18 0 discriminator 2
 129 0094 1A68     		ldr	r2, [r3]
 130 0096 0132     		adds	r2, r2, #1
 131 0098 1A60     		str	r2, [r3]
 132 009a 1A68     		ldr	r2, [r3]
 133 009c 8242     		cmp	r2, r0
 134 009e C8D3     		bcc	.L2
 135 00a0 CFB9     		cbnz	r7, .L26
 136              	.L3:
  39:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****          }          
  40:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****       }         
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    }
  42:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    CRITICAL_STACK_USAGE_PERCENT = (OS_STACK_SIZE - CRITICAL_POS) * 100u / OS_STACK_SIZE;
 137              		.loc 1 42 0
 138 00a2 2968     		ldr	r1, [r5]
 139 00a4 6FF06302 		mvn	r2, #99
 140 00a8 02FB01F2 		mul	r2, r2, r1
 141 00ac 02F54842 		add	r2, r2, #51200
 142 00b0 520A     		lsrs	r2, r2, #9
 143 00b2 CEF80020 		str	r2, [lr]
  43:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    
  44:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    if((failed == True) && (CRITICAL_STACK_USAGE_PERCENT > 80u))
 144              		.loc 1 44 0
 145 00b6 9B68     		ldr	r3, [r3, #8]
 146 00b8 012B     		cmp	r3, #1
 147 00ba 01D0     		beq	.L27
 148              	.L1:
  45:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    {
  46:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****       OS_SetSwBug(os_bug_critical_stack_usage,Func_StackCheck);
  47:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****       ReferenceUnusedParameter(CRITICAL_POS);
  48:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****       ReferenceUnusedParameter(CRITICAL_ADDR);
  49:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****       while(1)
  50:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****       {
  51:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****          /* allow easy debugging */
  52:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****       }  
  53:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    }   
  54:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    #endif
  55:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c **** }
 149              		.loc 1 55 0
 150 00bc BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 151              	.L27:
  44:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    {
 152              		.loc 1 44 0 discriminator 1
 153 00c0 DEF80030 		ldr	r3, [lr]
 154 00c4 502B     		cmp	r3, #80
 155 00c6 F9D9     		bls	.L1
  46:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****       ReferenceUnusedParameter(CRITICAL_POS);
 156              		.loc 1 46 0
 157 00c8 1121     		movs	r1, #17
 158 00ca 0920     		movs	r0, #9
 159              	.LVL1:
 160 00cc FFF7FEFF 		bl	OS_SetSwBug
 161              	.LVL2:
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccIfr5ZA.s 			page 5


  47:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****       ReferenceUnusedParameter(CRITICAL_ADDR);
 162              		.loc 1 47 0
 163 00d0 2B68     		ldr	r3, [r5]
 164 00d2 2B60     		str	r3, [r5]
 165              	.L10:
 166 00d4 FEE7     		b	.L10
 167              	.LVL3:
 168              	.L26:
 169 00d6 C8F80010 		str	r1, [r8]
 170 00da E2E7     		b	.L3
 171              	.L29:
 172              		.align	2
 173              	.L28:
 174 00dc 00000000 		.word	.LANCHOR0
 175 00e0 00000000 		.word	CRITICAL_POS
 176 00e4 00000000 		.word	OS_STACK
 177 00e8 00000000 		.word	CRITICAL_STACK_USAGE_PERCENT
 178 00ec 00000000 		.word	CRITICAL_ADDR
 179 00f0 00000000 		.word	OS_MAIN_STACK
 180              		.cfi_endproc
 181              	.LFE0:
 183              		.align	1
 184              		.p2align 2,,3
 185              		.global	OS_StackChkPatternInit
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 189              		.fpu softvfp
 191              	OS_StackChkPatternInit:
 192              	.LFB1:
  56:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c **** void OS_StackChkPatternInit(void)
  57:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c **** {
 193              		.loc 1 57 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              	.LVL4:
 198 00f4 08B5     		push	{r3, lr}
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 3, -8
 201              		.cfi_offset 14, -4
 202 00f6 4FF4E072 		mov	r2, #448
 203 00fa AA21     		movs	r1, #170
 204 00fc 0548     		ldr	r0, .L32
 205 00fe FFF7FEFF 		bl	memset
 206              	.LVL5:
 207 0102 4FF4E072 		mov	r2, #448
 208 0106 AA21     		movs	r1, #170
 209 0108 0348     		ldr	r0, .L32+4
  58:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    uint32 stack_pos = 0,nr_of_cores = 0;
  59:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    /* init the stack with 0xAA (only the highest 64 bytes leave out, because they might be already 
  60:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    for(stack_pos = 0; stack_pos < (OS_STACK_SIZE-64); stack_pos++)
  61:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    {
  62:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****       for(nr_of_cores = 0; nr_of_cores < NR_OF_CORES; nr_of_cores++)
  63:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****       {
  64:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****          OS_STACK[nr_of_cores][stack_pos] = 0xAA;
  65:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****       }
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccIfr5ZA.s 			page 6


  66:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****       OS_MAIN_STACK[stack_pos] = 0xAA;
  67:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c ****    }    
  68:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_stack.c **** }   ...
 210              		.loc 1 68 0
 211 010a BDE80840 		pop	{r3, lr}
 212              		.cfi_restore 14
 213              		.cfi_restore 3
 214              		.cfi_def_cfa_offset 0
 215 010e FFF7FEBF 		b	memset
 216              	.LVL6:
 217              	.L33:
 218 0112 00BF     		.align	2
 219              	.L32:
 220 0114 00000000 		.word	OS_STACK
 221 0118 00000000 		.word	OS_MAIN_STACK
 222              		.cfi_endproc
 223              	.LFE1:
 225              		.bss
 226              		.align	2
 227              		.set	.LANCHOR0,. + 0
 230              	stack_pos.4032:
 231 0000 00000000 		.space	4
 234              	nr_of_cores.4033:
 235 0004 00000000 		.space	4
 238              	failed.4034:
 239 0008 00000000 		.space	4
 240              		.text
 241              	.Letext0:
 242              		.file 2 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_base_types.h"
 243              		.file 3 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_common.h"
 244              		.file 4 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_drivers\\lld_core.h"
 245              		.file 5 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_task_common.h"
 246              		.file 6 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_ram.h"
 247              		.file 7 "<built-in>"
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccIfr5ZA.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 os_stack.c
C:\Users\PRESID~1\AppData\Local\Temp\ccIfr5ZA.s:15     .text:00000000 $t
C:\Users\PRESID~1\AppData\Local\Temp\ccIfr5ZA.s:23     .text:00000000 OS_StackCheck
C:\Users\PRESID~1\AppData\Local\Temp\ccIfr5ZA.s:174    .text:000000dc $d
C:\Users\PRESID~1\AppData\Local\Temp\ccIfr5ZA.s:183    .text:000000f4 $t
C:\Users\PRESID~1\AppData\Local\Temp\ccIfr5ZA.s:191    .text:000000f4 OS_StackChkPatternInit
C:\Users\PRESID~1\AppData\Local\Temp\ccIfr5ZA.s:220    .text:00000114 $d
C:\Users\PRESID~1\AppData\Local\Temp\ccIfr5ZA.s:226    .bss:00000000 $d
C:\Users\PRESID~1\AppData\Local\Temp\ccIfr5ZA.s:230    .bss:00000000 stack_pos.4032
C:\Users\PRESID~1\AppData\Local\Temp\ccIfr5ZA.s:234    .bss:00000004 nr_of_cores.4033
C:\Users\PRESID~1\AppData\Local\Temp\ccIfr5ZA.s:238    .bss:00000008 failed.4034
                           .group:00000000 wm4.0.d67ddeb5d3f434a0386bf4e126239e16
                           .group:00000000 wm4.os_base_types.h.2.f3c0267f175f5cbacca6b71710665a02
                           .group:00000000 wm4.os_common.h.2.7d3083dfb0b17ee9cbe20f6fe4481cd9
                           .group:00000000 wm4.os_task_config.h.2.a73335dbec9f276504b3b94e79d1d898
                           .group:00000000 wm4.os_task_common.h.97.d031f1e6a25f19c1fb076c4a4d7927a1
                           .group:00000000 wm4.os_stack.h.2.0b496ee49cecbb9eb97fc92684c656a4
                           .group:00000000 wm4.os_heap.h.2.89074aae455d2462b5952479e3530dd1
                           .group:00000000 wm4.os_main.h.2.1f66ae3841c27bd36097fa1d2e1fe6a7

UNDEFINED SYMBOLS
OS_SetSwBug
CRITICAL_POS
OS_STACK
CRITICAL_STACK_USAGE_PERCENT
CRITICAL_ADDR
OS_MAIN_STACK
memset
