ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccNxMZmg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"os_task_common.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	REGISTER_R0,4,4
  19              		.comm	REGISTER_R1,4,4
  20              		.comm	REGISTER_R2,4,4
  21              		.comm	REGISTER_R3,4,4
  22              		.comm	TASK_PTR,20,4
  23              		.align	2
  24              		.global	OS_TASK_SAVETASK_ENVIRONMENT
  25              		.thumb
  26              		.thumb_func
  28              	OS_TASK_SAVETASK_ENVIRONMENT:
  29              	.LFB0:
  30              		.file 1 "E:\\NeuOrga\\Programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_task_common.c"
   1:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** #include "os_firstinc.h"
   2:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** #include "os_task_common.h"
   3:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** #include "os_task_scheduler.h"
   4:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** #include "os_heap.h"
   5:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** 
   6:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** /* Create and delete the task environment is not supported, 
   7:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    because we do not allow dynamic RAM allocation for task environment.
   8:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    
   9:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    
  10:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** */
  11:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** void* REGISTER_R0;
  12:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** void* REGISTER_R1;
  13:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** void* REGISTER_R2;
  14:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** void* REGISTER_R3;
  15:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** task_t* TASK_PTR[MAX_RUN_QUEUE_SIZE];
  16:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** 
  17:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** void OS_TASK_SAVETASK_ENVIRONMENT(task_t* task)
  18:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** {
  31              		.loc 1 18 0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 8
  34              		@ frame_needed = 1, uses_anonymous_args = 0
  35 0000 80B5     		push	{r7, lr}
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 82B0     		sub	sp, sp, #8
  40              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccNxMZmg.s 			page 2


  41 0004 00AF     		add	r7, sp, #0
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
  19:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    if(task != 0)
  44              		.loc 1 19 0
  45 0008 7B68     		ldr	r3, [r7, #4]
  46 000a 002B     		cmp	r3, #0
  47 000c 0FD0     		beq	.L2
  20:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {
  21:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       /*
  22:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       http://www.ibiblio.org/gferg/ldp/GCC-Inline-Assembly-HOWTO.html#s2
  23:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       x86: mov ... esp
  24:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       */
  25:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       LLF_SAVE_TASK_STACK(task->pStackPointer);
  48              		.loc 1 25 0
  49 000e 7B68     		ldr	r3, [r7, #4]
  50 0010 DB6E     		ldr	r3, [r3, #108]
  51 0012 1846     		mov	r0, r3
  52 0014 FFF7FEFF 		bl	LLF_SAVE_TASK_STACK
  26:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    #if(CFG_PROCESSOR == cMCU_X86)
  27:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       LLF_SAVE_REGISTERS(task->EAX,task->EBX,task->ECX,task->EDX);
  28:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    #else
  29:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       LLF_SAVE_REGISTERS(task->r0,task->r1,task->r2,task->r3);
  53              		.loc 1 29 0
  54 0018 7B68     		ldr	r3, [r7, #4]
  55 001a 986B     		ldr	r0, [r3, #56]
  56 001c 7B68     		ldr	r3, [r7, #4]
  57 001e D96B     		ldr	r1, [r3, #60]
  58 0020 7B68     		ldr	r3, [r7, #4]
  59 0022 1A6C     		ldr	r2, [r3, #64]
  60 0024 7B68     		ldr	r3, [r7, #4]
  61 0026 5B6C     		ldr	r3, [r3, #68]
  62 0028 FFF7FEFF 		bl	LLF_SAVE_REGISTERS
  63 002c 03E0     		b	.L3
  64              	.L2:
  30:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    #endif
  31:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
  32:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    else
  33:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {
  34:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       OS_SET_SW_BUG(os_bug_null_pointer,Func_SaveTaskEnvironment);
  65              		.loc 1 34 0
  66 002e 0220     		movs	r0, #2
  67 0030 0121     		movs	r1, #1
  68 0032 FFF7FEFF 		bl	OS_SET_SW_BUG
  69              	.L3:
  35:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
  36:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    return;
  70              		.loc 1 36 0
  71 0036 00BF     		nop
  37:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** }
  72              		.loc 1 37 0
  73 0038 0837     		adds	r7, r7, #8
  74              		.cfi_def_cfa_offset 8
  75 003a BD46     		mov	sp, r7
  76              		.cfi_def_cfa_register 13
  77              		@ sp needed
  78 003c 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccNxMZmg.s 			page 3


  79              		.cfi_endproc
  80              	.LFE0:
  82 003e 00BF     		.align	2
  83              		.global	OS_TASK_RESTORETASK_ENVIRONMENT
  84              		.thumb
  85              		.thumb_func
  87              	OS_TASK_RESTORETASK_ENVIRONMENT:
  88              	.LFB1:
  38:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** 
  39:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** void OS_TASK_RESTORETASK_ENVIRONMENT(task_t* task)
  40:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** {
  89              		.loc 1 40 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 8
  92              		@ frame_needed = 1, uses_anonymous_args = 0
  93 0040 80B5     		push	{r7, lr}
  94              		.cfi_def_cfa_offset 8
  95              		.cfi_offset 7, -8
  96              		.cfi_offset 14, -4
  97 0042 82B0     		sub	sp, sp, #8
  98              		.cfi_def_cfa_offset 16
  99 0044 00AF     		add	r7, sp, #0
 100              		.cfi_def_cfa_register 7
 101 0046 7860     		str	r0, [r7, #4]
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    if(task!=0)
 102              		.loc 1 41 0
 103 0048 7B68     		ldr	r3, [r7, #4]
 104 004a 002B     		cmp	r3, #0
 105 004c 08D0     		beq	.L6
  42:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {
  43:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       LLF_RESTORE_TASK_STACK(task->pStackPointer);
 106              		.loc 1 43 0
 107 004e 7B68     		ldr	r3, [r7, #4]
 108 0050 DB6E     		ldr	r3, [r3, #108]
 109 0052 1846     		mov	r0, r3
 110 0054 FFF7FEFF 		bl	LLF_RESTORE_TASK_STACK
  44:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       LLF_RESTORE_REGISTERS(task);
 111              		.loc 1 44 0
 112 0058 7868     		ldr	r0, [r7, #4]
 113 005a FFF7FEFF 		bl	LLF_RESTORE_REGISTERS
 114 005e 03E0     		b	.L5
 115              	.L6:
  45:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
  46:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    else
  47:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {
  48:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       OS_SET_SW_BUG(os_bug_null_pointer,Func_RestoreTaskEnvironment);
 116              		.loc 1 48 0
 117 0060 0220     		movs	r0, #2
 118 0062 0221     		movs	r1, #2
 119 0064 FFF7FEFF 		bl	OS_SET_SW_BUG
 120              	.L5:
  49:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
  50:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** }
 121              		.loc 1 50 0
 122 0068 0837     		adds	r7, r7, #8
 123              		.cfi_def_cfa_offset 8
 124 006a BD46     		mov	sp, r7
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccNxMZmg.s 			page 4


 125              		.cfi_def_cfa_register 13
 126              		@ sp needed
 127 006c 80BD     		pop	{r7, pc}
 128              		.cfi_endproc
 129              	.LFE1:
 131 006e 00BF     		.align	2
 132              		.global	OS_TASK_RESTORE_SYSTEM_STACK
 133              		.thumb
 134              		.thumb_func
 136              	OS_TASK_RESTORE_SYSTEM_STACK:
 137              	.LFB2:
  51:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** void OS_TASK_RESTORE_SYSTEM_STACK(uint8* system_stack_ptr)
  52:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** {
 138              		.loc 1 52 0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 8
 141              		@ frame_needed = 1, uses_anonymous_args = 0
 142 0070 80B5     		push	{r7, lr}
 143              		.cfi_def_cfa_offset 8
 144              		.cfi_offset 7, -8
 145              		.cfi_offset 14, -4
 146 0072 82B0     		sub	sp, sp, #8
 147              		.cfi_def_cfa_offset 16
 148 0074 00AF     		add	r7, sp, #0
 149              		.cfi_def_cfa_register 7
 150 0076 7860     		str	r0, [r7, #4]
  53:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    LLF_RESTORE_SYSTEM_STACK(system_stack_ptr);
 151              		.loc 1 53 0
 152 0078 7868     		ldr	r0, [r7, #4]
 153 007a FFF7FEFF 		bl	LLF_RESTORE_SYSTEM_STACK
  54:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** }
 154              		.loc 1 54 0
 155 007e 0837     		adds	r7, r7, #8
 156              		.cfi_def_cfa_offset 8
 157 0080 BD46     		mov	sp, r7
 158              		.cfi_def_cfa_register 13
 159              		@ sp needed
 160 0082 80BD     		pop	{r7, pc}
 161              		.cfi_endproc
 162              	.LFE2:
 164              		.align	2
 165              		.global	OS_TASK_SAVE_SYSTEM_STACK
 166              		.thumb
 167              		.thumb_func
 169              	OS_TASK_SAVE_SYSTEM_STACK:
 170              	.LFB3:
  55:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** void OS_TASK_SAVE_SYSTEM_STACK(uint8* system_stack_ptr)
  56:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** {
 171              		.loc 1 56 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 8
 174              		@ frame_needed = 1, uses_anonymous_args = 0
 175 0084 80B5     		push	{r7, lr}
 176              		.cfi_def_cfa_offset 8
 177              		.cfi_offset 7, -8
 178              		.cfi_offset 14, -4
 179 0086 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccNxMZmg.s 			page 5


 180              		.cfi_def_cfa_offset 16
 181 0088 00AF     		add	r7, sp, #0
 182              		.cfi_def_cfa_register 7
 183 008a 7860     		str	r0, [r7, #4]
  57:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    LLF_SAVE_SYSTEM_STACK(system_stack_ptr);
 184              		.loc 1 57 0
 185 008c 7868     		ldr	r0, [r7, #4]
 186 008e FFF7FEFF 		bl	LLF_SAVE_SYSTEM_STACK
  58:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** }
 187              		.loc 1 58 0
 188 0092 0837     		adds	r7, r7, #8
 189              		.cfi_def_cfa_offset 8
 190 0094 BD46     		mov	sp, r7
 191              		.cfi_def_cfa_register 13
 192              		@ sp needed
 193 0096 80BD     		pop	{r7, pc}
 194              		.cfi_endproc
 195              	.LFE3:
 197              		.align	2
 198              		.global	OS_Task_InitTaskEnvironment
 199              		.thumb
 200              		.thumb_func
 202              	OS_Task_InitTaskEnvironment:
 203              	.LFB4:
  59:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** void OS_Task_InitTaskEnvironment(task_t* task)
  60:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** {
 204              		.loc 1 60 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 8
 207              		@ frame_needed = 1, uses_anonymous_args = 0
 208 0098 80B5     		push	{r7, lr}
 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 7, -8
 211              		.cfi_offset 14, -4
 212 009a 82B0     		sub	sp, sp, #8
 213              		.cfi_def_cfa_offset 16
 214 009c 00AF     		add	r7, sp, #0
 215              		.cfi_def_cfa_register 7
 216 009e 7860     		str	r0, [r7, #4]
  61:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    if(task != 0)
 217              		.loc 1 61 0
 218 00a0 7B68     		ldr	r3, [r7, #4]
 219 00a2 002B     		cmp	r3, #0
 220 00a4 60D0     		beq	.L11
  62:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {
  63:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       /* general*/
  64:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->active                = False;
 221              		.loc 1 64 0
 222 00a6 7A68     		ldr	r2, [r7, #4]
 223 00a8 1378     		ldrb	r3, [r2]
 224 00aa 6FF30003 		bfc	r3, #0, #1
 225 00ae 1370     		strb	r3, [r2]
  65:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       /* general purpose registers */
  66:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    #if(CFG_PROCESSOR == cMCU_X86)
  67:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->EAX                             = (unsigned_int32_t)       0;
  68:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->EBX                             = (unsigned_int32_t)       0;
  69:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->ECX                             = (unsigned_int32_t)       0;
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccNxMZmg.s 			page 6


  70:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->EDX                             = (unsigned_int32_t)       0;
  71:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    #else
  72:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r0                             = (unsigned_int32_t)       0;
 226              		.loc 1 72 0
 227 00b0 7B68     		ldr	r3, [r7, #4]
 228 00b2 0022     		movs	r2, #0
 229 00b4 9A63     		str	r2, [r3, #56]
  73:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r1                             = (unsigned_int32_t)       0;
 230              		.loc 1 73 0
 231 00b6 7B68     		ldr	r3, [r7, #4]
 232 00b8 0022     		movs	r2, #0
 233 00ba DA63     		str	r2, [r3, #60]
  74:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r2                             = (unsigned_int32_t)       0;
 234              		.loc 1 74 0
 235 00bc 7B68     		ldr	r3, [r7, #4]
 236 00be 0022     		movs	r2, #0
 237 00c0 1A64     		str	r2, [r3, #64]
  75:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r3                             = (unsigned_int32_t)       0;
 238              		.loc 1 75 0
 239 00c2 7B68     		ldr	r3, [r7, #4]
 240 00c4 0022     		movs	r2, #0
 241 00c6 5A64     		str	r2, [r3, #68]
  76:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r4                             = (unsigned_int32_t)       0;
 242              		.loc 1 76 0
 243 00c8 7B68     		ldr	r3, [r7, #4]
 244 00ca 0022     		movs	r2, #0
 245 00cc 9A64     		str	r2, [r3, #72]
  77:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r5                             = (unsigned_int32_t)       0;
 246              		.loc 1 77 0
 247 00ce 7B68     		ldr	r3, [r7, #4]
 248 00d0 0022     		movs	r2, #0
 249 00d2 DA64     		str	r2, [r3, #76]
  78:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r6                             = (unsigned_int32_t)       0;   
 250              		.loc 1 78 0
 251 00d4 7B68     		ldr	r3, [r7, #4]
 252 00d6 0022     		movs	r2, #0
 253 00d8 1A65     		str	r2, [r3, #80]
  79:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r7                             = (unsigned_int32_t)       0;
 254              		.loc 1 79 0
 255 00da 7B68     		ldr	r3, [r7, #4]
 256 00dc 0022     		movs	r2, #0
 257 00de 5A65     		str	r2, [r3, #84]
  80:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r8                             = (unsigned_int32_t)       0;
 258              		.loc 1 80 0
 259 00e0 7B68     		ldr	r3, [r7, #4]
 260 00e2 0022     		movs	r2, #0
 261 00e4 9A65     		str	r2, [r3, #88]
  81:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r9                             = (unsigned_int32_t)       0;
 262              		.loc 1 81 0
 263 00e6 7B68     		ldr	r3, [r7, #4]
 264 00e8 0022     		movs	r2, #0
 265 00ea DA65     		str	r2, [r3, #92]
  82:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r10                             = (unsigned_int32_t)       0;
 266              		.loc 1 82 0
 267 00ec 7B68     		ldr	r3, [r7, #4]
 268 00ee 0022     		movs	r2, #0
 269 00f0 1A66     		str	r2, [r3, #96]
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccNxMZmg.s 			page 7


  83:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r11                             = (unsigned_int32_t)       0;
 270              		.loc 1 83 0
 271 00f2 7B68     		ldr	r3, [r7, #4]
 272 00f4 0022     		movs	r2, #0
 273 00f6 5A66     		str	r2, [r3, #100]
  84:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r12                             = (unsigned_int32_t)       0;  
 274              		.loc 1 84 0
 275 00f8 7B68     		ldr	r3, [r7, #4]
 276 00fa 0022     		movs	r2, #0
 277 00fc 9A66     		str	r2, [r3, #104]
  85:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    #endif
  86:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       /* task scheduling */
  87:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->WaitActUntil                     = (unsigned_char_t)         0;
 278              		.loc 1 87 0
 279 00fe 7B68     		ldr	r3, [r7, #4]
 280 0100 0022     		movs	r2, #0
 281 0102 9A60     		str	r2, [r3, #8]
  88:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->wait_time                        = (unsigned_int32_t)        0;
 282              		.loc 1 88 0
 283 0104 7B68     		ldr	r3, [r7, #4]
 284 0106 0022     		movs	r2, #0
 285 0108 DA60     		str	r2, [r3, #12]
  89:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->TimeToPrioInc                    = (unsigned_int32_t)        0;
 286              		.loc 1 89 0
 287 010a 7B68     		ldr	r3, [r7, #4]
 288 010c 0022     		movs	r2, #0
 289 010e 1A61     		str	r2, [r3, #16]
  90:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->overwaittime_per_prio_inc_step   = (unsigned_int32_t)        1;/* has to be >=1 */
 290              		.loc 1 90 0
 291 0110 7B68     		ldr	r3, [r7, #4]
 292 0112 0122     		movs	r2, #1
 293 0114 5A61     		str	r2, [r3, #20]
  91:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->max_allowed_wait_time            = (unsigned_int32_t)        100000;
 294              		.loc 1 91 0
 295 0116 7B68     		ldr	r3, [r7, #4]
 296 0118 174A     		ldr	r2, .L13
 297 011a 9A61     		str	r2, [r3, #24]
  92:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->exe_time                         = (unsigned_int32_t)        0;
 298              		.loc 1 92 0
 299 011c 7B68     		ldr	r3, [r7, #4]
 300 011e 0022     		movs	r2, #0
 301 0120 DA61     		str	r2, [r3, #28]
  93:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->current_prio                     = (unsigned_char_t)         0;
 302              		.loc 1 93 0
 303 0122 7B68     		ldr	r3, [r7, #4]
 304 0124 0022     		movs	r2, #0
 305 0126 83F82020 		strb	r2, [r3, #32]
  94:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->default_prio                     = (unsigned_char_t)         0;
 306              		.loc 1 94 0
 307 012a 7B68     		ldr	r3, [r7, #4]
 308 012c 0022     		movs	r2, #0
 309 012e 83F82120 		strb	r2, [r3, #33]
  95:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** 
  96:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       /* task management */
  97:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->state_request                    =                           0;
 310              		.loc 1 97 0
 311 0132 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccNxMZmg.s 			page 8


 312 0134 0022     		movs	r2, #0
 313 0136 DA62     		str	r2, [r3, #44]
  98:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->task_state                       =                           Task_unspecified;
 314              		.loc 1 98 0
 315 0138 7B68     		ldr	r3, [r7, #4]
 316 013a 0022     		movs	r2, #0
 317 013c 83F83020 		strb	r2, [r3, #48]
  99:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->task_queued                      =                           False;
 318              		.loc 1 99 0
 319 0140 7A68     		ldr	r2, [r7, #4]
 320 0142 1378     		ldrb	r3, [r2]
 321 0144 6FF34103 		bfc	r3, #1, #1
 322 0148 1370     		strb	r3, [r2]
 100:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->FREE                             =                           0;
 323              		.loc 1 100 0
 324 014a 7A68     		ldr	r2, [r7, #4]
 325 014c 1368     		ldr	r3, [r2]
 326 014e 6FF3DF03 		bfc	r3, #3, #29
 327 0152 1360     		str	r3, [r2]
 101:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->NrOfInsAllowed                   = (unsigned_char_t)         0;
 328              		.loc 1 101 0
 329 0154 7B68     		ldr	r3, [r7, #4]
 330 0156 0022     		movs	r2, #0
 331 0158 1A71     		strb	r2, [r3, #4]
 102:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->NrOfInsActivated                 = (unsigned_char_t)         0;
 332              		.loc 1 102 0
 333 015a 7B68     		ldr	r3, [r7, #4]
 334 015c 0022     		movs	r2, #0
 335 015e 5A71     		strb	r2, [r3, #5]
 103:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->fp                               = (func_p_t)                0;
 336              		.loc 1 103 0
 337 0160 7B68     		ldr	r3, [r7, #4]
 338 0162 0022     		movs	r2, #0
 339 0164 9A62     		str	r2, [r3, #40]
 340 0166 03E0     		b	.L10
 341              	.L11:
 104:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** 
 105:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
 106:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    else
 107:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {
 108:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       OS_SET_SW_BUG(os_bug_null_pointer,Func_CreateTaskEnvironment);
 342              		.loc 1 108 0
 343 0168 0220     		movs	r0, #2
 344 016a 0321     		movs	r1, #3
 345 016c FFF7FEFF 		bl	OS_SET_SW_BUG
 346              	.L10:
 109:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
 110:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** }
 347              		.loc 1 110 0
 348 0170 0837     		adds	r7, r7, #8
 349              		.cfi_def_cfa_offset 8
 350 0172 BD46     		mov	sp, r7
 351              		.cfi_def_cfa_register 13
 352              		@ sp needed
 353 0174 80BD     		pop	{r7, pc}
 354              	.L14:
 355 0176 00BF     		.align	2
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccNxMZmg.s 			page 9


 356              	.L13:
 357 0178 A0860100 		.word	100000
 358              		.cfi_endproc
 359              	.LFE4:
 361              		.align	2
 362              		.global	OS_Task_DeleteTaskEnvironment
 363              		.thumb
 364              		.thumb_func
 366              	OS_Task_DeleteTaskEnvironment:
 367              	.LFB5:
 111:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** #if(USE_STATIC_CREATED_TASKS != False)
 112:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** void OS_Task_DeleteTaskEnvironment(task_t* task)
 113:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** {
 368              		.loc 1 113 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 8
 371              		@ frame_needed = 1, uses_anonymous_args = 0
 372 017c 80B5     		push	{r7, lr}
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 7, -8
 375              		.cfi_offset 14, -4
 376 017e 82B0     		sub	sp, sp, #8
 377              		.cfi_def_cfa_offset 16
 378 0180 00AF     		add	r7, sp, #0
 379              		.cfi_def_cfa_register 7
 380 0182 7860     		str	r0, [r7, #4]
 114:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    if(task!=0 && task->pStackPointerByMalloc!=0)
 381              		.loc 1 114 0
 382 0184 7B68     		ldr	r3, [r7, #4]
 383 0186 002B     		cmp	r3, #0
 384 0188 09D0     		beq	.L16
 385              		.loc 1 114 0 is_stmt 0 discriminator 1
 386 018a 7B68     		ldr	r3, [r7, #4]
 387 018c 1B6F     		ldr	r3, [r3, #112]
 388 018e 002B     		cmp	r3, #0
 389 0190 05D0     		beq	.L16
 115:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {
 116:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       os_free(task->pStackPointerByMalloc);/* only possible in case of heap used */
 390              		.loc 1 116 0 is_stmt 1
 391 0192 7B68     		ldr	r3, [r7, #4]
 392 0194 1B6F     		ldr	r3, [r3, #112]
 393 0196 1846     		mov	r0, r3
 394 0198 FFF7FEFF 		bl	os_free
 395 019c 03E0     		b	.L15
 396              	.L16:
 117:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
 118:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    else
 119:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {
 120:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       OS_SET_SW_BUG(os_bug_null_pointer,Func_DeleteTaskEnvironment);
 397              		.loc 1 120 0
 398 019e 0220     		movs	r0, #2
 399 01a0 0421     		movs	r1, #4
 400 01a2 FFF7FEFF 		bl	OS_SET_SW_BUG
 401              	.L15:
 121:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
 122:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** 
 123:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** }
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccNxMZmg.s 			page 10


 402              		.loc 1 123 0
 403 01a6 0837     		adds	r7, r7, #8
 404              		.cfi_def_cfa_offset 8
 405 01a8 BD46     		mov	sp, r7
 406              		.cfi_def_cfa_register 13
 407              		@ sp needed
 408 01aa 80BD     		pop	{r7, pc}
 409              		.cfi_endproc
 410              	.LFE5:
 412              		.align	2
 413              		.global	OS_Task_CreateTaskEnvironment
 414              		.thumb
 415              		.thumb_func
 417              	OS_Task_CreateTaskEnvironment:
 418              	.LFB6:
 124:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** task_t* OS_Task_CreateTaskEnvironment(void)
 125:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** {
 419              		.loc 1 125 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 8
 422              		@ frame_needed = 1, uses_anonymous_args = 0
 423 01ac 80B5     		push	{r7, lr}
 424              		.cfi_def_cfa_offset 8
 425              		.cfi_offset 7, -8
 426              		.cfi_offset 14, -4
 427 01ae 82B0     		sub	sp, sp, #8
 428              		.cfi_def_cfa_offset 16
 429 01b0 00AF     		add	r7, sp, #0
 430              		.cfi_def_cfa_register 7
 126:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    task_t* task = 0; 
 431              		.loc 1 126 0
 432 01b2 0023     		movs	r3, #0
 433 01b4 7B60     		str	r3, [r7, #4]
 127:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    task = (task_t*) os_malloc(sizeof(task_t));/* only possible in case of heap used */
 434              		.loc 1 127 0
 435 01b6 8420     		movs	r0, #132
 436 01b8 FFF7FEFF 		bl	os_malloc
 437 01bc 7860     		str	r0, [r7, #4]
 128:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    if(task == 0)
 438              		.loc 1 128 0
 439 01be 7B68     		ldr	r3, [r7, #4]
 440 01c0 002B     		cmp	r3, #0
 441 01c2 03D1     		bne	.L19
 129:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {  
 130:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       OS_SET_SW_BUG(os_bug_null_pointer,Func_CreateTaskEnvironment);
 442              		.loc 1 130 0
 443 01c4 0220     		movs	r0, #2
 444 01c6 0321     		movs	r1, #3
 445 01c8 FFF7FEFF 		bl	OS_SET_SW_BUG
 446              	.L19:
 131:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
 132:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    return task;
 447              		.loc 1 132 0
 448 01cc 7B68     		ldr	r3, [r7, #4]
 133:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** }
 449              		.loc 1 133 0
 450 01ce 1846     		mov	r0, r3
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccNxMZmg.s 			page 11


 451 01d0 0837     		adds	r7, r7, #8
 452              		.cfi_def_cfa_offset 8
 453 01d2 BD46     		mov	sp, r7
 454              		.cfi_def_cfa_register 13
 455              		@ sp needed
 456 01d4 80BD     		pop	{r7, pc}
 457              		.cfi_endproc
 458              	.LFE6:
 460              	.Letext0:
 461              		.file 2 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_base_types.h"
 462              		.file 3 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_common.h"
 463              		.file 4 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_task_common.h"
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccNxMZmg.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 os_task_common.c
                            *COM*:00000004 REGISTER_R0
                            *COM*:00000004 REGISTER_R1
                            *COM*:00000004 REGISTER_R2
                            *COM*:00000004 REGISTER_R3
                            *COM*:00000014 TASK_PTR
C:\Users\PRESID~1\AppData\Local\Temp\ccNxMZmg.s:23     .text:00000000 $t
C:\Users\PRESID~1\AppData\Local\Temp\ccNxMZmg.s:28     .text:00000000 OS_TASK_SAVETASK_ENVIRONMENT
C:\Users\PRESID~1\AppData\Local\Temp\ccNxMZmg.s:87     .text:00000040 OS_TASK_RESTORETASK_ENVIRONMENT
C:\Users\PRESID~1\AppData\Local\Temp\ccNxMZmg.s:136    .text:00000070 OS_TASK_RESTORE_SYSTEM_STACK
C:\Users\PRESID~1\AppData\Local\Temp\ccNxMZmg.s:169    .text:00000084 OS_TASK_SAVE_SYSTEM_STACK
C:\Users\PRESID~1\AppData\Local\Temp\ccNxMZmg.s:202    .text:00000098 OS_Task_InitTaskEnvironment
C:\Users\PRESID~1\AppData\Local\Temp\ccNxMZmg.s:357    .text:00000178 $d
C:\Users\PRESID~1\AppData\Local\Temp\ccNxMZmg.s:361    .text:0000017c $t
C:\Users\PRESID~1\AppData\Local\Temp\ccNxMZmg.s:366    .text:0000017c OS_Task_DeleteTaskEnvironment
C:\Users\PRESID~1\AppData\Local\Temp\ccNxMZmg.s:417    .text:000001ac OS_Task_CreateTaskEnvironment
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.718a663455c795daf5c6dd176ef70bbe
                           .group:00000000 wm4.os_base_types.h.2.f3c0267f175f5cbacca6b71710665a02
                           .group:00000000 wm4.os_common.h.2.d75289bcbcba9f0e2c2ffeda9394ea88
                           .group:00000000 wm4.os_stack.h.2.19e5f67d3b2f1e569581f0c055512986
                           .group:00000000 wm4.os_heap.h.2.89074aae455d2462b5952479e3530dd1
                           .group:00000000 wm4.os_task_config.h.2.7cfaa082f19f6144d85c64ce1f04b914
                           .group:00000000 wm4.os_task_common.h.92.310ae0de7be5874c80e3c1d4bf919b37
                           .group:00000000 wm4.os_task_scheduler.h.2.125feba674fa85672711aed1ca8ea199

UNDEFINED SYMBOLS
LLF_SAVE_TASK_STACK
LLF_SAVE_REGISTERS
OS_SET_SW_BUG
LLF_RESTORE_TASK_STACK
LLF_RESTORE_REGISTERS
LLF_RESTORE_SYSTEM_STACK
LLF_SAVE_SYSTEM_STACK
os_free
os_malloc
