ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cco3N5OY.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"os_task_common.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.comm	REGISTER_R0,4,4
  16              		.comm	REGISTER_R1,4,4
  17              		.comm	REGISTER_R2,4,4
  18              		.comm	REGISTER_R3,4,4
  19              		.comm	TASK_PTR,20,4
  20              		.align	1
  21              		.global	OS_TASK_SAVETASK_ENVIRONMENT
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu softvfp
  27              	OS_TASK_SAVETASK_ENVIRONMENT:
  28              	.LFB0:
  29              		.file 1 "E:\\NeuOrga\\Programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_task_common.c"
   1:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** #include "os_firstinc.h"
   2:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** #include "os_task_common.h"
   3:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** #include "os_task_scheduler.h"
   4:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** #include "os_heap.h"
   5:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** 
   6:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** /* Create and delete the task environment is not supported, 
   7:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    because we do not allow dynamic RAM allocation for task environment.
   8:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    
   9:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    
  10:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** */
  11:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** void* REGISTER_R0;
  12:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** void* REGISTER_R1;
  13:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** void* REGISTER_R2;
  14:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** void* REGISTER_R3;
  15:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** task_t* TASK_PTR[MAX_RUN_QUEUE_SIZE];
  16:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** 
  17:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** void OS_TASK_SAVETASK_ENVIRONMENT(task_t* task)
  18:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** {
  30              		.loc 1 18 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 1, uses_anonymous_args = 0
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cco3N5OY.s 			page 2


  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
  19:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    if(task != 0)
  43              		.loc 1 19 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 002B     		cmp	r3, #0
  46 000c 0FD0     		beq	.L2
  20:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {
  21:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       /*
  22:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       http://www.ibiblio.org/gferg/ldp/GCC-Inline-Assembly-HOWTO.html#s2
  23:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       x86: mov ... esp
  24:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       */
  25:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       LLF_SAVE_TASK_STACK(task->pStackPointer);
  47              		.loc 1 25 0
  48 000e 7B68     		ldr	r3, [r7, #4]
  49 0010 1B6F     		ldr	r3, [r3, #112]
  50 0012 1846     		mov	r0, r3
  51 0014 FFF7FEFF 		bl	LLF_SAVE_TASK_STACK
  26:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    #if(CFG_PROCESSOR == cMCU_X86)
  27:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       LLF_SAVE_REGISTERS(task->EAX,task->EBX,task->ECX,task->EDX);
  28:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    #else
  29:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       LLF_SAVE_REGISTERS(task->r0,task->r1,task->r2,task->r3);
  52              		.loc 1 29 0
  53 0018 7B68     		ldr	r3, [r7, #4]
  54 001a D86B     		ldr	r0, [r3, #60]
  55 001c 7B68     		ldr	r3, [r7, #4]
  56 001e 196C     		ldr	r1, [r3, #64]
  57 0020 7B68     		ldr	r3, [r7, #4]
  58 0022 5A6C     		ldr	r2, [r3, #68]
  59 0024 7B68     		ldr	r3, [r7, #4]
  60 0026 9B6C     		ldr	r3, [r3, #72]
  61 0028 FFF7FEFF 		bl	LLF_SAVE_REGISTERS
  30:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    #endif
  31:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
  32:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    else
  33:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {
  34:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       OS_SET_SW_BUG(os_bug_null_pointer,Func_SaveTaskEnvironment);
  35:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
  36:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    return;
  62              		.loc 1 36 0
  63 002c 04E0     		b	.L1
  64              	.L2:
  34:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
  65              		.loc 1 34 0
  66 002e 0121     		movs	r1, #1
  67 0030 0220     		movs	r0, #2
  68 0032 FFF7FEFF 		bl	OS_SET_SW_BUG
  69              		.loc 1 36 0
  70 0036 00BF     		nop
  71              	.L1:
  37:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** }
  72              		.loc 1 37 0
  73 0038 0837     		adds	r7, r7, #8
  74              		.cfi_def_cfa_offset 8
  75 003a BD46     		mov	sp, r7
  76              		.cfi_def_cfa_register 13
  77              		@ sp needed
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cco3N5OY.s 			page 3


  78 003c 80BD     		pop	{r7, pc}
  79              		.cfi_endproc
  80              	.LFE0:
  82              		.align	1
  83              		.global	OS_TASK_RESTORETASK_ENVIRONMENT
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu softvfp
  89              	OS_TASK_RESTORETASK_ENVIRONMENT:
  90              	.LFB1:
  38:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** 
  39:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** void OS_TASK_RESTORETASK_ENVIRONMENT(task_t* task)
  40:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** {
  91              		.loc 1 40 0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 8
  94              		@ frame_needed = 1, uses_anonymous_args = 0
  95 003e 80B5     		push	{r7, lr}
  96              		.cfi_def_cfa_offset 8
  97              		.cfi_offset 7, -8
  98              		.cfi_offset 14, -4
  99 0040 82B0     		sub	sp, sp, #8
 100              		.cfi_def_cfa_offset 16
 101 0042 00AF     		add	r7, sp, #0
 102              		.cfi_def_cfa_register 7
 103 0044 7860     		str	r0, [r7, #4]
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    if(task!=0)
 104              		.loc 1 41 0
 105 0046 7B68     		ldr	r3, [r7, #4]
 106 0048 002B     		cmp	r3, #0
 107 004a 08D0     		beq	.L6
  42:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {
  43:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       LLF_RESTORE_TASK_STACK(task->pStackPointer);
 108              		.loc 1 43 0
 109 004c 7B68     		ldr	r3, [r7, #4]
 110 004e 1B6F     		ldr	r3, [r3, #112]
 111 0050 1846     		mov	r0, r3
 112 0052 FFF7FEFF 		bl	LLF_RESTORE_TASK_STACK
  44:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       LLF_RESTORE_REGISTERS(task);
 113              		.loc 1 44 0
 114 0056 7868     		ldr	r0, [r7, #4]
 115 0058 FFF7FEFF 		bl	LLF_RESTORE_REGISTERS
  45:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
  46:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    else
  47:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {
  48:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       OS_SET_SW_BUG(os_bug_null_pointer,Func_RestoreTaskEnvironment);
  49:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
  50:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** }
 116              		.loc 1 50 0
 117 005c 03E0     		b	.L8
 118              	.L6:
  48:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
 119              		.loc 1 48 0
 120 005e 0221     		movs	r1, #2
 121 0060 0220     		movs	r0, #2
 122 0062 FFF7FEFF 		bl	OS_SET_SW_BUG
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cco3N5OY.s 			page 4


 123              	.L8:
 124              		.loc 1 50 0
 125 0066 00BF     		nop
 126 0068 0837     		adds	r7, r7, #8
 127              		.cfi_def_cfa_offset 8
 128 006a BD46     		mov	sp, r7
 129              		.cfi_def_cfa_register 13
 130              		@ sp needed
 131 006c 80BD     		pop	{r7, pc}
 132              		.cfi_endproc
 133              	.LFE1:
 135              		.align	1
 136              		.global	OS_TASK_RESTORE_SYSTEM_STACK
 137              		.syntax unified
 138              		.thumb
 139              		.thumb_func
 140              		.fpu softvfp
 142              	OS_TASK_RESTORE_SYSTEM_STACK:
 143              	.LFB2:
  51:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** void OS_TASK_RESTORE_SYSTEM_STACK(uint8* system_stack_ptr)
  52:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** {
 144              		.loc 1 52 0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 8
 147              		@ frame_needed = 1, uses_anonymous_args = 0
 148 006e 80B5     		push	{r7, lr}
 149              		.cfi_def_cfa_offset 8
 150              		.cfi_offset 7, -8
 151              		.cfi_offset 14, -4
 152 0070 82B0     		sub	sp, sp, #8
 153              		.cfi_def_cfa_offset 16
 154 0072 00AF     		add	r7, sp, #0
 155              		.cfi_def_cfa_register 7
 156 0074 7860     		str	r0, [r7, #4]
  53:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    LLF_RESTORE_SYSTEM_STACK(system_stack_ptr);
 157              		.loc 1 53 0
 158 0076 7868     		ldr	r0, [r7, #4]
 159 0078 FFF7FEFF 		bl	LLF_RESTORE_SYSTEM_STACK
  54:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** }
 160              		.loc 1 54 0
 161 007c 00BF     		nop
 162 007e 0837     		adds	r7, r7, #8
 163              		.cfi_def_cfa_offset 8
 164 0080 BD46     		mov	sp, r7
 165              		.cfi_def_cfa_register 13
 166              		@ sp needed
 167 0082 80BD     		pop	{r7, pc}
 168              		.cfi_endproc
 169              	.LFE2:
 171              		.align	1
 172              		.global	OS_TASK_SAVE_SYSTEM_STACK
 173              		.syntax unified
 174              		.thumb
 175              		.thumb_func
 176              		.fpu softvfp
 178              	OS_TASK_SAVE_SYSTEM_STACK:
 179              	.LFB3:
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cco3N5OY.s 			page 5


  55:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** void OS_TASK_SAVE_SYSTEM_STACK(uint8* system_stack_ptr)
  56:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** {
 180              		.loc 1 56 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 8
 183              		@ frame_needed = 1, uses_anonymous_args = 0
 184 0084 80B5     		push	{r7, lr}
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 7, -8
 187              		.cfi_offset 14, -4
 188 0086 82B0     		sub	sp, sp, #8
 189              		.cfi_def_cfa_offset 16
 190 0088 00AF     		add	r7, sp, #0
 191              		.cfi_def_cfa_register 7
 192 008a 7860     		str	r0, [r7, #4]
  57:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    LLF_SAVE_SYSTEM_STACK(system_stack_ptr);
 193              		.loc 1 57 0
 194 008c 7868     		ldr	r0, [r7, #4]
 195 008e FFF7FEFF 		bl	LLF_SAVE_SYSTEM_STACK
  58:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** }
 196              		.loc 1 58 0
 197 0092 00BF     		nop
 198 0094 0837     		adds	r7, r7, #8
 199              		.cfi_def_cfa_offset 8
 200 0096 BD46     		mov	sp, r7
 201              		.cfi_def_cfa_register 13
 202              		@ sp needed
 203 0098 80BD     		pop	{r7, pc}
 204              		.cfi_endproc
 205              	.LFE3:
 207              		.align	1
 208              		.global	OS_Task_InitTaskEnvironment
 209              		.syntax unified
 210              		.thumb
 211              		.thumb_func
 212              		.fpu softvfp
 214              	OS_Task_InitTaskEnvironment:
 215              	.LFB4:
  59:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** void OS_Task_InitTaskEnvironment(task_t* task)
  60:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** {
 216              		.loc 1 60 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 8
 219              		@ frame_needed = 1, uses_anonymous_args = 0
 220 009a 80B5     		push	{r7, lr}
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 7, -8
 223              		.cfi_offset 14, -4
 224 009c 82B0     		sub	sp, sp, #8
 225              		.cfi_def_cfa_offset 16
 226 009e 00AF     		add	r7, sp, #0
 227              		.cfi_def_cfa_register 7
 228 00a0 7860     		str	r0, [r7, #4]
  61:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    if(task != 0)
 229              		.loc 1 61 0
 230 00a2 7B68     		ldr	r3, [r7, #4]
 231 00a4 002B     		cmp	r3, #0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cco3N5OY.s 			page 6


 232 00a6 60D0     		beq	.L12
  62:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {
  63:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       /* general*/
  64:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->active                = False;
 233              		.loc 1 64 0
 234 00a8 7A68     		ldr	r2, [r7, #4]
 235 00aa 1378     		ldrb	r3, [r2]
 236 00ac 6FF30003 		bfc	r3, #0, #1
 237 00b0 1370     		strb	r3, [r2]
  65:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       /* general purpose registers */
  66:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    #if(CFG_PROCESSOR == cMCU_X86)
  67:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->EAX                             = (unsigned_int32_t)       0;
  68:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->EBX                             = (unsigned_int32_t)       0;
  69:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->ECX                             = (unsigned_int32_t)       0;
  70:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->EDX                             = (unsigned_int32_t)       0;
  71:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    #else
  72:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r0                             = (unsigned_int32_t)       0;
 238              		.loc 1 72 0
 239 00b2 7B68     		ldr	r3, [r7, #4]
 240 00b4 0022     		movs	r2, #0
 241 00b6 DA63     		str	r2, [r3, #60]
  73:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r1                             = (unsigned_int32_t)       0;
 242              		.loc 1 73 0
 243 00b8 7B68     		ldr	r3, [r7, #4]
 244 00ba 0022     		movs	r2, #0
 245 00bc 1A64     		str	r2, [r3, #64]
  74:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r2                             = (unsigned_int32_t)       0;
 246              		.loc 1 74 0
 247 00be 7B68     		ldr	r3, [r7, #4]
 248 00c0 0022     		movs	r2, #0
 249 00c2 5A64     		str	r2, [r3, #68]
  75:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r3                             = (unsigned_int32_t)       0;
 250              		.loc 1 75 0
 251 00c4 7B68     		ldr	r3, [r7, #4]
 252 00c6 0022     		movs	r2, #0
 253 00c8 9A64     		str	r2, [r3, #72]
  76:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r4                             = (unsigned_int32_t)       0;
 254              		.loc 1 76 0
 255 00ca 7B68     		ldr	r3, [r7, #4]
 256 00cc 0022     		movs	r2, #0
 257 00ce DA64     		str	r2, [r3, #76]
  77:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r5                             = (unsigned_int32_t)       0;
 258              		.loc 1 77 0
 259 00d0 7B68     		ldr	r3, [r7, #4]
 260 00d2 0022     		movs	r2, #0
 261 00d4 1A65     		str	r2, [r3, #80]
  78:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r6                             = (unsigned_int32_t)       0;   
 262              		.loc 1 78 0
 263 00d6 7B68     		ldr	r3, [r7, #4]
 264 00d8 0022     		movs	r2, #0
 265 00da 5A65     		str	r2, [r3, #84]
  79:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r7                             = (unsigned_int32_t)       0;
 266              		.loc 1 79 0
 267 00dc 7B68     		ldr	r3, [r7, #4]
 268 00de 0022     		movs	r2, #0
 269 00e0 9A65     		str	r2, [r3, #88]
  80:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r8                             = (unsigned_int32_t)       0;
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cco3N5OY.s 			page 7


 270              		.loc 1 80 0
 271 00e2 7B68     		ldr	r3, [r7, #4]
 272 00e4 0022     		movs	r2, #0
 273 00e6 DA65     		str	r2, [r3, #92]
  81:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r9                             = (unsigned_int32_t)       0;
 274              		.loc 1 81 0
 275 00e8 7B68     		ldr	r3, [r7, #4]
 276 00ea 0022     		movs	r2, #0
 277 00ec 1A66     		str	r2, [r3, #96]
  82:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r10                             = (unsigned_int32_t)       0;
 278              		.loc 1 82 0
 279 00ee 7B68     		ldr	r3, [r7, #4]
 280 00f0 0022     		movs	r2, #0
 281 00f2 5A66     		str	r2, [r3, #100]
  83:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r11                             = (unsigned_int32_t)       0;
 282              		.loc 1 83 0
 283 00f4 7B68     		ldr	r3, [r7, #4]
 284 00f6 0022     		movs	r2, #0
 285 00f8 9A66     		str	r2, [r3, #104]
  84:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r12                             = (unsigned_int32_t)       0;  
 286              		.loc 1 84 0
 287 00fa 7B68     		ldr	r3, [r7, #4]
 288 00fc 0022     		movs	r2, #0
 289 00fe DA66     		str	r2, [r3, #108]
  85:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    #endif
  86:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       /* task scheduling */
  87:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->WaitActUntil                     = (unsigned_char_t)         0;
 290              		.loc 1 87 0
 291 0100 7B68     		ldr	r3, [r7, #4]
 292 0102 0022     		movs	r2, #0
 293 0104 9A60     		str	r2, [r3, #8]
  88:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->wait_time                        = (unsigned_int32_t)        0;
 294              		.loc 1 88 0
 295 0106 7B68     		ldr	r3, [r7, #4]
 296 0108 0022     		movs	r2, #0
 297 010a DA60     		str	r2, [r3, #12]
  89:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->TimeToPrioInc                    = (unsigned_int32_t)        0;
 298              		.loc 1 89 0
 299 010c 7B68     		ldr	r3, [r7, #4]
 300 010e 0022     		movs	r2, #0
 301 0110 1A61     		str	r2, [r3, #16]
  90:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->overwaittime_per_prio_inc_step   = (unsigned_int32_t)        1;/* has to be >=1 */
 302              		.loc 1 90 0
 303 0112 7B68     		ldr	r3, [r7, #4]
 304 0114 0122     		movs	r2, #1
 305 0116 5A61     		str	r2, [r3, #20]
  91:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->max_allowed_wait_time            = (unsigned_int32_t)        100000;
 306              		.loc 1 91 0
 307 0118 7B68     		ldr	r3, [r7, #4]
 308 011a 184A     		ldr	r2, .L15
 309 011c 9A61     		str	r2, [r3, #24]
  92:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->exe_time                         = (unsigned_int32_t)        0;
 310              		.loc 1 92 0
 311 011e 7B68     		ldr	r3, [r7, #4]
 312 0120 0022     		movs	r2, #0
 313 0122 DA61     		str	r2, [r3, #28]
  93:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->current_prio                     = (unsigned_char_t)         0;
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cco3N5OY.s 			page 8


 314              		.loc 1 93 0
 315 0124 7B68     		ldr	r3, [r7, #4]
 316 0126 0022     		movs	r2, #0
 317 0128 83F82420 		strb	r2, [r3, #36]
  94:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->default_prio                     = (unsigned_char_t)         0;
 318              		.loc 1 94 0
 319 012c 7B68     		ldr	r3, [r7, #4]
 320 012e 0022     		movs	r2, #0
 321 0130 83F82520 		strb	r2, [r3, #37]
  95:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** 
  96:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       /* task management */
  97:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->state_request                    =                           0;
 322              		.loc 1 97 0
 323 0134 7B68     		ldr	r3, [r7, #4]
 324 0136 0022     		movs	r2, #0
 325 0138 1A63     		str	r2, [r3, #48]
  98:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->task_state                       =                           Task_unspecified;
 326              		.loc 1 98 0
 327 013a 7B68     		ldr	r3, [r7, #4]
 328 013c 0022     		movs	r2, #0
 329 013e 83F83420 		strb	r2, [r3, #52]
  99:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->task_queued                      =                           False;
 330              		.loc 1 99 0
 331 0142 7A68     		ldr	r2, [r7, #4]
 332 0144 1378     		ldrb	r3, [r2]
 333 0146 6FF34103 		bfc	r3, #1, #1
 334 014a 1370     		strb	r3, [r2]
 100:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->FREE                             =                           0;
 335              		.loc 1 100 0
 336 014c 7A68     		ldr	r2, [r7, #4]
 337 014e 1368     		ldr	r3, [r2]
 338 0150 6FF3DF03 		bfc	r3, #3, #29
 339 0154 1360     		str	r3, [r2]
 101:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->NrOfInsAllowed                   = (unsigned_char_t)         0;
 340              		.loc 1 101 0
 341 0156 7B68     		ldr	r3, [r7, #4]
 342 0158 0022     		movs	r2, #0
 343 015a 1A71     		strb	r2, [r3, #4]
 102:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->NrOfInsActivated                 = (unsigned_char_t)         0;
 344              		.loc 1 102 0
 345 015c 7B68     		ldr	r3, [r7, #4]
 346 015e 0022     		movs	r2, #0
 347 0160 5A71     		strb	r2, [r3, #5]
 103:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->fp                               = (func_p_t)                0;
 348              		.loc 1 103 0
 349 0162 7B68     		ldr	r3, [r7, #4]
 350 0164 0022     		movs	r2, #0
 351 0166 DA62     		str	r2, [r3, #44]
 104:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** 
 105:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
 106:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    else
 107:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {
 108:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       OS_SET_SW_BUG(os_bug_null_pointer,Func_CreateTaskEnvironment);
 109:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
 110:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** }
 352              		.loc 1 110 0
 353 0168 03E0     		b	.L14
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cco3N5OY.s 			page 9


 354              	.L12:
 108:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
 355              		.loc 1 108 0
 356 016a 0321     		movs	r1, #3
 357 016c 0220     		movs	r0, #2
 358 016e FFF7FEFF 		bl	OS_SET_SW_BUG
 359              	.L14:
 360              		.loc 1 110 0
 361 0172 00BF     		nop
 362 0174 0837     		adds	r7, r7, #8
 363              		.cfi_def_cfa_offset 8
 364 0176 BD46     		mov	sp, r7
 365              		.cfi_def_cfa_register 13
 366              		@ sp needed
 367 0178 80BD     		pop	{r7, pc}
 368              	.L16:
 369 017a 00BF     		.align	2
 370              	.L15:
 371 017c A0860100 		.word	100000
 372              		.cfi_endproc
 373              	.LFE4:
 375              		.align	1
 376              		.global	OS_Task_DeleteTaskEnvironment
 377              		.syntax unified
 378              		.thumb
 379              		.thumb_func
 380              		.fpu softvfp
 382              	OS_Task_DeleteTaskEnvironment:
 383              	.LFB5:
 111:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** #if(USE_STATIC_CREATED_TASKS != False)
 112:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** void OS_Task_DeleteTaskEnvironment(task_t* task)
 113:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** {
 384              		.loc 1 113 0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 8
 387              		@ frame_needed = 1, uses_anonymous_args = 0
 388 0180 80B5     		push	{r7, lr}
 389              		.cfi_def_cfa_offset 8
 390              		.cfi_offset 7, -8
 391              		.cfi_offset 14, -4
 392 0182 82B0     		sub	sp, sp, #8
 393              		.cfi_def_cfa_offset 16
 394 0184 00AF     		add	r7, sp, #0
 395              		.cfi_def_cfa_register 7
 396 0186 7860     		str	r0, [r7, #4]
 114:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    if(task!=0 && task->pStackPointerByMalloc!=0)
 397              		.loc 1 114 0
 398 0188 7B68     		ldr	r3, [r7, #4]
 399 018a 002B     		cmp	r3, #0
 400 018c 09D0     		beq	.L18
 401              		.loc 1 114 0 is_stmt 0 discriminator 1
 402 018e 7B68     		ldr	r3, [r7, #4]
 403 0190 5B6F     		ldr	r3, [r3, #116]
 404 0192 002B     		cmp	r3, #0
 405 0194 05D0     		beq	.L18
 115:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {
 116:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       os_free(task->pStackPointerByMalloc);/* only possible in case of heap used */
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cco3N5OY.s 			page 10


 406              		.loc 1 116 0 is_stmt 1
 407 0196 7B68     		ldr	r3, [r7, #4]
 408 0198 5B6F     		ldr	r3, [r3, #116]
 409 019a 1846     		mov	r0, r3
 410 019c FFF7FEFF 		bl	os_free
 411 01a0 03E0     		b	.L19
 412              	.L18:
 117:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
 118:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    else
 119:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {
 120:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       OS_SET_SW_BUG(os_bug_null_pointer,Func_DeleteTaskEnvironment);
 413              		.loc 1 120 0
 414 01a2 0421     		movs	r1, #4
 415 01a4 0220     		movs	r0, #2
 416 01a6 FFF7FEFF 		bl	OS_SET_SW_BUG
 417              	.L19:
 121:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
 122:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** 
 123:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** }
 418              		.loc 1 123 0
 419 01aa 00BF     		nop
 420 01ac 0837     		adds	r7, r7, #8
 421              		.cfi_def_cfa_offset 8
 422 01ae BD46     		mov	sp, r7
 423              		.cfi_def_cfa_register 13
 424              		@ sp needed
 425 01b0 80BD     		pop	{r7, pc}
 426              		.cfi_endproc
 427              	.LFE5:
 429              		.align	1
 430              		.global	OS_Task_CreateTaskEnvironment
 431              		.syntax unified
 432              		.thumb
 433              		.thumb_func
 434              		.fpu softvfp
 436              	OS_Task_CreateTaskEnvironment:
 437              	.LFB6:
 124:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** task_t* OS_Task_CreateTaskEnvironment(void)
 125:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** {
 438              		.loc 1 125 0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 8
 441              		@ frame_needed = 1, uses_anonymous_args = 0
 442 01b2 80B5     		push	{r7, lr}
 443              		.cfi_def_cfa_offset 8
 444              		.cfi_offset 7, -8
 445              		.cfi_offset 14, -4
 446 01b4 82B0     		sub	sp, sp, #8
 447              		.cfi_def_cfa_offset 16
 448 01b6 00AF     		add	r7, sp, #0
 449              		.cfi_def_cfa_register 7
 126:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    task_t* task = 0; 
 450              		.loc 1 126 0
 451 01b8 0023     		movs	r3, #0
 452 01ba 7B60     		str	r3, [r7, #4]
 127:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    task = (task_t*) os_malloc(sizeof(task_t));/* only possible in case of heap used */
 453              		.loc 1 127 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cco3N5OY.s 			page 11


 454 01bc 8820     		movs	r0, #136
 455 01be FFF7FEFF 		bl	os_malloc
 456 01c2 7860     		str	r0, [r7, #4]
 128:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    if(task == 0)
 457              		.loc 1 128 0
 458 01c4 7B68     		ldr	r3, [r7, #4]
 459 01c6 002B     		cmp	r3, #0
 460 01c8 03D1     		bne	.L21
 129:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {  
 130:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       OS_SET_SW_BUG(os_bug_null_pointer,Func_CreateTaskEnvironment);
 461              		.loc 1 130 0
 462 01ca 0321     		movs	r1, #3
 463 01cc 0220     		movs	r0, #2
 464 01ce FFF7FEFF 		bl	OS_SET_SW_BUG
 465              	.L21:
 131:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
 132:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    return task;
 466              		.loc 1 132 0
 467 01d2 7B68     		ldr	r3, [r7, #4]
 133:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** }
 468              		.loc 1 133 0
 469 01d4 1846     		mov	r0, r3
 470 01d6 0837     		adds	r7, r7, #8
 471              		.cfi_def_cfa_offset 8
 472 01d8 BD46     		mov	sp, r7
 473              		.cfi_def_cfa_register 13
 474              		@ sp needed
 475 01da 80BD     		pop	{r7, pc}
 476              		.cfi_endproc
 477              	.LFE6:
 479              	.Letext0:
 480              		.file 2 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_base_types.h"
 481              		.file 3 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_common.h"
 482              		.file 4 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_ram.h"
 483              		.file 5 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_task_common.h"
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cco3N5OY.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 os_task_common.c
                            *COM*:00000004 REGISTER_R0
                            *COM*:00000004 REGISTER_R1
                            *COM*:00000004 REGISTER_R2
                            *COM*:00000004 REGISTER_R3
                            *COM*:00000014 TASK_PTR
C:\Users\PRESID~1\AppData\Local\Temp\cco3N5OY.s:20     .text:00000000 $t
C:\Users\PRESID~1\AppData\Local\Temp\cco3N5OY.s:27     .text:00000000 OS_TASK_SAVETASK_ENVIRONMENT
C:\Users\PRESID~1\AppData\Local\Temp\cco3N5OY.s:89     .text:0000003e OS_TASK_RESTORETASK_ENVIRONMENT
C:\Users\PRESID~1\AppData\Local\Temp\cco3N5OY.s:142    .text:0000006e OS_TASK_RESTORE_SYSTEM_STACK
C:\Users\PRESID~1\AppData\Local\Temp\cco3N5OY.s:178    .text:00000084 OS_TASK_SAVE_SYSTEM_STACK
C:\Users\PRESID~1\AppData\Local\Temp\cco3N5OY.s:214    .text:0000009a OS_Task_InitTaskEnvironment
C:\Users\PRESID~1\AppData\Local\Temp\cco3N5OY.s:371    .text:0000017c $d
C:\Users\PRESID~1\AppData\Local\Temp\cco3N5OY.s:375    .text:00000180 $t
C:\Users\PRESID~1\AppData\Local\Temp\cco3N5OY.s:382    .text:00000180 OS_Task_DeleteTaskEnvironment
C:\Users\PRESID~1\AppData\Local\Temp\cco3N5OY.s:436    .text:000001b2 OS_Task_CreateTaskEnvironment
                           .group:00000000 wm4.0.aa75c0738974a382baf71fbad152c229
                           .group:00000000 wm4.os_base_types.h.2.f3c0267f175f5cbacca6b71710665a02
                           .group:00000000 wm4.os_common.h.2.dc27b9b2168d1784dc01b241752b07b2
                           .group:00000000 wm4.os_stack.h.2.19e5f67d3b2f1e569581f0c055512986
                           .group:00000000 wm4.os_heap.h.2.89074aae455d2462b5952479e3530dd1
                           .group:00000000 wm4.os_main.h.2.1f66ae3841c27bd36097fa1d2e1fe6a7
                           .group:00000000 wm4.os_task_config.h.2.7cfaa082f19f6144d85c64ce1f04b914
                           .group:00000000 wm4.os_task_common.h.93.9db5c540899793a03f331176d195d033
                           .group:00000000 wm4.os_task_scheduler.h.2.125feba674fa85672711aed1ca8ea199

UNDEFINED SYMBOLS
LLF_SAVE_TASK_STACK
LLF_SAVE_REGISTERS
OS_SET_SW_BUG
LLF_RESTORE_TASK_STACK
LLF_RESTORE_REGISTERS
LLF_RESTORE_SYSTEM_STACK
LLF_SAVE_SYSTEM_STACK
os_free
os_malloc
