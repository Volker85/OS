ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccdQCqDC.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"os_task_common.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.comm	TASK_PTR,20,4
  16              		.align	1
  17              		.global	OS_TASK_SAVETASK_ENVIRONMENT
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	OS_TASK_SAVETASK_ENVIRONMENT:
  24              	.LFB0:
  25              		.file 1 "E:\\NeuOrga\\Programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_task_common.c"
   1:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** #include "os_firstinc.h"
   2:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** #include "os_task_common.h"
   3:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** #include "os_task_scheduler.h"
   4:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** #include "os_heap.h"
   5:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** 
   6:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** /* Create and delete the task environment is not supported, 
   7:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    because we do not allow dynamic RAM allocation for task environment.
   8:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    
   9:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    
  10:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** */
  11:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** 
  12:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** 
  13:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** task_t* TASK_PTR[MAX_RUN_QUEUE_SIZE];
  14:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** 
  15:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** void OS_TASK_SAVETASK_ENVIRONMENT(task_t* task)
  16:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** {
  26              		.loc 1 16 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 7, -8
  33              		.cfi_offset 14, -4
  34 0002 82B0     		sub	sp, sp, #8
  35              		.cfi_def_cfa_offset 16
  36 0004 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  38 0006 7860     		str	r0, [r7, #4]
  17:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    if(task != 0)
  39              		.loc 1 17 0
  40 0008 7B68     		ldr	r3, [r7, #4]
  41 000a 002B     		cmp	r3, #0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccdQCqDC.s 			page 2


  42 000c 0FD0     		beq	.L2
  18:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {
  19:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       /*
  20:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       http://www.ibiblio.org/gferg/ldp/GCC-Inline-Assembly-HOWTO.html#s2
  21:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       x86: mov ... esp
  22:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       */
  23:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       LLF_SAVE_TASK_STACK(task->pStackPointer);
  43              		.loc 1 23 0
  44 000e 7B68     		ldr	r3, [r7, #4]
  45 0010 1B6F     		ldr	r3, [r3, #112]
  46 0012 1846     		mov	r0, r3
  47 0014 FFF7FEFF 		bl	LLF_SAVE_TASK_STACK
  24:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    #if(CFG_PROCESSOR == cMCU_X86)
  25:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       LLF_SAVE_REGISTERS(task->EAX,task->EBX,task->ECX,task->EDX);
  26:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    #else
  27:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       LLF_SAVE_REGISTERS(task->r0,task->r1,task->r2,task->r3);
  48              		.loc 1 27 0
  49 0018 7B68     		ldr	r3, [r7, #4]
  50 001a D86B     		ldr	r0, [r3, #60]
  51 001c 7B68     		ldr	r3, [r7, #4]
  52 001e 196C     		ldr	r1, [r3, #64]
  53 0020 7B68     		ldr	r3, [r7, #4]
  54 0022 5A6C     		ldr	r2, [r3, #68]
  55 0024 7B68     		ldr	r3, [r7, #4]
  56 0026 9B6C     		ldr	r3, [r3, #72]
  57 0028 FFF7FEFF 		bl	LLF_SAVE_REGISTERS
  28:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    #endif
  29:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
  30:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    else
  31:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {
  32:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       OS_SET_SW_BUG(os_bug_null_pointer,Func_SaveTaskEnvironment);
  33:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
  34:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    return;
  58              		.loc 1 34 0
  59 002c 04E0     		b	.L1
  60              	.L2:
  32:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
  61              		.loc 1 32 0
  62 002e 0121     		movs	r1, #1
  63 0030 0220     		movs	r0, #2
  64 0032 FFF7FEFF 		bl	OS_SET_SW_BUG
  65              		.loc 1 34 0
  66 0036 00BF     		nop
  67              	.L1:
  35:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** }
  68              		.loc 1 35 0
  69 0038 0837     		adds	r7, r7, #8
  70              		.cfi_def_cfa_offset 8
  71 003a BD46     		mov	sp, r7
  72              		.cfi_def_cfa_register 13
  73              		@ sp needed
  74 003c 80BD     		pop	{r7, pc}
  75              		.cfi_endproc
  76              	.LFE0:
  78              		.align	1
  79              		.global	OS_TASK_RESTORETASK_ENVIRONMENT
  80              		.syntax unified
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccdQCqDC.s 			page 3


  81              		.thumb
  82              		.thumb_func
  83              		.fpu softvfp
  85              	OS_TASK_RESTORETASK_ENVIRONMENT:
  86              	.LFB1:
  36:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** 
  37:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** void OS_TASK_RESTORETASK_ENVIRONMENT(task_t* task)
  38:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** {
  87              		.loc 1 38 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 8
  90              		@ frame_needed = 1, uses_anonymous_args = 0
  91 003e 80B5     		push	{r7, lr}
  92              		.cfi_def_cfa_offset 8
  93              		.cfi_offset 7, -8
  94              		.cfi_offset 14, -4
  95 0040 82B0     		sub	sp, sp, #8
  96              		.cfi_def_cfa_offset 16
  97 0042 00AF     		add	r7, sp, #0
  98              		.cfi_def_cfa_register 7
  99 0044 7860     		str	r0, [r7, #4]
  39:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    if(task!=0)
 100              		.loc 1 39 0
 101 0046 7B68     		ldr	r3, [r7, #4]
 102 0048 002B     		cmp	r3, #0
 103 004a 08D0     		beq	.L6
  40:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       LLF_RESTORE_TASK_STACK(task->pStackPointer);
 104              		.loc 1 41 0
 105 004c 7B68     		ldr	r3, [r7, #4]
 106 004e 1B6F     		ldr	r3, [r3, #112]
 107 0050 1846     		mov	r0, r3
 108 0052 FFF7FEFF 		bl	LLF_RESTORE_TASK_STACK
  42:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       LLF_RESTORE_REGISTERS(task);
 109              		.loc 1 42 0
 110 0056 7868     		ldr	r0, [r7, #4]
 111 0058 FFF7FEFF 		bl	LLF_RESTORE_REGISTERS
  43:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
  44:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    else
  45:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {
  46:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       OS_SET_SW_BUG(os_bug_null_pointer,Func_RestoreTaskEnvironment);
  47:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
  48:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** }
 112              		.loc 1 48 0
 113 005c 03E0     		b	.L8
 114              	.L6:
  46:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
 115              		.loc 1 46 0
 116 005e 0221     		movs	r1, #2
 117 0060 0220     		movs	r0, #2
 118 0062 FFF7FEFF 		bl	OS_SET_SW_BUG
 119              	.L8:
 120              		.loc 1 48 0
 121 0066 00BF     		nop
 122 0068 0837     		adds	r7, r7, #8
 123              		.cfi_def_cfa_offset 8
 124 006a BD46     		mov	sp, r7
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccdQCqDC.s 			page 4


 125              		.cfi_def_cfa_register 13
 126              		@ sp needed
 127 006c 80BD     		pop	{r7, pc}
 128              		.cfi_endproc
 129              	.LFE1:
 131              		.align	1
 132              		.global	OS_TASK_RESTORE_SYSTEM_STACK
 133              		.syntax unified
 134              		.thumb
 135              		.thumb_func
 136              		.fpu softvfp
 138              	OS_TASK_RESTORE_SYSTEM_STACK:
 139              	.LFB2:
  49:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** void OS_TASK_RESTORE_SYSTEM_STACK(uint8* system_stack_ptr)
  50:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** {
 140              		.loc 1 50 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 8
 143              		@ frame_needed = 1, uses_anonymous_args = 0
 144 006e 80B5     		push	{r7, lr}
 145              		.cfi_def_cfa_offset 8
 146              		.cfi_offset 7, -8
 147              		.cfi_offset 14, -4
 148 0070 82B0     		sub	sp, sp, #8
 149              		.cfi_def_cfa_offset 16
 150 0072 00AF     		add	r7, sp, #0
 151              		.cfi_def_cfa_register 7
 152 0074 7860     		str	r0, [r7, #4]
  51:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    LLF_RESTORE_SYSTEM_STACK(system_stack_ptr);
 153              		.loc 1 51 0
 154 0076 7868     		ldr	r0, [r7, #4]
 155 0078 FFF7FEFF 		bl	LLF_RESTORE_SYSTEM_STACK
  52:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** }
 156              		.loc 1 52 0
 157 007c 00BF     		nop
 158 007e 0837     		adds	r7, r7, #8
 159              		.cfi_def_cfa_offset 8
 160 0080 BD46     		mov	sp, r7
 161              		.cfi_def_cfa_register 13
 162              		@ sp needed
 163 0082 80BD     		pop	{r7, pc}
 164              		.cfi_endproc
 165              	.LFE2:
 167              		.align	1
 168              		.global	OS_TASK_SAVE_SYSTEM_STACK
 169              		.syntax unified
 170              		.thumb
 171              		.thumb_func
 172              		.fpu softvfp
 174              	OS_TASK_SAVE_SYSTEM_STACK:
 175              	.LFB3:
  53:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** void OS_TASK_SAVE_SYSTEM_STACK(uint8* system_stack_ptr)
  54:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** {
 176              		.loc 1 54 0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 8
 179              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccdQCqDC.s 			page 5


 180 0084 80B5     		push	{r7, lr}
 181              		.cfi_def_cfa_offset 8
 182              		.cfi_offset 7, -8
 183              		.cfi_offset 14, -4
 184 0086 82B0     		sub	sp, sp, #8
 185              		.cfi_def_cfa_offset 16
 186 0088 00AF     		add	r7, sp, #0
 187              		.cfi_def_cfa_register 7
 188 008a 7860     		str	r0, [r7, #4]
  55:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    LLF_SAVE_SYSTEM_STACK(system_stack_ptr);
 189              		.loc 1 55 0
 190 008c 7868     		ldr	r0, [r7, #4]
 191 008e FFF7FEFF 		bl	LLF_SAVE_SYSTEM_STACK
  56:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** }
 192              		.loc 1 56 0
 193 0092 00BF     		nop
 194 0094 0837     		adds	r7, r7, #8
 195              		.cfi_def_cfa_offset 8
 196 0096 BD46     		mov	sp, r7
 197              		.cfi_def_cfa_register 13
 198              		@ sp needed
 199 0098 80BD     		pop	{r7, pc}
 200              		.cfi_endproc
 201              	.LFE3:
 203              		.align	1
 204              		.global	OS_Task_InitTaskEnvironment
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu softvfp
 210              	OS_Task_InitTaskEnvironment:
 211              	.LFB4:
  57:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** void OS_Task_InitTaskEnvironment(task_t* task)
  58:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** {
 212              		.loc 1 58 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 8
 215              		@ frame_needed = 1, uses_anonymous_args = 0
 216 009a 80B5     		push	{r7, lr}
 217              		.cfi_def_cfa_offset 8
 218              		.cfi_offset 7, -8
 219              		.cfi_offset 14, -4
 220 009c 82B0     		sub	sp, sp, #8
 221              		.cfi_def_cfa_offset 16
 222 009e 00AF     		add	r7, sp, #0
 223              		.cfi_def_cfa_register 7
 224 00a0 7860     		str	r0, [r7, #4]
  59:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    if(task != 0)
 225              		.loc 1 59 0
 226 00a2 7B68     		ldr	r3, [r7, #4]
 227 00a4 002B     		cmp	r3, #0
 228 00a6 60D0     		beq	.L12
  60:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {
  61:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       /* general*/
  62:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->active                = False;
 229              		.loc 1 62 0
 230 00a8 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccdQCqDC.s 			page 6


 231 00aa 1378     		ldrb	r3, [r2]
 232 00ac 6FF30003 		bfc	r3, #0, #1
 233 00b0 1370     		strb	r3, [r2]
  63:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       /* general purpose registers */
  64:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    #if(CFG_PROCESSOR == cMCU_X86)
  65:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->EAX                             = (unsigned_int32_t)       0;
  66:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->EBX                             = (unsigned_int32_t)       0;
  67:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->ECX                             = (unsigned_int32_t)       0;
  68:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->EDX                             = (unsigned_int32_t)       0;
  69:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    #else
  70:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r0                             = (unsigned_int32_t)       0;
 234              		.loc 1 70 0
 235 00b2 7B68     		ldr	r3, [r7, #4]
 236 00b4 0022     		movs	r2, #0
 237 00b6 DA63     		str	r2, [r3, #60]
  71:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r1                             = (unsigned_int32_t)       0;
 238              		.loc 1 71 0
 239 00b8 7B68     		ldr	r3, [r7, #4]
 240 00ba 0022     		movs	r2, #0
 241 00bc 1A64     		str	r2, [r3, #64]
  72:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r2                             = (unsigned_int32_t)       0;
 242              		.loc 1 72 0
 243 00be 7B68     		ldr	r3, [r7, #4]
 244 00c0 0022     		movs	r2, #0
 245 00c2 5A64     		str	r2, [r3, #68]
  73:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r3                             = (unsigned_int32_t)       0;
 246              		.loc 1 73 0
 247 00c4 7B68     		ldr	r3, [r7, #4]
 248 00c6 0022     		movs	r2, #0
 249 00c8 9A64     		str	r2, [r3, #72]
  74:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r4                             = (unsigned_int32_t)       0;
 250              		.loc 1 74 0
 251 00ca 7B68     		ldr	r3, [r7, #4]
 252 00cc 0022     		movs	r2, #0
 253 00ce DA64     		str	r2, [r3, #76]
  75:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r5                             = (unsigned_int32_t)       0;
 254              		.loc 1 75 0
 255 00d0 7B68     		ldr	r3, [r7, #4]
 256 00d2 0022     		movs	r2, #0
 257 00d4 1A65     		str	r2, [r3, #80]
  76:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r6                             = (unsigned_int32_t)       0;   
 258              		.loc 1 76 0
 259 00d6 7B68     		ldr	r3, [r7, #4]
 260 00d8 0022     		movs	r2, #0
 261 00da 5A65     		str	r2, [r3, #84]
  77:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r7                             = (unsigned_int32_t)       0;
 262              		.loc 1 77 0
 263 00dc 7B68     		ldr	r3, [r7, #4]
 264 00de 0022     		movs	r2, #0
 265 00e0 9A65     		str	r2, [r3, #88]
  78:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r8                             = (unsigned_int32_t)       0;
 266              		.loc 1 78 0
 267 00e2 7B68     		ldr	r3, [r7, #4]
 268 00e4 0022     		movs	r2, #0
 269 00e6 DA65     		str	r2, [r3, #92]
  79:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r9                             = (unsigned_int32_t)       0;
 270              		.loc 1 79 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccdQCqDC.s 			page 7


 271 00e8 7B68     		ldr	r3, [r7, #4]
 272 00ea 0022     		movs	r2, #0
 273 00ec 1A66     		str	r2, [r3, #96]
  80:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r10                             = (unsigned_int32_t)       0;
 274              		.loc 1 80 0
 275 00ee 7B68     		ldr	r3, [r7, #4]
 276 00f0 0022     		movs	r2, #0
 277 00f2 5A66     		str	r2, [r3, #100]
  81:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r11                             = (unsigned_int32_t)       0;
 278              		.loc 1 81 0
 279 00f4 7B68     		ldr	r3, [r7, #4]
 280 00f6 0022     		movs	r2, #0
 281 00f8 9A66     		str	r2, [r3, #104]
  82:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r12                             = (unsigned_int32_t)       0;  
 282              		.loc 1 82 0
 283 00fa 7B68     		ldr	r3, [r7, #4]
 284 00fc 0022     		movs	r2, #0
 285 00fe DA66     		str	r2, [r3, #108]
  83:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    #endif
  84:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       /* task scheduling */
  85:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->WaitActUntil                     = (unsigned_char_t)         0;
 286              		.loc 1 85 0
 287 0100 7B68     		ldr	r3, [r7, #4]
 288 0102 0022     		movs	r2, #0
 289 0104 9A60     		str	r2, [r3, #8]
  86:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->wait_time                        = (unsigned_int32_t)        0;
 290              		.loc 1 86 0
 291 0106 7B68     		ldr	r3, [r7, #4]
 292 0108 0022     		movs	r2, #0
 293 010a DA60     		str	r2, [r3, #12]
  87:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->TimeToPrioInc                    = (unsigned_int32_t)        5;
 294              		.loc 1 87 0
 295 010c 7B68     		ldr	r3, [r7, #4]
 296 010e 0522     		movs	r2, #5
 297 0110 1A61     		str	r2, [r3, #16]
  88:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->overwaittime_per_prio_inc_step   = (unsigned_int32_t)        1;/* has to be >=1 */
 298              		.loc 1 88 0
 299 0112 7B68     		ldr	r3, [r7, #4]
 300 0114 0122     		movs	r2, #1
 301 0116 5A61     		str	r2, [r3, #20]
  89:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->max_allowed_wait_time            = (unsigned_int32_t)        100000;
 302              		.loc 1 89 0
 303 0118 7B68     		ldr	r3, [r7, #4]
 304 011a 184A     		ldr	r2, .L15
 305 011c 9A61     		str	r2, [r3, #24]
  90:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->exe_time                         = (unsigned_int32_t)        0;
 306              		.loc 1 90 0
 307 011e 7B68     		ldr	r3, [r7, #4]
 308 0120 0022     		movs	r2, #0
 309 0122 DA61     		str	r2, [r3, #28]
  91:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->current_prio                     = (unsigned_char_t)         0;
 310              		.loc 1 91 0
 311 0124 7B68     		ldr	r3, [r7, #4]
 312 0126 0022     		movs	r2, #0
 313 0128 83F82420 		strb	r2, [r3, #36]
  92:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->default_prio                     = (unsigned_char_t)         0;/* the default prio for 
 314              		.loc 1 92 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccdQCqDC.s 			page 8


 315 012c 7B68     		ldr	r3, [r7, #4]
 316 012e 0022     		movs	r2, #0
 317 0130 83F82520 		strb	r2, [r3, #37]
  93:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** 
  94:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       /* task management */
  95:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->state_request                    =                           &task_state_request;
 318              		.loc 1 95 0
 319 0134 7B68     		ldr	r3, [r7, #4]
 320 0136 124A     		ldr	r2, .L15+4
 321 0138 1A63     		str	r2, [r3, #48]
  96:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->task_state                       =                           Task_unspecified;
 322              		.loc 1 96 0
 323 013a 7B68     		ldr	r3, [r7, #4]
 324 013c 0022     		movs	r2, #0
 325 013e 83F83420 		strb	r2, [r3, #52]
  97:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->task_queued                      =                           False;
 326              		.loc 1 97 0
 327 0142 7A68     		ldr	r2, [r7, #4]
 328 0144 1378     		ldrb	r3, [r2]
 329 0146 6FF34103 		bfc	r3, #1, #1
 330 014a 1370     		strb	r3, [r2]
  98:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->FREE                             =                           0;
 331              		.loc 1 98 0
 332 014c 7A68     		ldr	r2, [r7, #4]
 333 014e 1368     		ldr	r3, [r2]
 334 0150 6FF3DF03 		bfc	r3, #3, #29
 335 0154 1360     		str	r3, [r2]
  99:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->NrOfInsAllowed                   = (unsigned_char_t)         0;
 336              		.loc 1 99 0
 337 0156 7B68     		ldr	r3, [r7, #4]
 338 0158 0022     		movs	r2, #0
 339 015a 1A71     		strb	r2, [r3, #4]
 100:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->NrOfInsActivated                 = (unsigned_char_t)         0;
 340              		.loc 1 100 0
 341 015c 7B68     		ldr	r3, [r7, #4]
 342 015e 0022     		movs	r2, #0
 343 0160 5A71     		strb	r2, [r3, #5]
 101:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->fp                               = (func_p_t)                0;
 344              		.loc 1 101 0
 345 0162 7B68     		ldr	r3, [r7, #4]
 346 0164 0022     		movs	r2, #0
 347 0166 DA62     		str	r2, [r3, #44]
 102:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** 
 103:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
 104:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    else
 105:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {
 106:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       OS_SET_SW_BUG(os_bug_null_pointer,Func_CreateTaskEnvironment);
 107:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
 108:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** }
 348              		.loc 1 108 0
 349 0168 03E0     		b	.L14
 350              	.L12:
 106:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
 351              		.loc 1 106 0
 352 016a 0321     		movs	r1, #3
 353 016c 0220     		movs	r0, #2
 354 016e FFF7FEFF 		bl	OS_SET_SW_BUG
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccdQCqDC.s 			page 9


 355              	.L14:
 356              		.loc 1 108 0
 357 0172 00BF     		nop
 358 0174 0837     		adds	r7, r7, #8
 359              		.cfi_def_cfa_offset 8
 360 0176 BD46     		mov	sp, r7
 361              		.cfi_def_cfa_register 13
 362              		@ sp needed
 363 0178 80BD     		pop	{r7, pc}
 364              	.L16:
 365 017a 00BF     		.align	2
 366              	.L15:
 367 017c A0860100 		.word	100000
 368 0180 00000000 		.word	task_state_request
 369              		.cfi_endproc
 370              	.LFE4:
 372              		.align	1
 373              		.global	OS_Task_DeleteTaskEnvironment
 374              		.syntax unified
 375              		.thumb
 376              		.thumb_func
 377              		.fpu softvfp
 379              	OS_Task_DeleteTaskEnvironment:
 380              	.LFB5:
 109:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** #if(USE_STATIC_CREATED_TASKS != False)
 110:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** void OS_Task_DeleteTaskEnvironment(task_t* task)
 111:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** {
 381              		.loc 1 111 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 8
 384              		@ frame_needed = 1, uses_anonymous_args = 0
 385 0184 80B5     		push	{r7, lr}
 386              		.cfi_def_cfa_offset 8
 387              		.cfi_offset 7, -8
 388              		.cfi_offset 14, -4
 389 0186 82B0     		sub	sp, sp, #8
 390              		.cfi_def_cfa_offset 16
 391 0188 00AF     		add	r7, sp, #0
 392              		.cfi_def_cfa_register 7
 393 018a 7860     		str	r0, [r7, #4]
 112:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    if(task!=0 && task->pStackPointerByMalloc!=0)
 394              		.loc 1 112 0
 395 018c 7B68     		ldr	r3, [r7, #4]
 396 018e 002B     		cmp	r3, #0
 397 0190 09D0     		beq	.L18
 398              		.loc 1 112 0 is_stmt 0 discriminator 1
 399 0192 7B68     		ldr	r3, [r7, #4]
 400 0194 5B6F     		ldr	r3, [r3, #116]
 401 0196 002B     		cmp	r3, #0
 402 0198 05D0     		beq	.L18
 113:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {
 114:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       os_free(task->pStackPointerByMalloc);/* only possible in case of heap used */
 403              		.loc 1 114 0 is_stmt 1
 404 019a 7B68     		ldr	r3, [r7, #4]
 405 019c 5B6F     		ldr	r3, [r3, #116]
 406 019e 1846     		mov	r0, r3
 407 01a0 FFF7FEFF 		bl	os_free
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccdQCqDC.s 			page 10


 408 01a4 03E0     		b	.L19
 409              	.L18:
 115:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
 116:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    else
 117:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {
 118:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       OS_SET_SW_BUG(os_bug_null_pointer,Func_DeleteTaskEnvironment);
 410              		.loc 1 118 0
 411 01a6 0421     		movs	r1, #4
 412 01a8 0220     		movs	r0, #2
 413 01aa FFF7FEFF 		bl	OS_SET_SW_BUG
 414              	.L19:
 119:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
 120:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** 
 121:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** }
 415              		.loc 1 121 0
 416 01ae 00BF     		nop
 417 01b0 0837     		adds	r7, r7, #8
 418              		.cfi_def_cfa_offset 8
 419 01b2 BD46     		mov	sp, r7
 420              		.cfi_def_cfa_register 13
 421              		@ sp needed
 422 01b4 80BD     		pop	{r7, pc}
 423              		.cfi_endproc
 424              	.LFE5:
 426              		.align	1
 427              		.global	OS_Task_CreateTaskEnvironment
 428              		.syntax unified
 429              		.thumb
 430              		.thumb_func
 431              		.fpu softvfp
 433              	OS_Task_CreateTaskEnvironment:
 434              	.LFB6:
 122:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** task_t* OS_Task_CreateTaskEnvironment(void)
 123:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** {
 435              		.loc 1 123 0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 8
 438              		@ frame_needed = 1, uses_anonymous_args = 0
 439 01b6 80B5     		push	{r7, lr}
 440              		.cfi_def_cfa_offset 8
 441              		.cfi_offset 7, -8
 442              		.cfi_offset 14, -4
 443 01b8 82B0     		sub	sp, sp, #8
 444              		.cfi_def_cfa_offset 16
 445 01ba 00AF     		add	r7, sp, #0
 446              		.cfi_def_cfa_register 7
 124:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    task_t* task = 0; 
 447              		.loc 1 124 0
 448 01bc 0023     		movs	r3, #0
 449 01be 7B60     		str	r3, [r7, #4]
 125:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    task = (task_t*) os_malloc(sizeof(task_t));/* only possible in case of heap used */
 450              		.loc 1 125 0
 451 01c0 8820     		movs	r0, #136
 452 01c2 FFF7FEFF 		bl	os_malloc
 453 01c6 7860     		str	r0, [r7, #4]
 126:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    if(task == 0)
 454              		.loc 1 126 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccdQCqDC.s 			page 11


 455 01c8 7B68     		ldr	r3, [r7, #4]
 456 01ca 002B     		cmp	r3, #0
 457 01cc 03D1     		bne	.L21
 127:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {  
 128:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       OS_SET_SW_BUG(os_bug_null_pointer,Func_CreateTaskEnvironment);
 458              		.loc 1 128 0
 459 01ce 0321     		movs	r1, #3
 460 01d0 0220     		movs	r0, #2
 461 01d2 FFF7FEFF 		bl	OS_SET_SW_BUG
 462              	.L21:
 129:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
 130:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    return task;
 463              		.loc 1 130 0
 464 01d6 7B68     		ldr	r3, [r7, #4]
 131:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** }
 465              		.loc 1 131 0
 466 01d8 1846     		mov	r0, r3
 467 01da 0837     		adds	r7, r7, #8
 468              		.cfi_def_cfa_offset 8
 469 01dc BD46     		mov	sp, r7
 470              		.cfi_def_cfa_register 13
 471              		@ sp needed
 472 01de 80BD     		pop	{r7, pc}
 473              		.cfi_endproc
 474              	.LFE6:
 476              	.Letext0:
 477              		.file 2 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_base_types.h"
 478              		.file 3 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_common.h"
 479              		.file 4 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_drivers\\lld_core.h"
 480              		.file 5 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_task_common.h"
 481              		.file 6 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_ram.h"
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccdQCqDC.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 os_task_common.c
                            *COM*:00000014 TASK_PTR
C:\Users\PRESID~1\AppData\Local\Temp\ccdQCqDC.s:16     .text:00000000 $t
C:\Users\PRESID~1\AppData\Local\Temp\ccdQCqDC.s:23     .text:00000000 OS_TASK_SAVETASK_ENVIRONMENT
C:\Users\PRESID~1\AppData\Local\Temp\ccdQCqDC.s:85     .text:0000003e OS_TASK_RESTORETASK_ENVIRONMENT
C:\Users\PRESID~1\AppData\Local\Temp\ccdQCqDC.s:138    .text:0000006e OS_TASK_RESTORE_SYSTEM_STACK
C:\Users\PRESID~1\AppData\Local\Temp\ccdQCqDC.s:174    .text:00000084 OS_TASK_SAVE_SYSTEM_STACK
C:\Users\PRESID~1\AppData\Local\Temp\ccdQCqDC.s:210    .text:0000009a OS_Task_InitTaskEnvironment
C:\Users\PRESID~1\AppData\Local\Temp\ccdQCqDC.s:367    .text:0000017c $d
C:\Users\PRESID~1\AppData\Local\Temp\ccdQCqDC.s:372    .text:00000184 $t
C:\Users\PRESID~1\AppData\Local\Temp\ccdQCqDC.s:379    .text:00000184 OS_Task_DeleteTaskEnvironment
C:\Users\PRESID~1\AppData\Local\Temp\ccdQCqDC.s:433    .text:000001b6 OS_Task_CreateTaskEnvironment
                           .group:00000000 wm4.0.aa75c0738974a382baf71fbad152c229
                           .group:00000000 wm4.os_base_types.h.2.f3c0267f175f5cbacca6b71710665a02
                           .group:00000000 wm4.os_common.h.2.c6c04bcf238b83a2cba2b703b96f6544
                           .group:00000000 wm4.os_task_config.h.2.7cfaa082f19f6144d85c64ce1f04b914
                           .group:00000000 wm4.os_task_common.h.95.eb4fc951d6d8ca08a3f35501d742a960
                           .group:00000000 wm4.os_stack.h.2.19e5f67d3b2f1e569581f0c055512986
                           .group:00000000 wm4.os_heap.h.2.89074aae455d2462b5952479e3530dd1
                           .group:00000000 wm4.os_main.h.2.1f66ae3841c27bd36097fa1d2e1fe6a7
                           .group:00000000 wm4.os_task_scheduler.h.2.125feba674fa85672711aed1ca8ea199

UNDEFINED SYMBOLS
LLF_SAVE_TASK_STACK
LLF_SAVE_REGISTERS
OS_SET_SW_BUG
LLF_RESTORE_TASK_STACK
LLF_RESTORE_REGISTERS
LLF_RESTORE_SYSTEM_STACK
LLF_SAVE_SYSTEM_STACK
task_state_request
os_free
os_malloc
