ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccKjidDF.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"os_task_common.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.p2align 2,,3
  17              		.global	OS_TaskSaveTaskEnvironment
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	OS_TaskSaveTaskEnvironment:
  24              	.LFB0:
  25              		.file 1 "E:\\NeuOrga\\Programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_task_common.c"
   1:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** #include "os_firstinc.h"
   2:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** #include "os_task_common.h"
   3:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** #include "os_task_scheduler.h"
   4:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** #include "os_heap.h"
   5:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** 
   6:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** /* Create and delete the task environment is not supported,
   7:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    because we do not allow dynamic RAM allocation for task environment.
   8:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** 
   9:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** 
  10:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** */
  11:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** 
  12:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** 
  13:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** task_t* TASK_PTR[MAX_RUN_QUEUE_SIZE];
  14:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** 
  15:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** void OS_TaskSaveTaskEnvironment(task_t* task)
  16:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** {
  26              		.loc 1 16 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  17:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    if(task != 0)
  31              		.loc 1 17 0
  32 0000 60B1     		cbz	r0, .L2
  16:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    if(task != 0)
  33              		.loc 1 16 0
  34 0002 10B5     		push	{r4, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0004 0446     		mov	r4, r0
  18:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {
  19:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       /*
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccKjidDF.s 			page 2


  20:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       http://www.ibiblio.org/gferg/ldp/GCC-Inline-Assembly-HOWTO.html#s2
  21:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       x86: mov ... esp
  22:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       */
  23:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       LLF_SAVE_TASK_STACK(task->pStackPointer);
  39              		.loc 1 23 0
  40 0006 006F     		ldr	r0, [r0, #112]
  41              	.LVL1:
  42 0008 FFF7FEFF 		bl	LLF_SAVE_TASK_STACK
  43              	.LVL2:
  24:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    #if(CFG_PROCESSOR == cMCU_X86)
  25:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       LLF_SAVE_REGISTERS(task->EAX,task->EBX,task->ECX,task->EDX);
  26:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    #else
  27:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       LLF_SAVE_REGISTERS(task->r0,task->r1,task->r2,task->r3);
  44              		.loc 1 27 0
  45 000c D4E91123 		ldrd	r2, r3, [r4, #68]
  46 0010 D4E90F01 		ldrd	r0, r1, [r4, #60]
  28:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    #endif
  29:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
  30:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    else
  31:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {
  32:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       OS_SetSwBug(os_bug_null_pointer,Func_SaveTaskEnvironment);
  33:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
  34:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    return;
  35:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** }
  47              		.loc 1 35 0
  48 0014 BDE81040 		pop	{r4, lr}
  49              		.cfi_restore 14
  50              		.cfi_restore 4
  51              		.cfi_def_cfa_offset 0
  52              	.LVL3:
  27:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    #endif
  53              		.loc 1 27 0
  54 0018 FFF7FEBF 		b	LLF_SAVE_REGISTERS
  55              	.LVL4:
  56              	.L2:
  32:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
  57              		.loc 1 32 0
  58 001c 0121     		movs	r1, #1
  59 001e 0220     		movs	r0, #2
  60              	.LVL5:
  61 0020 FFF7FEBF 		b	OS_SetSwBug
  62              	.LVL6:
  63              		.cfi_endproc
  64              	.LFE0:
  66              		.align	1
  67              		.p2align 2,,3
  68              		.global	OS_TASK_RESTORETASK_ENVIRONMENT
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  72              		.fpu softvfp
  74              	OS_TASK_RESTORETASK_ENVIRONMENT:
  75              	.LFB1:
  36:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** 
  37:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** void OS_TASK_RESTORETASK_ENVIRONMENT(task_t* task)
  38:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** {
  76              		.loc 1 38 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccKjidDF.s 			page 3


  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              	.LVL7:
  39:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    if(task!=0)
  81              		.loc 1 39 0
  82 0024 48B1     		cbz	r0, .L8
  38:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    if(task!=0)
  83              		.loc 1 38 0
  84 0026 10B5     		push	{r4, lr}
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 4, -8
  87              		.cfi_offset 14, -4
  88 0028 0446     		mov	r4, r0
  40:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       LLF_RESTORE_TASK_STACK(task->pStackPointer);
  89              		.loc 1 41 0
  90 002a 006F     		ldr	r0, [r0, #112]
  91              	.LVL8:
  92 002c FFF7FEFF 		bl	LLF_RESTORE_TASK_STACK
  93              	.LVL9:
  42:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       LLF_RESTORE_REGISTERS(task);
  94              		.loc 1 42 0
  95 0030 2046     		mov	r0, r4
  43:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
  44:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    else
  45:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {
  46:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       OS_SetSwBug(os_bug_null_pointer,Func_RestoreTaskEnvironment);
  47:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
  48:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** }
  96              		.loc 1 48 0
  97 0032 BDE81040 		pop	{r4, lr}
  98              		.cfi_restore 14
  99              		.cfi_restore 4
 100              		.cfi_def_cfa_offset 0
 101              	.LVL10:
  42:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       LLF_RESTORE_REGISTERS(task);
 102              		.loc 1 42 0
 103 0036 FFF7FEBF 		b	LLF_RESTORE_REGISTERS
 104              	.LVL11:
 105              	.L8:
  46:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
 106              		.loc 1 46 0
 107 003a 0221     		movs	r1, #2
 108 003c 0846     		mov	r0, r1
 109              	.LVL12:
 110 003e FFF7FEBF 		b	OS_SetSwBug
 111              	.LVL13:
 112              		.cfi_endproc
 113              	.LFE1:
 115              		.align	1
 116 0042 00BF     		.p2align 2,,3
 117              		.global	OS_TASK_RESTORE_SYSTEM_STACK
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 121              		.fpu softvfp
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccKjidDF.s 			page 4


 123              	OS_TASK_RESTORE_SYSTEM_STACK:
 124              	.LFB2:
  49:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** void OS_TASK_RESTORE_SYSTEM_STACK(uint8* system_stack_ptr)
  50:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** {
 125              		.loc 1 50 0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              		@ link register save eliminated.
 130              	.LVL14:
  51:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    LLF_RESTORE_SYSTEM_STACK(system_stack_ptr);
 131              		.loc 1 51 0
 132 0044 FFF7FEBF 		b	LLF_RESTORE_SYSTEM_STACK
 133              	.LVL15:
 134              		.cfi_endproc
 135              	.LFE2:
 137              		.align	1
 138              		.p2align 2,,3
 139              		.global	OS_TASK_SAVE_SYSTEM_STACK
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu softvfp
 145              	OS_TASK_SAVE_SYSTEM_STACK:
 146              	.LFB3:
  52:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** }
  53:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** void OS_TASK_SAVE_SYSTEM_STACK(uint8* system_stack_ptr)
  54:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** {
 147              		.loc 1 54 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              		@ link register save eliminated.
 152              	.LVL16:
  55:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    LLF_SAVE_SYSTEM_STACK(system_stack_ptr);
 153              		.loc 1 55 0
 154 0048 FFF7FEBF 		b	LLF_SAVE_SYSTEM_STACK
 155              	.LVL17:
 156              		.cfi_endproc
 157              	.LFE3:
 159              		.align	1
 160              		.p2align 2,,3
 161              		.global	OS_Task_InitTaskEnvironment
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu softvfp
 167              	OS_Task_InitTaskEnvironment:
 168              	.LFB4:
  56:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** }
  57:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** void OS_Task_InitTaskEnvironment(task_t* task)
  58:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** {
 169              		.loc 1 58 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccKjidDF.s 			page 5


 174              	.LVL18:
  59:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    if(task != 0)
 175              		.loc 1 59 0
 176 004c 58B3     		cbz	r0, .L15
  60:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {
  61:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       /* general*/
  62:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->active                = False;
 177              		.loc 1 62 0
 178 004e 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
  63:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       /* general purpose registers */
  64:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    #if(CFG_PROCESSOR == cMCU_X86)
  65:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->EAX                             = (unsigned_int32_t)       0;
  66:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->EBX                             = (unsigned_int32_t)       0;
  67:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->ECX                             = (unsigned_int32_t)       0;
  68:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->EDX                             = (unsigned_int32_t)       0;
  69:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    #else
  70:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r0                             = (unsigned_int32_t)       0;
  71:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r1                             = (unsigned_int32_t)       0;
  72:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r2                             = (unsigned_int32_t)       0;
  73:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r3                             = (unsigned_int32_t)       0;
  74:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r4                             = (unsigned_int32_t)       0;
  75:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r5                             = (unsigned_int32_t)       0;
  76:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r6                             = (unsigned_int32_t)       0;
  77:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r7                             = (unsigned_int32_t)       0;
  78:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r8                             = (unsigned_int32_t)       0;
  79:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r9                             = (unsigned_int32_t)       0;
  80:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r10                             = (unsigned_int32_t)       0;
  81:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r11                             = (unsigned_int32_t)       0;
  82:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r12                             = (unsigned_int32_t)       0;
  83:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    #endif
  84:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       /* task scheduling */
  85:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->WaitActUntil                     = (unsigned_char_t)         0;
  86:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->wait_time                        = (unsigned_int32_t)        0;
  87:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->TimeToPrioInc                    = (unsigned_int32_t)        5;
  88:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->overwaittime_per_prio_inc_step   = (unsigned_int32_t)        1;/* has to be >=1 */
  89:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->max_allowed_wait_time            = (unsigned_int32_t)        100000;
 179              		.loc 1 89 0
 180 0050 174B     		ldr	r3, .L21
  90:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->exe_time                         = (unsigned_int32_t)        0;
  91:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->current_prio                     = (unsigned_char_t)         0;
  92:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->default_prio                     = (unsigned_char_t)         0;/* the default prio for 
  93:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** 
  94:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       /* task management */
  95:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->state_request                    =                           &task_state_request;
 181              		.loc 1 95 0
 182 0052 1849     		ldr	r1, .L21+4
  58:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    if(task != 0)
 183              		.loc 1 58 0
 184 0054 30B4     		push	{r4, r5}
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 4, -8
 187              		.cfi_offset 5, -4
  96:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->task_state                       =                           Task_unspecified;
  97:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->task_queued                      =                           False;
 188              		.loc 1 97 0
 189 0056 02F0FE02 		and	r2, r2, #254
  89:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->exe_time                         = (unsigned_int32_t)        0;
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccKjidDF.s 			page 6


 190              		.loc 1 89 0
 191 005a 8361     		str	r3, [r0, #24]
  70:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r1                             = (unsigned_int32_t)       0;
 192              		.loc 1 70 0
 193 005c 0023     		movs	r3, #0
 194              		.loc 1 97 0
 195 005e 63F34102 		bfi	r2, r3, #1, #1
 196 0062 0270     		strb	r2, [r0]
  98:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->FREE                             =                           0;
 197              		.loc 1 98 0
 198 0064 0268     		ldr	r2, [r0]
  91:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->default_prio                     = (unsigned_char_t)         0;/* the default prio for 
 199              		.loc 1 91 0
 200 0066 8384     		strh	r3, [r0, #36]	@ movhi
  87:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->overwaittime_per_prio_inc_step   = (unsigned_int32_t)        1;/* has to be >=1 */
 201              		.loc 1 87 0
 202 0068 0525     		movs	r5, #5
  88:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->max_allowed_wait_time            = (unsigned_int32_t)        100000;
 203              		.loc 1 88 0
 204 006a 0124     		movs	r4, #1
 205              		.loc 1 98 0
 206 006c 63F3DF02 		bfi	r2, r3, #3, #29
  99:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->NrOfInsAllowed                   = (unsigned_char_t)         0;
 207              		.loc 1 99 0
 208 0070 0371     		strb	r3, [r0, #4]
 100:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->NrOfInsActivated                 = (unsigned_char_t)         0;
 209              		.loc 1 100 0
 210 0072 4371     		strb	r3, [r0, #5]
  88:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->max_allowed_wait_time            = (unsigned_int32_t)        100000;
 211              		.loc 1 88 0
 212 0074 C0E90454 		strd	r5, r4, [r0, #16]
  70:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r1                             = (unsigned_int32_t)       0;
 213              		.loc 1 70 0
 214 0078 C363     		str	r3, [r0, #60]
  72:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r3                             = (unsigned_int32_t)       0;
 215              		.loc 1 72 0
 216 007a C0E91033 		strd	r3, r3, [r0, #64]
  74:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r5                             = (unsigned_int32_t)       0;
 217              		.loc 1 74 0
 218 007e C0E91233 		strd	r3, r3, [r0, #72]
  76:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r7                             = (unsigned_int32_t)       0;
 219              		.loc 1 76 0
 220 0082 C0E91433 		strd	r3, r3, [r0, #80]
  78:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r9                             = (unsigned_int32_t)       0;
 221              		.loc 1 78 0
 222 0086 C0E91633 		strd	r3, r3, [r0, #88]
  80:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->r11                             = (unsigned_int32_t)       0;
 223              		.loc 1 80 0
 224 008a C0E91833 		strd	r3, r3, [r0, #96]
  82:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    #endif
 225              		.loc 1 82 0
 226 008e C0E91A33 		strd	r3, r3, [r0, #104]
  86:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->TimeToPrioInc                    = (unsigned_int32_t)        5;
 227              		.loc 1 86 0
 228 0092 C0E90233 		strd	r3, r3, [r0, #8]
  90:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->current_prio                     = (unsigned_char_t)         0;
 229              		.loc 1 90 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccKjidDF.s 			page 7


 230 0096 C361     		str	r3, [r0, #28]
  96:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->task_queued                      =                           False;
 231              		.loc 1 96 0
 232 0098 80F83430 		strb	r3, [r0, #52]
 101:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->fp                               = (func_p_t)                0;
 233              		.loc 1 101 0
 234 009c C362     		str	r3, [r0, #44]
  98:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->NrOfInsAllowed                   = (unsigned_char_t)         0;
 235              		.loc 1 98 0
 236 009e 0260     		str	r2, [r0]
  95:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       task->task_state                       =                           Task_unspecified;
 237              		.loc 1 95 0
 238 00a0 0163     		str	r1, [r0, #48]
 102:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** 
 103:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
 104:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    else
 105:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    {
 106:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****       OS_SetSwBug(os_bug_null_pointer,Func_InitTaskEnvironment);
 107:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
 108:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c **** }
 239              		.loc 1 108 0
 240 00a2 30BC     		pop	{r4, r5}
 241              		.cfi_restore 5
 242              		.cfi_restore 4
 243              		.cfi_def_cfa_offset 0
 244 00a4 7047     		bx	lr
 245              	.L15:
 106:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_task_common.c ****    }
 246              		.loc 1 106 0
 247 00a6 0521     		movs	r1, #5
 248 00a8 0220     		movs	r0, #2
 249              	.LVL19:
 250 00aa FFF7FEBF 		b	OS_SetSwBug
 251              	.LVL20:
 252              	.L22:
 253 00ae 00BF     		.align	2
 254              	.L21:
 255 00b0 A0860100 		.word	100000
 256 00b4 00000000 		.word	task_state_request
 257              		.cfi_endproc
 258              	.LFE4:
 260              		.comm	TASK_PTR,40,4
 261              	.Letext0:
 262              		.file 2 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_base_types.h"
 263              		.file 3 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_common.h"
 264              		.file 4 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_drivers\\lld_core.h"
 265              		.file 5 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_task_common.h"
 266              		.file 6 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_ram.h"
 267              		.file 7 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_drivers\\lld_global.h"
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccKjidDF.s 			page 8


DEFINED SYMBOLS
                            *ABS*:00000000 os_task_common.c
C:\Users\PRESID~1\AppData\Local\Temp\ccKjidDF.s:15     .text:00000000 $t
C:\Users\PRESID~1\AppData\Local\Temp\ccKjidDF.s:23     .text:00000000 OS_TaskSaveTaskEnvironment
C:\Users\PRESID~1\AppData\Local\Temp\ccKjidDF.s:74     .text:00000024 OS_TASK_RESTORETASK_ENVIRONMENT
C:\Users\PRESID~1\AppData\Local\Temp\ccKjidDF.s:123    .text:00000044 OS_TASK_RESTORE_SYSTEM_STACK
C:\Users\PRESID~1\AppData\Local\Temp\ccKjidDF.s:145    .text:00000048 OS_TASK_SAVE_SYSTEM_STACK
C:\Users\PRESID~1\AppData\Local\Temp\ccKjidDF.s:167    .text:0000004c OS_Task_InitTaskEnvironment
C:\Users\PRESID~1\AppData\Local\Temp\ccKjidDF.s:255    .text:000000b0 $d
                            *COM*:00000028 TASK_PTR
                           .group:00000000 wm4.0.d67ddeb5d3f434a0386bf4e126239e16
                           .group:00000000 wm4.os_base_types.h.2.f3c0267f175f5cbacca6b71710665a02
                           .group:00000000 wm4.os_common.h.2.7d3083dfb0b17ee9cbe20f6fe4481cd9
                           .group:00000000 wm4.os_task_config.h.2.a73335dbec9f276504b3b94e79d1d898
                           .group:00000000 wm4.os_task_common.h.95.eb4fc951d6d8ca08a3f35501d742a960
                           .group:00000000 wm4.os_stack.h.2.f736ad9941e78e3f128684d765efeb27
                           .group:00000000 wm4.os_heap.h.2.89074aae455d2462b5952479e3530dd1
                           .group:00000000 wm4.os_main.h.2.1f66ae3841c27bd36097fa1d2e1fe6a7
                           .group:00000000 wm4.os_task_scheduler.h.2.125feba674fa85672711aed1ca8ea199

UNDEFINED SYMBOLS
LLF_SAVE_TASK_STACK
LLF_SAVE_REGISTERS
OS_SetSwBug
LLF_RESTORE_TASK_STACK
LLF_RESTORE_REGISTERS
LLF_RESTORE_SYSTEM_STACK
LLF_SAVE_SYSTEM_STACK
task_state_request
