ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cc1QdjNe.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"os_heap.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.global	os_calloc
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	os_calloc:
  23              	.LFB0:
  24              		.file 1 "E:\\NeuOrga\\Programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_heap.c"
   1:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** #include "os_firstinc.h"
   2:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** #include "..\os_base\os_heap.h"
   3:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** 
   4:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** Local uint32 GET_UINT32_OF_4UINT8(uint8* ptr);
   5:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** Local void SET_4UINT8_TO_UINT32(uint8* ptr, uint32 value);
   6:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** 
   7:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** /* Allocate and zero-initialize array
   8:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** --------------------------------------------------------------------
   9:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** Allocates a block of memory for an array of num elements,
  10:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** each of them size bytes long, and initializes all its bits to zero. */
  11:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** void* os_calloc(uint32 num, uint32 size)
  12:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** {
  25              		.loc 1 12 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 16
  28              		@ frame_needed = 1, uses_anonymous_args = 0
  29 0000 80B5     		push	{r7, lr}
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 7, -8
  32              		.cfi_offset 14, -4
  33 0002 84B0     		sub	sp, sp, #16
  34              		.cfi_def_cfa_offset 24
  35 0004 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
  37 0006 7860     		str	r0, [r7, #4]
  38 0008 3960     		str	r1, [r7]
  13:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    uint8* ptr = (uint8*) os_malloc(num*size);
  39              		.loc 1 13 0
  40 000a 7B68     		ldr	r3, [r7, #4]
  41 000c 3A68     		ldr	r2, [r7]
  42 000e 02FB03F3 		mul	r3, r2, r3
  43 0012 1846     		mov	r0, r3
  44 0014 FFF7FEFF 		bl	os_malloc
  45 0018 B860     		str	r0, [r7, #8]
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cc1QdjNe.s 			page 2


  14:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    /* zero initialize the RAM*/
  15:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    uint32 i;
  16:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    for(i = 0u; i < (size*num); i++)
  46              		.loc 1 16 0
  47 001a 0023     		movs	r3, #0
  48 001c FB60     		str	r3, [r7, #12]
  49 001e 07E0     		b	.L2
  50              	.L3:
  17:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    {
  18:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       *((uint8*)ptr + (uint32)i) = 0x00u;
  51              		.loc 1 18 0 discriminator 3
  52 0020 BA68     		ldr	r2, [r7, #8]
  53 0022 FB68     		ldr	r3, [r7, #12]
  54 0024 1344     		add	r3, r3, r2
  55 0026 0022     		movs	r2, #0
  56 0028 1A70     		strb	r2, [r3]
  16:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    {
  57              		.loc 1 16 0 discriminator 3
  58 002a FB68     		ldr	r3, [r7, #12]
  59 002c 0133     		adds	r3, r3, #1
  60 002e FB60     		str	r3, [r7, #12]
  61              	.L2:
  16:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    {
  62              		.loc 1 16 0 is_stmt 0 discriminator 1
  63 0030 3B68     		ldr	r3, [r7]
  64 0032 7A68     		ldr	r2, [r7, #4]
  65 0034 02FB03F3 		mul	r3, r2, r3
  66 0038 FA68     		ldr	r2, [r7, #12]
  67 003a 9A42     		cmp	r2, r3
  68 003c F0D3     		bcc	.L3
  19:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    }
  20:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    return (void*) ptr;
  69              		.loc 1 20 0 is_stmt 1
  70 003e BB68     		ldr	r3, [r7, #8]
  21:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** }
  71              		.loc 1 21 0
  72 0040 1846     		mov	r0, r3
  73 0042 1037     		adds	r7, r7, #16
  74              		.cfi_def_cfa_offset 8
  75 0044 BD46     		mov	sp, r7
  76              		.cfi_def_cfa_register 13
  77              		@ sp needed
  78 0046 80BD     		pop	{r7, pc}
  79              		.cfi_endproc
  80              	.LFE0:
  82              		.align	1
  83              		.global	os_realloc
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu softvfp
  89              	os_realloc:
  90              	.LFB1:
  22:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** /*
  23:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** Reallocate memory block
  24:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** --------------------------------------------------------------------
  25:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** Changes the size of the memory block pointed to by ptr.
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cc1QdjNe.s 			page 3


  26:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** The function may move the memory block to a new location
  27:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****  (whose address is returned by the function). The content of the memory
  28:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****  block is preserved up to the lesser of the new and old sizes,
  29:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****  even if the block is moved to a new location. If the new size is larger,
  30:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****  the value of the newly allocated portion is indeterminate.
  31:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** In case that ptr is a null pointer, the function behaves like malloc,
  32:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** assigning a new block of size bytes and returning a pointer to its beginning.
  33:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** */
  34:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** void* os_realloc(void* ptr_old, uint32 size_new)
  35:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** {
  91              		.loc 1 35 0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 24
  94              		@ frame_needed = 1, uses_anonymous_args = 0
  95 0048 80B5     		push	{r7, lr}
  96              		.cfi_def_cfa_offset 8
  97              		.cfi_offset 7, -8
  98              		.cfi_offset 14, -4
  99 004a 86B0     		sub	sp, sp, #24
 100              		.cfi_def_cfa_offset 32
 101 004c 00AF     		add	r7, sp, #0
 102              		.cfi_def_cfa_register 7
 103 004e 7860     		str	r0, [r7, #4]
 104 0050 3960     		str	r1, [r7]
  36:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    uint32 i;
  37:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    void* ptr_new = 0u;
 105              		.loc 1 37 0
 106 0052 0023     		movs	r3, #0
 107 0054 3B61     		str	r3, [r7, #16]
  38:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    if(ptr_old == 0u)/* just allocate the new RAM */
 108              		.loc 1 38 0
 109 0056 7B68     		ldr	r3, [r7, #4]
 110 0058 002B     		cmp	r3, #0
 111 005a 04D1     		bne	.L6
  39:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    {
  40:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       ptr_new = (void*) os_malloc(size_new);
 112              		.loc 1 40 0
 113 005c 3868     		ldr	r0, [r7]
 114 005e FFF7FEFF 		bl	os_malloc
 115 0062 3861     		str	r0, [r7, #16]
 116 0064 24E0     		b	.L7
 117              	.L6:
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    }
  42:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    else if(size_new != 0u)/*reallocate*/
 118              		.loc 1 42 0
 119 0066 3B68     		ldr	r3, [r7]
 120 0068 002B     		cmp	r3, #0
 121 006a 19D0     		beq	.L8
 122              	.LBB2:
  43:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    {
  44:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       void* ptr_new = (void*) os_malloc(size_new);
 123              		.loc 1 44 0
 124 006c 3868     		ldr	r0, [r7]
 125 006e FFF7FEFF 		bl	os_malloc
 126 0072 F860     		str	r0, [r7, #12]
  45:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       if(ptr_new != 0u)/* memory to store the data ok? */
 127              		.loc 1 45 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cc1QdjNe.s 			page 4


 128 0074 FB68     		ldr	r3, [r7, #12]
 129 0076 002B     		cmp	r3, #0
 130 0078 1AD0     		beq	.L7
  46:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       {
  47:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****          for(i = 0u; i < size_new; i++)
 131              		.loc 1 47 0
 132 007a 0023     		movs	r3, #0
 133 007c 7B61     		str	r3, [r7, #20]
 134 007e 0AE0     		b	.L10
 135              	.L11:
  48:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****          {
  49:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****             *((uint8*)ptr_new + (uint32)i) = *((uint8*)ptr_old + (uint32)i);
 136              		.loc 1 49 0 discriminator 3
 137 0080 7A68     		ldr	r2, [r7, #4]
 138 0082 7B69     		ldr	r3, [r7, #20]
 139 0084 1A44     		add	r2, r2, r3
 140 0086 F968     		ldr	r1, [r7, #12]
 141 0088 7B69     		ldr	r3, [r7, #20]
 142 008a 0B44     		add	r3, r3, r1
 143 008c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 144 008e 1A70     		strb	r2, [r3]
  47:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****          {
 145              		.loc 1 47 0 discriminator 3
 146 0090 7B69     		ldr	r3, [r7, #20]
 147 0092 0133     		adds	r3, r3, #1
 148 0094 7B61     		str	r3, [r7, #20]
 149              	.L10:
  47:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****          {
 150              		.loc 1 47 0 is_stmt 0 discriminator 1
 151 0096 7A69     		ldr	r2, [r7, #20]
 152 0098 3B68     		ldr	r3, [r7]
 153 009a 9A42     		cmp	r2, r3
 154 009c F0D3     		bcc	.L11
 155 009e 07E0     		b	.L7
 156              	.L8:
 157              	.LBE2:
  50:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****          }
  51:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       }
  52:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    }
  53:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    else /*deallocate */
  54:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    {
  55:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       if(ptr_old != 0u)
 158              		.loc 1 55 0 is_stmt 1
 159 00a0 7B68     		ldr	r3, [r7, #4]
 160 00a2 002B     		cmp	r3, #0
 161 00a4 02D0     		beq	.L12
  56:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       {
  57:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****          os_free(ptr_old);
 162              		.loc 1 57 0
 163 00a6 7868     		ldr	r0, [r7, #4]
 164 00a8 FFF7FEFF 		bl	os_free
 165              	.L12:
  58:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       }
  59:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       ptr_new = 0u;
 166              		.loc 1 59 0
 167 00ac 0023     		movs	r3, #0
 168 00ae 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cc1QdjNe.s 			page 5


 169              	.L7:
  60:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    }
  61:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    return ptr_new;
 170              		.loc 1 61 0
 171 00b0 3B69     		ldr	r3, [r7, #16]
  62:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** }
 172              		.loc 1 62 0
 173 00b2 1846     		mov	r0, r3
 174 00b4 1837     		adds	r7, r7, #24
 175              		.cfi_def_cfa_offset 8
 176 00b6 BD46     		mov	sp, r7
 177              		.cfi_def_cfa_register 13
 178              		@ sp needed
 179 00b8 80BD     		pop	{r7, pc}
 180              		.cfi_endproc
 181              	.LFE1:
 183              		.align	1
 184              		.global	os_malloc
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 188              		.fpu softvfp
 190              	os_malloc:
 191              	.LFB2:
  63:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** 
  64:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** /* malloc and free shall be the ONLY!!! functions accessing the data structures of the heap directl
  65:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** void* os_malloc(uint32 size)
  66:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** {
 192              		.loc 1 66 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 24
 195              		@ frame_needed = 1, uses_anonymous_args = 0
 196 00ba 80B5     		push	{r7, lr}
 197              		.cfi_def_cfa_offset 8
 198              		.cfi_offset 7, -8
 199              		.cfi_offset 14, -4
 200 00bc 86B0     		sub	sp, sp, #24
 201              		.cfi_def_cfa_offset 32
 202 00be 00AF     		add	r7, sp, #0
 203              		.cfi_def_cfa_register 7
 204 00c0 7860     		str	r0, [r7, #4]
  67:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    /*uint32    used_size = 0;*/
  68:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    uint8*    chunk_ptr = 0;
 205              		.loc 1 68 0
 206 00c2 0023     		movs	r3, #0
 207 00c4 7B61     		str	r3, [r7, #20]
  69:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    uint8*    heap_ptr  = 0; /* current byte of the heap to be accessed */
 208              		.loc 1 69 0
 209 00c6 0023     		movs	r3, #0
 210 00c8 3B61     		str	r3, [r7, #16]
  70:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    uint32    chunk_uint32o_allocate = 0;
 211              		.loc 1 70 0
 212 00ca 0023     		movs	r3, #0
 213 00cc FB60     		str	r3, [r7, #12]
  71:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** 
  72:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    /* search through the heap for free chunk ....
  73:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    e.g. for memory layout
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cc1QdjNe.s 			page 6


  74:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** 
  75:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    UINT32 for size of chunk
  76:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    0x00000008,
  77:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    UINT32 for used size of chunk
  78:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    0x00000001,
  79:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    chunk (here 8 bytes)
  80:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    0x00000000,0x00000000
  81:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    UINT32 for size of chunk
  82:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    0x00000010,
  83:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    UINT32 for used size of chunk
  84:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    0x00000009,
  85:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    chunk (here 16 bytes)
  86:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    0x00000000,0x00000000,
  87:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    0x00000000,0x00000000
  88:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    */
  89:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** 
  90:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    /* expand the size to MIN_BLOCK_SIZE_HEAP if necessary */
  91:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    if(size < MIN_BLOCK_SIZE_HEAP)
 214              		.loc 1 91 0
 215 00ce 7B68     		ldr	r3, [r7, #4]
 216 00d0 072B     		cmp	r3, #7
 217 00d2 02D8     		bhi	.L15
  92:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    {
  93:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       chunk_uint32o_allocate = MIN_BLOCK_SIZE_HEAP;
 218              		.loc 1 93 0
 219 00d4 0823     		movs	r3, #8
 220 00d6 FB60     		str	r3, [r7, #12]
 221 00d8 01E0     		b	.L16
 222              	.L15:
  94:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    }
  95:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    else
  96:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    {
  97:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       chunk_uint32o_allocate = size;
 223              		.loc 1 97 0
 224 00da 7B68     		ldr	r3, [r7, #4]
 225 00dc FB60     		str	r3, [r7, #12]
 226              	.L16:
  98:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    }
  99:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    for( heap_ptr = (uint8*) &HEAP;/* init on the start of the heap */
 227              		.loc 1 99 0
 228 00de 0F4B     		ldr	r3, .L21
 229 00e0 3B61     		str	r3, [r7, #16]
 230 00e2 0BE0     		b	.L17
 231              	.L19:
 100:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****          ((heap_ptr + (uint32)HEAP_OFFSET_FOR_CHUNK + (uint32)chunk_uint32o_allocate) <= ((uint8*)&
 101:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****          heap_ptr = heap_ptr + (uint32)HEAP_OFFSET_FOR_CHUNK + size/* set the heap_ptr to the next 
 102:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       )
 103:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    {
 104:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       size      = GET_UINT32_OF_4UINT8(heap_ptr + HEAP_OFFSET_FOR_SIZE);
 232              		.loc 1 104 0
 233 00e4 3869     		ldr	r0, [r7, #16]
 234 00e6 00F04DF8 		bl	GET_UINT32_OF_4UINT8
 235 00ea 7860     		str	r0, [r7, #4]
 105:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       /*used_size = GET_UINT32_OF_4UINT8(heap_ptr + HEAP_OFFSET_FOR_USED_SIZE);*/
 106:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** 
 107:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       chunk_ptr     = (heap_ptr + HEAP_OFFSET_FOR_CHUNK);
 236              		.loc 1 107 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cc1QdjNe.s 			page 7


 237 00ec 3B69     		ldr	r3, [r7, #16]
 238 00ee 0833     		adds	r3, r3, #8
 239 00f0 7B61     		str	r3, [r7, #20]
 101:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       )
 240              		.loc 1 101 0
 241 00f2 7B68     		ldr	r3, [r7, #4]
 242 00f4 0833     		adds	r3, r3, #8
 243 00f6 3A69     		ldr	r2, [r7, #16]
 244 00f8 1344     		add	r3, r3, r2
 245 00fa 3B61     		str	r3, [r7, #16]
 246              	.L17:
 100:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****          ((heap_ptr + (uint32)HEAP_OFFSET_FOR_CHUNK + (uint32)chunk_uint32o_allocate) <= ((uint8*)&
 247              		.loc 1 100 0 discriminator 1
 248 00fc FB68     		ldr	r3, [r7, #12]
 249 00fe 0833     		adds	r3, r3, #8
 250 0100 3A69     		ldr	r2, [r7, #16]
 251 0102 1344     		add	r3, r3, r2
 252 0104 064A     		ldr	r2, .L21+4
  99:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****          ((heap_ptr + (uint32)HEAP_OFFSET_FOR_CHUNK + (uint32)chunk_uint32o_allocate) <= ((uint8*)&
 253              		.loc 1 99 0 discriminator 1
 254 0106 9342     		cmp	r3, r2
 255 0108 02D8     		bhi	.L18
 100:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****          heap_ptr = heap_ptr + (uint32)HEAP_OFFSET_FOR_CHUNK + size/* set the heap_ptr to the next 
 256              		.loc 1 100 0
 257 010a 7B69     		ldr	r3, [r7, #20]
 258 010c 002B     		cmp	r3, #0
 259 010e E9D0     		beq	.L19
 260              	.L18:
 108:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    }
 109:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    return (void*)chunk_ptr;
 261              		.loc 1 109 0
 262 0110 7B69     		ldr	r3, [r7, #20]
 110:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** }
 263              		.loc 1 110 0
 264 0112 1846     		mov	r0, r3
 265 0114 1837     		adds	r7, r7, #24
 266              		.cfi_def_cfa_offset 8
 267 0116 BD46     		mov	sp, r7
 268              		.cfi_def_cfa_register 13
 269              		@ sp needed
 270 0118 80BD     		pop	{r7, pc}
 271              	.L22:
 272 011a 00BF     		.align	2
 273              	.L21:
 274 011c 00000000 		.word	HEAP
 275 0120 10270000 		.word	HEAP+10000
 276              		.cfi_endproc
 277              	.LFE2:
 279              		.align	1
 280              		.global	os_free
 281              		.syntax unified
 282              		.thumb
 283              		.thumb_func
 284              		.fpu softvfp
 286              	os_free:
 287              	.LFB3:
 111:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** void os_free(void* ptr)
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cc1QdjNe.s 			page 8


 112:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** {
 288              		.loc 1 112 0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 24
 291              		@ frame_needed = 1, uses_anonymous_args = 0
 292 0124 80B5     		push	{r7, lr}
 293              		.cfi_def_cfa_offset 8
 294              		.cfi_offset 7, -8
 295              		.cfi_offset 14, -4
 296 0126 86B0     		sub	sp, sp, #24
 297              		.cfi_def_cfa_offset 32
 298 0128 00AF     		add	r7, sp, #0
 299              		.cfi_def_cfa_register 7
 300 012a 7860     		str	r0, [r7, #4]
 113:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    uint32  size = 0;
 301              		.loc 1 113 0
 302 012c 0023     		movs	r3, #0
 303 012e 3B61     		str	r3, [r7, #16]
 114:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    /*uint32  used_size = 0;*/
 115:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    uint8* chunk_ptr = 0;
 304              		.loc 1 115 0
 305 0130 0023     		movs	r3, #0
 306 0132 FB60     		str	r3, [r7, #12]
 116:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    uint8* heap_ptr  = 0;
 307              		.loc 1 116 0
 308 0134 0023     		movs	r3, #0
 309 0136 7B61     		str	r3, [r7, #20]
 117:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    /* clear used size info in list */
 118:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    for( heap_ptr = (uint8*)&HEAP;/* init on the start of the heap */
 310              		.loc 1 118 0
 311 0138 104B     		ldr	r3, .L27
 312 013a 7B61     		str	r3, [r7, #20]
 313 013c 15E0     		b	.L24
 314              	.L26:
 119:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****          (heap_ptr + (uint32)HEAP_OFFSET_FOR_CHUNK  <= ((uint8*)&HEAP + (uint32)sizeof(HEAP)));/* a
 120:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****          heap_ptr = heap_ptr + HEAP_OFFSET_FOR_CHUNK + size/* set the heap_ptr to the next element 
 121:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       )
 122:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    {
 123:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       size      = GET_UINT32_OF_4UINT8(heap_ptr + HEAP_OFFSET_FOR_SIZE);
 315              		.loc 1 123 0
 316 013e 7869     		ldr	r0, [r7, #20]
 317 0140 00F020F8 		bl	GET_UINT32_OF_4UINT8
 318 0144 3861     		str	r0, [r7, #16]
 124:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       /*used_size = GET_UINT32_OF_4UINT8(heap_ptr + HEAP_OFFSET_FOR_USED_SIZE);*/
 125:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** 
 126:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       chunk_ptr     = (void*) ((uint8*)heap_ptr + (uint32)HEAP_OFFSET_FOR_CHUNK);
 319              		.loc 1 126 0
 320 0146 7B69     		ldr	r3, [r7, #20]
 321 0148 0833     		adds	r3, r3, #8
 322 014a FB60     		str	r3, [r7, #12]
 127:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** 
 128:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       if(chunk_ptr == ptr) /*block found which shall be cleared... */
 323              		.loc 1 128 0
 324 014c FA68     		ldr	r2, [r7, #12]
 325 014e 7B68     		ldr	r3, [r7, #4]
 326 0150 9A42     		cmp	r2, r3
 327 0152 05D1     		bne	.L25
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cc1QdjNe.s 			page 9


 129:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       {
 130:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****          SET_4UINT8_TO_UINT32((uint8*)heap_ptr + (uint32)HEAP_OFFSET_FOR_USED_SIZE, 0);/* set the u
 328              		.loc 1 130 0
 329 0154 7B69     		ldr	r3, [r7, #20]
 330 0156 0433     		adds	r3, r3, #4
 331 0158 0021     		movs	r1, #0
 332 015a 1846     		mov	r0, r3
 333 015c 00F03FF8 		bl	SET_4UINT8_TO_UINT32
 334              	.L25:
 120:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       )
 335              		.loc 1 120 0
 336 0160 3B69     		ldr	r3, [r7, #16]
 337 0162 0833     		adds	r3, r3, #8
 338 0164 7A69     		ldr	r2, [r7, #20]
 339 0166 1344     		add	r3, r3, r2
 340 0168 7B61     		str	r3, [r7, #20]
 341              	.L24:
 119:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****          heap_ptr = heap_ptr + HEAP_OFFSET_FOR_CHUNK + size/* set the heap_ptr to the next element 
 342              		.loc 1 119 0 discriminator 1
 343 016a 7B69     		ldr	r3, [r7, #20]
 344 016c 0833     		adds	r3, r3, #8
 345 016e 044A     		ldr	r2, .L27+4
 118:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****          (heap_ptr + (uint32)HEAP_OFFSET_FOR_CHUNK  <= ((uint8*)&HEAP + (uint32)sizeof(HEAP)));/* a
 346              		.loc 1 118 0 discriminator 1
 347 0170 9342     		cmp	r3, r2
 348 0172 E4D9     		bls	.L26
 131:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       }
 132:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    }
 133:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** }
 349              		.loc 1 133 0
 350 0174 00BF     		nop
 351 0176 1837     		adds	r7, r7, #24
 352              		.cfi_def_cfa_offset 8
 353 0178 BD46     		mov	sp, r7
 354              		.cfi_def_cfa_register 13
 355              		@ sp needed
 356 017a 80BD     		pop	{r7, pc}
 357              	.L28:
 358              		.align	2
 359              	.L27:
 360 017c 00000000 		.word	HEAP
 361 0180 10270000 		.word	HEAP+10000
 362              		.cfi_endproc
 363              	.LFE3:
 365              		.align	1
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu softvfp
 371              	GET_UINT32_OF_4UINT8:
 372              	.LFB4:
 134:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** Local uint32 GET_UINT32_OF_4UINT8(uint8* ptr)
 135:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** {
 373              		.loc 1 135 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 16
 376              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cc1QdjNe.s 			page 10


 377              		@ link register save eliminated.
 378 0184 80B4     		push	{r7}
 379              		.cfi_def_cfa_offset 4
 380              		.cfi_offset 7, -4
 381 0186 85B0     		sub	sp, sp, #20
 382              		.cfi_def_cfa_offset 24
 383 0188 00AF     		add	r7, sp, #0
 384              		.cfi_def_cfa_register 7
 385 018a 7860     		str	r0, [r7, #4]
 136:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    uint32 ret_val = 0;
 386              		.loc 1 136 0
 387 018c 0023     		movs	r3, #0
 388 018e FB60     		str	r3, [r7, #12]
 137:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** 
 138:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    ret_val += ((uint32) *ptr)<< 24;
 389              		.loc 1 138 0
 390 0190 7B68     		ldr	r3, [r7, #4]
 391 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 392 0194 1B06     		lsls	r3, r3, #24
 393 0196 FA68     		ldr	r2, [r7, #12]
 394 0198 1344     		add	r3, r3, r2
 395 019a FB60     		str	r3, [r7, #12]
 139:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    ptr++;
 396              		.loc 1 139 0
 397 019c 7B68     		ldr	r3, [r7, #4]
 398 019e 0133     		adds	r3, r3, #1
 399 01a0 7B60     		str	r3, [r7, #4]
 140:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    ret_val += ((uint32) *ptr)<< 16;
 400              		.loc 1 140 0
 401 01a2 7B68     		ldr	r3, [r7, #4]
 402 01a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 403 01a6 1B04     		lsls	r3, r3, #16
 404 01a8 FA68     		ldr	r2, [r7, #12]
 405 01aa 1344     		add	r3, r3, r2
 406 01ac FB60     		str	r3, [r7, #12]
 141:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    ptr++;
 407              		.loc 1 141 0
 408 01ae 7B68     		ldr	r3, [r7, #4]
 409 01b0 0133     		adds	r3, r3, #1
 410 01b2 7B60     		str	r3, [r7, #4]
 142:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    ret_val += ((uint32) *ptr)<< 8;
 411              		.loc 1 142 0
 412 01b4 7B68     		ldr	r3, [r7, #4]
 413 01b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 414 01b8 1B02     		lsls	r3, r3, #8
 415 01ba FA68     		ldr	r2, [r7, #12]
 416 01bc 1344     		add	r3, r3, r2
 417 01be FB60     		str	r3, [r7, #12]
 143:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    ptr++;
 418              		.loc 1 143 0
 419 01c0 7B68     		ldr	r3, [r7, #4]
 420 01c2 0133     		adds	r3, r3, #1
 421 01c4 7B60     		str	r3, [r7, #4]
 144:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    ret_val += ((uint32) *ptr)<< 0;
 422              		.loc 1 144 0
 423 01c6 7B68     		ldr	r3, [r7, #4]
 424 01c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cc1QdjNe.s 			page 11


 425 01ca 1A46     		mov	r2, r3
 426 01cc FB68     		ldr	r3, [r7, #12]
 427 01ce 1344     		add	r3, r3, r2
 428 01d0 FB60     		str	r3, [r7, #12]
 145:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** 
 146:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    return ret_val;
 429              		.loc 1 146 0
 430 01d2 FB68     		ldr	r3, [r7, #12]
 147:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** }
 431              		.loc 1 147 0
 432 01d4 1846     		mov	r0, r3
 433 01d6 1437     		adds	r7, r7, #20
 434              		.cfi_def_cfa_offset 4
 435 01d8 BD46     		mov	sp, r7
 436              		.cfi_def_cfa_register 13
 437              		@ sp needed
 438 01da 80BC     		pop	{r7}
 439              		.cfi_restore 7
 440              		.cfi_def_cfa_offset 0
 441 01dc 7047     		bx	lr
 442              		.cfi_endproc
 443              	.LFE4:
 445              		.align	1
 446              		.syntax unified
 447              		.thumb
 448              		.thumb_func
 449              		.fpu softvfp
 451              	SET_4UINT8_TO_UINT32:
 452              	.LFB5:
 148:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** Local void SET_4UINT8_TO_UINT32(uint8* ptr, uint32 value)
 149:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** {
 453              		.loc 1 149 0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 8
 456              		@ frame_needed = 1, uses_anonymous_args = 0
 457              		@ link register save eliminated.
 458 01de 80B4     		push	{r7}
 459              		.cfi_def_cfa_offset 4
 460              		.cfi_offset 7, -4
 461 01e0 83B0     		sub	sp, sp, #12
 462              		.cfi_def_cfa_offset 16
 463 01e2 00AF     		add	r7, sp, #0
 464              		.cfi_def_cfa_register 7
 465 01e4 7860     		str	r0, [r7, #4]
 466 01e6 3960     		str	r1, [r7]
 150:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    *ptr = (value >>24)&0xFF;
 467              		.loc 1 150 0
 468 01e8 3B68     		ldr	r3, [r7]
 469 01ea 1B0E     		lsrs	r3, r3, #24
 470 01ec DAB2     		uxtb	r2, r3
 471 01ee 7B68     		ldr	r3, [r7, #4]
 472 01f0 1A70     		strb	r2, [r3]
 151:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    ptr++;
 473              		.loc 1 151 0
 474 01f2 7B68     		ldr	r3, [r7, #4]
 475 01f4 0133     		adds	r3, r3, #1
 476 01f6 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cc1QdjNe.s 			page 12


 152:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    *ptr = (value >>16)&0xFF;
 477              		.loc 1 152 0
 478 01f8 3B68     		ldr	r3, [r7]
 479 01fa 1B0C     		lsrs	r3, r3, #16
 480 01fc DAB2     		uxtb	r2, r3
 481 01fe 7B68     		ldr	r3, [r7, #4]
 482 0200 1A70     		strb	r2, [r3]
 153:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    ptr++;
 483              		.loc 1 153 0
 484 0202 7B68     		ldr	r3, [r7, #4]
 485 0204 0133     		adds	r3, r3, #1
 486 0206 7B60     		str	r3, [r7, #4]
 154:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    *ptr = (value >>8)&0xFF;
 487              		.loc 1 154 0
 488 0208 3B68     		ldr	r3, [r7]
 489 020a 1B0A     		lsrs	r3, r3, #8
 490 020c DAB2     		uxtb	r2, r3
 491 020e 7B68     		ldr	r3, [r7, #4]
 492 0210 1A70     		strb	r2, [r3]
 155:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    ptr++;
 493              		.loc 1 155 0
 494 0212 7B68     		ldr	r3, [r7, #4]
 495 0214 0133     		adds	r3, r3, #1
 496 0216 7B60     		str	r3, [r7, #4]
 156:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    *ptr = (value >>0)&0xFF;
 497              		.loc 1 156 0
 498 0218 3B68     		ldr	r3, [r7]
 499 021a DAB2     		uxtb	r2, r3
 500 021c 7B68     		ldr	r3, [r7, #4]
 501 021e 1A70     		strb	r2, [r3]
 157:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** }...
 502              		.loc 1 157 0
 503 0220 00BF     		nop
 504 0222 0C37     		adds	r7, r7, #12
 505              		.cfi_def_cfa_offset 4
 506 0224 BD46     		mov	sp, r7
 507              		.cfi_def_cfa_register 13
 508              		@ sp needed
 509 0226 80BC     		pop	{r7}
 510              		.cfi_restore 7
 511              		.cfi_def_cfa_offset 0
 512 0228 7047     		bx	lr
 513              		.cfi_endproc
 514              	.LFE5:
 516              	.Letext0:
 517              		.file 2 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_base_types.h"
 518              		.file 3 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_ram.h"
 519              		.file 4 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_drivers\\lld_core.h"
 520              		.file 5 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_task_common.h"
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\cc1QdjNe.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 os_heap.c
C:\Users\PRESID~1\AppData\Local\Temp\cc1QdjNe.s:15     .text:00000000 $t
C:\Users\PRESID~1\AppData\Local\Temp\cc1QdjNe.s:22     .text:00000000 os_calloc
C:\Users\PRESID~1\AppData\Local\Temp\cc1QdjNe.s:190    .text:000000ba os_malloc
C:\Users\PRESID~1\AppData\Local\Temp\cc1QdjNe.s:89     .text:00000048 os_realloc
C:\Users\PRESID~1\AppData\Local\Temp\cc1QdjNe.s:286    .text:00000124 os_free
C:\Users\PRESID~1\AppData\Local\Temp\cc1QdjNe.s:371    .text:00000184 GET_UINT32_OF_4UINT8
C:\Users\PRESID~1\AppData\Local\Temp\cc1QdjNe.s:274    .text:0000011c $d
C:\Users\PRESID~1\AppData\Local\Temp\cc1QdjNe.s:279    .text:00000124 $t
C:\Users\PRESID~1\AppData\Local\Temp\cc1QdjNe.s:451    .text:000001de SET_4UINT8_TO_UINT32
C:\Users\PRESID~1\AppData\Local\Temp\cc1QdjNe.s:360    .text:0000017c $d
C:\Users\PRESID~1\AppData\Local\Temp\cc1QdjNe.s:365    .text:00000184 $t
                           .group:00000000 wm4.0.aa75c0738974a382baf71fbad152c229
                           .group:00000000 wm4.os_base_types.h.2.f3c0267f175f5cbacca6b71710665a02
                           .group:00000000 wm4.os_common.h.2.c6c04bcf238b83a2cba2b703b96f6544
                           .group:00000000 wm4.os_stack.h.2.19e5f67d3b2f1e569581f0c055512986
                           .group:00000000 wm4.os_heap.h.2.89074aae455d2462b5952479e3530dd1
                           .group:00000000 wm4.os_main.h.2.1f66ae3841c27bd36097fa1d2e1fe6a7
                           .group:00000000 wm4.os_task_config.h.2.7cfaa082f19f6144d85c64ce1f04b914
                           .group:00000000 wm4.os_task_common.h.93.9db5c540899793a03f331176d195d033

UNDEFINED SYMBOLS
HEAP
