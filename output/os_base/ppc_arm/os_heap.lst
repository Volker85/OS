ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccx2HN3t.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"os_heap.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	os_calloc
  20              		.thumb
  21              		.thumb_func
  23              	os_calloc:
  24              	.LFB0:
  25              		.file 1 "E:\\NeuOrga\\Programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_heap.c"
   1:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** #include "os_firstinc.h"
   2:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** #include "..\os_base\os_heap.h"
   3:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** 
   4:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** Local uint32 GET_UINT32_OF_4UINT8(uint8* ptr);
   5:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** Local void SET_4UINT8_TO_UINT32(uint8* ptr, uint32 value);
   6:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** 
   7:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** /* Allocate and zero-initialize array
   8:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** --------------------------------------------------------------------
   9:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** Allocates a block of memory for an array of num elements,
  10:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** each of them size bytes long, and initializes all its bits to zero. */
  11:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** void* os_calloc(uint32 num, uint32 size)
  12:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** {
  26              		.loc 1 12 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 16
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 7, -8
  33              		.cfi_offset 14, -4
  34 0002 84B0     		sub	sp, sp, #16
  35              		.cfi_def_cfa_offset 24
  36 0004 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  38 0006 7860     		str	r0, [r7, #4]
  39 0008 3960     		str	r1, [r7]
  13:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    uint8* ptr = (uint8*) os_malloc(num*size);
  40              		.loc 1 13 0
  41 000a 7B68     		ldr	r3, [r7, #4]
  42 000c 3A68     		ldr	r2, [r7]
  43 000e 02FB03F3 		mul	r3, r2, r3
  44 0012 1846     		mov	r0, r3
  45 0014 FFF7FEFF 		bl	os_malloc
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccx2HN3t.s 			page 2


  46 0018 B860     		str	r0, [r7, #8]
  14:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    /* zero initialize the RAM*/
  15:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    uint32 i;
  16:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    for(i = 0u; i < (size*num); i++)
  47              		.loc 1 16 0
  48 001a 0023     		movs	r3, #0
  49 001c FB60     		str	r3, [r7, #12]
  50 001e 07E0     		b	.L2
  51              	.L3:
  17:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    {
  18:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       *((uint8*)ptr + (uint32)i) = 0x00u;
  52              		.loc 1 18 0 discriminator 3
  53 0020 BA68     		ldr	r2, [r7, #8]
  54 0022 FB68     		ldr	r3, [r7, #12]
  55 0024 1344     		add	r3, r3, r2
  56 0026 0022     		movs	r2, #0
  57 0028 1A70     		strb	r2, [r3]
  16:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    {
  58              		.loc 1 16 0 discriminator 3
  59 002a FB68     		ldr	r3, [r7, #12]
  60 002c 0133     		adds	r3, r3, #1
  61 002e FB60     		str	r3, [r7, #12]
  62              	.L2:
  16:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    {
  63              		.loc 1 16 0 is_stmt 0 discriminator 1
  64 0030 3B68     		ldr	r3, [r7]
  65 0032 7A68     		ldr	r2, [r7, #4]
  66 0034 02FB03F2 		mul	r2, r2, r3
  67 0038 FB68     		ldr	r3, [r7, #12]
  68 003a 9A42     		cmp	r2, r3
  69 003c F0D8     		bhi	.L3
  19:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    }
  20:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    return (void*) ptr;
  70              		.loc 1 20 0 is_stmt 1
  71 003e BB68     		ldr	r3, [r7, #8]
  21:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** }
  72              		.loc 1 21 0
  73 0040 1846     		mov	r0, r3
  74 0042 1037     		adds	r7, r7, #16
  75              		.cfi_def_cfa_offset 8
  76 0044 BD46     		mov	sp, r7
  77              		.cfi_def_cfa_register 13
  78              		@ sp needed
  79 0046 80BD     		pop	{r7, pc}
  80              		.cfi_endproc
  81              	.LFE0:
  83              		.align	2
  84              		.global	os_realloc
  85              		.thumb
  86              		.thumb_func
  88              	os_realloc:
  89              	.LFB1:
  22:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** /*
  23:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** Reallocate memory block
  24:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** --------------------------------------------------------------------
  25:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** Changes the size of the memory block pointed to by ptr.
  26:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** The function may move the memory block to a new location
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccx2HN3t.s 			page 3


  27:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****  (whose address is returned by the function). The content of the memory
  28:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****  block is preserved up to the lesser of the new and old sizes,
  29:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****  even if the block is moved to a new location. If the new size is larger,
  30:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****  the value of the newly allocated portion is indeterminate.
  31:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** In case that ptr is a null pointer, the function behaves like malloc,
  32:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** assigning a new block of size bytes and returning a pointer to its beginning.
  33:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** */
  34:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** void* os_realloc(void* ptr_old, uint32 size_new)
  35:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** {
  90              		.loc 1 35 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 24
  93              		@ frame_needed = 1, uses_anonymous_args = 0
  94 0048 80B5     		push	{r7, lr}
  95              		.cfi_def_cfa_offset 8
  96              		.cfi_offset 7, -8
  97              		.cfi_offset 14, -4
  98 004a 86B0     		sub	sp, sp, #24
  99              		.cfi_def_cfa_offset 32
 100 004c 00AF     		add	r7, sp, #0
 101              		.cfi_def_cfa_register 7
 102 004e 7860     		str	r0, [r7, #4]
 103 0050 3960     		str	r1, [r7]
  36:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    uint32 i;
  37:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    void* ptr_new = 0u;
 104              		.loc 1 37 0
 105 0052 0023     		movs	r3, #0
 106 0054 3B61     		str	r3, [r7, #16]
  38:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    if(ptr_old == 0u)/* just allocate the new RAM */
 107              		.loc 1 38 0
 108 0056 7B68     		ldr	r3, [r7, #4]
 109 0058 002B     		cmp	r3, #0
 110 005a 04D1     		bne	.L6
  39:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    {
  40:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       ptr_new = (void*) os_malloc(size_new);
 111              		.loc 1 40 0
 112 005c 3868     		ldr	r0, [r7]
 113 005e FFF7FEFF 		bl	os_malloc
 114 0062 3861     		str	r0, [r7, #16]
 115 0064 24E0     		b	.L7
 116              	.L6:
  41:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    }
  42:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    else if(size_new != 0u)/*reallocate*/
 117              		.loc 1 42 0
 118 0066 3B68     		ldr	r3, [r7]
 119 0068 002B     		cmp	r3, #0
 120 006a 19D0     		beq	.L8
 121              	.LBB2:
  43:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    {
  44:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       void* ptr_new = (void*) os_malloc(size_new);
 122              		.loc 1 44 0
 123 006c 3868     		ldr	r0, [r7]
 124 006e FFF7FEFF 		bl	os_malloc
 125 0072 F860     		str	r0, [r7, #12]
  45:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       if(ptr_new != 0u)/* memory to store the data ok? */
 126              		.loc 1 45 0
 127 0074 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccx2HN3t.s 			page 4


 128 0076 002B     		cmp	r3, #0
 129 0078 11D0     		beq	.L9
  46:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       {
  47:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****          for(i = 0u; i < size_new; i++)
 130              		.loc 1 47 0
 131 007a 0023     		movs	r3, #0
 132 007c 7B61     		str	r3, [r7, #20]
 133 007e 0AE0     		b	.L10
 134              	.L11:
  48:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****          {
  49:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****             *((uint8*)ptr_new + (uint32)i) = *((uint8*)ptr_old + (uint32)i);
 135              		.loc 1 49 0 discriminator 3
 136 0080 FA68     		ldr	r2, [r7, #12]
 137 0082 7B69     		ldr	r3, [r7, #20]
 138 0084 1344     		add	r3, r3, r2
 139 0086 7968     		ldr	r1, [r7, #4]
 140 0088 7A69     		ldr	r2, [r7, #20]
 141 008a 0A44     		add	r2, r2, r1
 142 008c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 143 008e 1A70     		strb	r2, [r3]
  47:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****          {
 144              		.loc 1 47 0 discriminator 3
 145 0090 7B69     		ldr	r3, [r7, #20]
 146 0092 0133     		adds	r3, r3, #1
 147 0094 7B61     		str	r3, [r7, #20]
 148              	.L10:
  47:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****          {
 149              		.loc 1 47 0 is_stmt 0 discriminator 1
 150 0096 7A69     		ldr	r2, [r7, #20]
 151 0098 3B68     		ldr	r3, [r7]
 152 009a 9A42     		cmp	r2, r3
 153 009c F0D3     		bcc	.L11
 154              	.L9:
 155              	.LBE2:
 156 009e 07E0     		b	.L7
 157              	.L8:
  50:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****          }
  51:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       }
  52:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    }
  53:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    else /*deallocate */
  54:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    {
  55:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       if(ptr_old != 0u)
 158              		.loc 1 55 0 is_stmt 1
 159 00a0 7B68     		ldr	r3, [r7, #4]
 160 00a2 002B     		cmp	r3, #0
 161 00a4 02D0     		beq	.L12
  56:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       {
  57:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****          os_free(ptr_old);
 162              		.loc 1 57 0
 163 00a6 7868     		ldr	r0, [r7, #4]
 164 00a8 FFF7FEFF 		bl	os_free
 165              	.L12:
  58:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       }
  59:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       ptr_new = 0u;
 166              		.loc 1 59 0
 167 00ac 0023     		movs	r3, #0
 168 00ae 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccx2HN3t.s 			page 5


 169              	.L7:
  60:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    }
  61:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    return ptr_new;
 170              		.loc 1 61 0
 171 00b0 3B69     		ldr	r3, [r7, #16]
  62:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** }
 172              		.loc 1 62 0
 173 00b2 1846     		mov	r0, r3
 174 00b4 1837     		adds	r7, r7, #24
 175              		.cfi_def_cfa_offset 8
 176 00b6 BD46     		mov	sp, r7
 177              		.cfi_def_cfa_register 13
 178              		@ sp needed
 179 00b8 80BD     		pop	{r7, pc}
 180              		.cfi_endproc
 181              	.LFE1:
 183 00ba 00BF     		.align	2
 184              		.global	os_malloc
 185              		.thumb
 186              		.thumb_func
 188              	os_malloc:
 189              	.LFB2:
  63:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** 
  64:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** /* malloc and free shall be the ONLY!!! functions accessing the data structures of the heap directl
  65:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** void* os_malloc(uint32 size)
  66:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** {
 190              		.loc 1 66 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 24
 193              		@ frame_needed = 1, uses_anonymous_args = 0
 194 00bc 80B5     		push	{r7, lr}
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 7, -8
 197              		.cfi_offset 14, -4
 198 00be 86B0     		sub	sp, sp, #24
 199              		.cfi_def_cfa_offset 32
 200 00c0 00AF     		add	r7, sp, #0
 201              		.cfi_def_cfa_register 7
 202 00c2 7860     		str	r0, [r7, #4]
  67:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    /*uint32    used_size = 0;*/
  68:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    uint8*    chunk_ptr = 0;
 203              		.loc 1 68 0
 204 00c4 0023     		movs	r3, #0
 205 00c6 7B61     		str	r3, [r7, #20]
  69:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    uint8*    heap_ptr  = 0; /* current byte of the heap to be accessed */
 206              		.loc 1 69 0
 207 00c8 0023     		movs	r3, #0
 208 00ca 3B61     		str	r3, [r7, #16]
  70:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    uint32    chunk_uint32o_allocate = 0;
 209              		.loc 1 70 0
 210 00cc 0023     		movs	r3, #0
 211 00ce FB60     		str	r3, [r7, #12]
  71:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** 
  72:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    /* search through the heap for free chunk ....
  73:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    e.g. for memory layout
  74:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** 
  75:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    UINT32 for size of chunk
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccx2HN3t.s 			page 6


  76:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    0x00000008,
  77:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    UINT32 for used size of chunk
  78:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    0x00000001,
  79:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    chunk (here 8 bytes)
  80:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    0x00000000,0x00000000
  81:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    UINT32 for size of chunk
  82:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    0x00000010,
  83:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    UINT32 for used size of chunk
  84:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    0x00000009,
  85:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    chunk (here 16 bytes)
  86:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    0x00000000,0x00000000,
  87:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    0x00000000,0x00000000
  88:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    */
  89:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** 
  90:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    /* expand the size to MIN_BLOCK_SIZE_HEAP if necessary */
  91:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    if(size < MIN_BLOCK_SIZE_HEAP)
 212              		.loc 1 91 0
 213 00d0 7B68     		ldr	r3, [r7, #4]
 214 00d2 072B     		cmp	r3, #7
 215 00d4 02D8     		bhi	.L15
  92:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    {
  93:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       chunk_uint32o_allocate = MIN_BLOCK_SIZE_HEAP;
 216              		.loc 1 93 0
 217 00d6 0823     		movs	r3, #8
 218 00d8 FB60     		str	r3, [r7, #12]
 219 00da 01E0     		b	.L16
 220              	.L15:
  94:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    }
  95:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    else
  96:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    {
  97:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       chunk_uint32o_allocate = size;
 221              		.loc 1 97 0
 222 00dc 7B68     		ldr	r3, [r7, #4]
 223 00de FB60     		str	r3, [r7, #12]
 224              	.L16:
  98:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    }
  99:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    for( heap_ptr = (uint8*) &HEAP;/* init on the start of the heap */
 225              		.loc 1 99 0
 226 00e0 0E4B     		ldr	r3, .L21
 227 00e2 3B61     		str	r3, [r7, #16]
 228 00e4 0BE0     		b	.L17
 229              	.L19:
 100:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****          ((heap_ptr + (uint32)HEAP_OFFSET_FOR_CHUNK + (uint32)chunk_uint32o_allocate) <= ((uint8*)&
 101:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****          heap_ptr = heap_ptr + (uint32)HEAP_OFFSET_FOR_CHUNK + size/* set the heap_ptr to the next 
 102:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       )
 103:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    {
 104:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       size      = GET_UINT32_OF_4UINT8(heap_ptr + HEAP_OFFSET_FOR_SIZE);
 230              		.loc 1 104 0
 231 00e6 3869     		ldr	r0, [r7, #16]
 232 00e8 00F04CF8 		bl	GET_UINT32_OF_4UINT8
 233 00ec 7860     		str	r0, [r7, #4]
 105:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       /*used_size = GET_UINT32_OF_4UINT8(heap_ptr + HEAP_OFFSET_FOR_USED_SIZE);*/
 106:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** 
 107:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       chunk_ptr     = (heap_ptr + HEAP_OFFSET_FOR_CHUNK);
 234              		.loc 1 107 0
 235 00ee 3B69     		ldr	r3, [r7, #16]
 236 00f0 0833     		adds	r3, r3, #8
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccx2HN3t.s 			page 7


 237 00f2 7B61     		str	r3, [r7, #20]
 101:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       )
 238              		.loc 1 101 0
 239 00f4 7B68     		ldr	r3, [r7, #4]
 240 00f6 0833     		adds	r3, r3, #8
 241 00f8 3A69     		ldr	r2, [r7, #16]
 242 00fa 1344     		add	r3, r3, r2
 243 00fc 3B61     		str	r3, [r7, #16]
 244              	.L17:
 100:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****          ((heap_ptr + (uint32)HEAP_OFFSET_FOR_CHUNK + (uint32)chunk_uint32o_allocate) <= ((uint8*)&
 245              		.loc 1 100 0 discriminator 1
 246 00fe FB68     		ldr	r3, [r7, #12]
 247 0100 0833     		adds	r3, r3, #8
 248 0102 3A69     		ldr	r2, [r7, #16]
 249 0104 1344     		add	r3, r3, r2
  99:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****          ((heap_ptr + (uint32)HEAP_OFFSET_FOR_CHUNK + (uint32)chunk_uint32o_allocate) <= ((uint8*)&
 250              		.loc 1 99 0 discriminator 1
 251 0106 064A     		ldr	r2, .L21+4
 252 0108 9342     		cmp	r3, r2
 253 010a 02D8     		bhi	.L18
 100:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****          heap_ptr = heap_ptr + (uint32)HEAP_OFFSET_FOR_CHUNK + size/* set the heap_ptr to the next 
 254              		.loc 1 100 0
 255 010c 7B69     		ldr	r3, [r7, #20]
 256 010e 002B     		cmp	r3, #0
 257 0110 E9D0     		beq	.L19
 258              	.L18:
 108:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    }
 109:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    return (void*)chunk_ptr;
 259              		.loc 1 109 0
 260 0112 7B69     		ldr	r3, [r7, #20]
 110:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** }
 261              		.loc 1 110 0
 262 0114 1846     		mov	r0, r3
 263 0116 1837     		adds	r7, r7, #24
 264              		.cfi_def_cfa_offset 8
 265 0118 BD46     		mov	sp, r7
 266              		.cfi_def_cfa_register 13
 267              		@ sp needed
 268 011a 80BD     		pop	{r7, pc}
 269              	.L22:
 270              		.align	2
 271              	.L21:
 272 011c 00000000 		.word	HEAP
 273 0120 10270000 		.word	HEAP+10000
 274              		.cfi_endproc
 275              	.LFE2:
 277              		.align	2
 278              		.global	os_free
 279              		.thumb
 280              		.thumb_func
 282              	os_free:
 283              	.LFB3:
 111:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** void os_free(void* ptr)
 112:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** {
 284              		.loc 1 112 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 24
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccx2HN3t.s 			page 8


 287              		@ frame_needed = 1, uses_anonymous_args = 0
 288 0124 80B5     		push	{r7, lr}
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 7, -8
 291              		.cfi_offset 14, -4
 292 0126 86B0     		sub	sp, sp, #24
 293              		.cfi_def_cfa_offset 32
 294 0128 00AF     		add	r7, sp, #0
 295              		.cfi_def_cfa_register 7
 296 012a 7860     		str	r0, [r7, #4]
 113:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    uint32  size = 0;
 297              		.loc 1 113 0
 298 012c 0023     		movs	r3, #0
 299 012e 3B61     		str	r3, [r7, #16]
 114:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    /*uint32  used_size = 0;*/
 115:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    uint8* chunk_ptr = 0;
 300              		.loc 1 115 0
 301 0130 0023     		movs	r3, #0
 302 0132 FB60     		str	r3, [r7, #12]
 116:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    uint8* heap_ptr  = 0;
 303              		.loc 1 116 0
 304 0134 0023     		movs	r3, #0
 305 0136 7B61     		str	r3, [r7, #20]
 117:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    /* clear used size info in list */
 118:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    for( heap_ptr = (uint8*)&HEAP;/* init on the start of the heap */
 306              		.loc 1 118 0
 307 0138 104B     		ldr	r3, .L27
 308 013a 7B61     		str	r3, [r7, #20]
 309 013c 15E0     		b	.L24
 310              	.L26:
 119:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****          (heap_ptr + (uint32)HEAP_OFFSET_FOR_CHUNK  <= ((uint8*)&HEAP + (uint32)sizeof(HEAP)));/* a
 120:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****          heap_ptr = heap_ptr + HEAP_OFFSET_FOR_CHUNK + size/* set the heap_ptr to the next element 
 121:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       )
 122:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    {
 123:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       size      = GET_UINT32_OF_4UINT8(heap_ptr + HEAP_OFFSET_FOR_SIZE);
 311              		.loc 1 123 0
 312 013e 7869     		ldr	r0, [r7, #20]
 313 0140 00F020F8 		bl	GET_UINT32_OF_4UINT8
 314 0144 3861     		str	r0, [r7, #16]
 124:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       /*used_size = GET_UINT32_OF_4UINT8(heap_ptr + HEAP_OFFSET_FOR_USED_SIZE);*/
 125:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** 
 126:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       chunk_ptr     = (void*) ((uint8*)heap_ptr + (uint32)HEAP_OFFSET_FOR_CHUNK);
 315              		.loc 1 126 0
 316 0146 7B69     		ldr	r3, [r7, #20]
 317 0148 0833     		adds	r3, r3, #8
 318 014a FB60     		str	r3, [r7, #12]
 127:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** 
 128:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       if(chunk_ptr == ptr) /*block found which shall be cleared... */
 319              		.loc 1 128 0
 320 014c FA68     		ldr	r2, [r7, #12]
 321 014e 7B68     		ldr	r3, [r7, #4]
 322 0150 9A42     		cmp	r2, r3
 323 0152 05D1     		bne	.L25
 129:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       {
 130:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****          SET_4UINT8_TO_UINT32((uint8*)heap_ptr + (uint32)HEAP_OFFSET_FOR_USED_SIZE, 0);/* set the u
 324              		.loc 1 130 0
 325 0154 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccx2HN3t.s 			page 9


 326 0156 0433     		adds	r3, r3, #4
 327 0158 1846     		mov	r0, r3
 328 015a 0021     		movs	r1, #0
 329 015c 00F040F8 		bl	SET_4UINT8_TO_UINT32
 330              	.L25:
 120:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       )
 331              		.loc 1 120 0
 332 0160 3B69     		ldr	r3, [r7, #16]
 333 0162 0833     		adds	r3, r3, #8
 334 0164 7A69     		ldr	r2, [r7, #20]
 335 0166 1344     		add	r3, r3, r2
 336 0168 7B61     		str	r3, [r7, #20]
 337              	.L24:
 119:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****          heap_ptr = heap_ptr + HEAP_OFFSET_FOR_CHUNK + size/* set the heap_ptr to the next element 
 338              		.loc 1 119 0 discriminator 1
 339 016a 7B69     		ldr	r3, [r7, #20]
 340 016c 0833     		adds	r3, r3, #8
 118:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****          (heap_ptr + (uint32)HEAP_OFFSET_FOR_CHUNK  <= ((uint8*)&HEAP + (uint32)sizeof(HEAP)));/* a
 341              		.loc 1 118 0 discriminator 1
 342 016e 044A     		ldr	r2, .L27+4
 343 0170 9342     		cmp	r3, r2
 344 0172 E4D9     		bls	.L26
 131:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****       }
 132:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    }
 133:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** }
 345              		.loc 1 133 0
 346 0174 1837     		adds	r7, r7, #24
 347              		.cfi_def_cfa_offset 8
 348 0176 BD46     		mov	sp, r7
 349              		.cfi_def_cfa_register 13
 350              		@ sp needed
 351 0178 80BD     		pop	{r7, pc}
 352              	.L28:
 353 017a 00BF     		.align	2
 354              	.L27:
 355 017c 00000000 		.word	HEAP
 356 0180 10270000 		.word	HEAP+10000
 357              		.cfi_endproc
 358              	.LFE3:
 360              		.align	2
 361              		.thumb
 362              		.thumb_func
 364              	GET_UINT32_OF_4UINT8:
 365              	.LFB4:
 134:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** Local uint32 GET_UINT32_OF_4UINT8(uint8* ptr)
 135:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** {
 366              		.loc 1 135 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 16
 369              		@ frame_needed = 1, uses_anonymous_args = 0
 370              		@ link register save eliminated.
 371 0184 80B4     		push	{r7}
 372              		.cfi_def_cfa_offset 4
 373              		.cfi_offset 7, -4
 374 0186 85B0     		sub	sp, sp, #20
 375              		.cfi_def_cfa_offset 24
 376 0188 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccx2HN3t.s 			page 10


 377              		.cfi_def_cfa_register 7
 378 018a 7860     		str	r0, [r7, #4]
 136:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    uint32 ret_val = 0;
 379              		.loc 1 136 0
 380 018c 0023     		movs	r3, #0
 381 018e FB60     		str	r3, [r7, #12]
 137:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** 
 138:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    ret_val += ((uint32) *ptr)<< 24;
 382              		.loc 1 138 0
 383 0190 7B68     		ldr	r3, [r7, #4]
 384 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 385 0194 1B06     		lsls	r3, r3, #24
 386 0196 FA68     		ldr	r2, [r7, #12]
 387 0198 1344     		add	r3, r3, r2
 388 019a FB60     		str	r3, [r7, #12]
 139:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    ptr++;
 389              		.loc 1 139 0
 390 019c 7B68     		ldr	r3, [r7, #4]
 391 019e 0133     		adds	r3, r3, #1
 392 01a0 7B60     		str	r3, [r7, #4]
 140:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    ret_val += ((uint32) *ptr)<< 16;
 393              		.loc 1 140 0
 394 01a2 7B68     		ldr	r3, [r7, #4]
 395 01a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 396 01a6 1B04     		lsls	r3, r3, #16
 397 01a8 FA68     		ldr	r2, [r7, #12]
 398 01aa 1344     		add	r3, r3, r2
 399 01ac FB60     		str	r3, [r7, #12]
 141:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    ptr++;
 400              		.loc 1 141 0
 401 01ae 7B68     		ldr	r3, [r7, #4]
 402 01b0 0133     		adds	r3, r3, #1
 403 01b2 7B60     		str	r3, [r7, #4]
 142:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    ret_val += ((uint32) *ptr)<< 8;
 404              		.loc 1 142 0
 405 01b4 7B68     		ldr	r3, [r7, #4]
 406 01b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 407 01b8 1B02     		lsls	r3, r3, #8
 408 01ba FA68     		ldr	r2, [r7, #12]
 409 01bc 1344     		add	r3, r3, r2
 410 01be FB60     		str	r3, [r7, #12]
 143:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    ptr++;
 411              		.loc 1 143 0
 412 01c0 7B68     		ldr	r3, [r7, #4]
 413 01c2 0133     		adds	r3, r3, #1
 414 01c4 7B60     		str	r3, [r7, #4]
 144:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    ret_val += ((uint32) *ptr)<< 0;
 415              		.loc 1 144 0
 416 01c6 7B68     		ldr	r3, [r7, #4]
 417 01c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 418 01ca 1A46     		mov	r2, r3
 419 01cc FB68     		ldr	r3, [r7, #12]
 420 01ce 1344     		add	r3, r3, r2
 421 01d0 FB60     		str	r3, [r7, #12]
 145:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** 
 146:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    return ret_val;
 422              		.loc 1 146 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccx2HN3t.s 			page 11


 423 01d2 FB68     		ldr	r3, [r7, #12]
 147:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** }
 424              		.loc 1 147 0
 425 01d4 1846     		mov	r0, r3
 426 01d6 1437     		adds	r7, r7, #20
 427              		.cfi_def_cfa_offset 4
 428 01d8 BD46     		mov	sp, r7
 429              		.cfi_def_cfa_register 13
 430              		@ sp needed
 431 01da 5DF8047B 		ldr	r7, [sp], #4
 432              		.cfi_restore 7
 433              		.cfi_def_cfa_offset 0
 434 01de 7047     		bx	lr
 435              		.cfi_endproc
 436              	.LFE4:
 438              		.align	2
 439              		.thumb
 440              		.thumb_func
 442              	SET_4UINT8_TO_UINT32:
 443              	.LFB5:
 148:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** Local void SET_4UINT8_TO_UINT32(uint8* ptr, uint32 value)
 149:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** {
 444              		.loc 1 149 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 8
 447              		@ frame_needed = 1, uses_anonymous_args = 0
 448              		@ link register save eliminated.
 449 01e0 80B4     		push	{r7}
 450              		.cfi_def_cfa_offset 4
 451              		.cfi_offset 7, -4
 452 01e2 83B0     		sub	sp, sp, #12
 453              		.cfi_def_cfa_offset 16
 454 01e4 00AF     		add	r7, sp, #0
 455              		.cfi_def_cfa_register 7
 456 01e6 7860     		str	r0, [r7, #4]
 457 01e8 3960     		str	r1, [r7]
 150:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    *ptr = (value >>24)&0xFF;
 458              		.loc 1 150 0
 459 01ea 3B68     		ldr	r3, [r7]
 460 01ec 1B0E     		lsrs	r3, r3, #24
 461 01ee DAB2     		uxtb	r2, r3
 462 01f0 7B68     		ldr	r3, [r7, #4]
 463 01f2 1A70     		strb	r2, [r3]
 151:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    ptr++;
 464              		.loc 1 151 0
 465 01f4 7B68     		ldr	r3, [r7, #4]
 466 01f6 0133     		adds	r3, r3, #1
 467 01f8 7B60     		str	r3, [r7, #4]
 152:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    *ptr = (value >>16)&0xFF;
 468              		.loc 1 152 0
 469 01fa 3B68     		ldr	r3, [r7]
 470 01fc 1B0C     		lsrs	r3, r3, #16
 471 01fe DAB2     		uxtb	r2, r3
 472 0200 7B68     		ldr	r3, [r7, #4]
 473 0202 1A70     		strb	r2, [r3]
 153:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    ptr++;
 474              		.loc 1 153 0
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccx2HN3t.s 			page 12


 475 0204 7B68     		ldr	r3, [r7, #4]
 476 0206 0133     		adds	r3, r3, #1
 477 0208 7B60     		str	r3, [r7, #4]
 154:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    *ptr = (value >>8)&0xFF;
 478              		.loc 1 154 0
 479 020a 3B68     		ldr	r3, [r7]
 480 020c 1B0A     		lsrs	r3, r3, #8
 481 020e DAB2     		uxtb	r2, r3
 482 0210 7B68     		ldr	r3, [r7, #4]
 483 0212 1A70     		strb	r2, [r3]
 155:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    ptr++;
 484              		.loc 1 155 0
 485 0214 7B68     		ldr	r3, [r7, #4]
 486 0216 0133     		adds	r3, r3, #1
 487 0218 7B60     		str	r3, [r7, #4]
 156:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c ****    *ptr = (value >>0)&0xFF;
 488              		.loc 1 156 0
 489 021a 3B68     		ldr	r3, [r7]
 490 021c DAB2     		uxtb	r2, r3
 491 021e 7B68     		ldr	r3, [r7, #4]
 492 0220 1A70     		strb	r2, [r3]
 157:E:\NeuOrga\Programmieren\c_cpp\github_os\input\src\os_base\os_heap.c **** }...
 493              		.loc 1 157 0
 494 0222 0C37     		adds	r7, r7, #12
 495              		.cfi_def_cfa_offset 4
 496 0224 BD46     		mov	sp, r7
 497              		.cfi_def_cfa_register 13
 498              		@ sp needed
 499 0226 5DF8047B 		ldr	r7, [sp], #4
 500              		.cfi_restore 7
 501              		.cfi_def_cfa_offset 0
 502 022a 7047     		bx	lr
 503              		.cfi_endproc
 504              	.LFE5:
 506              	.Letext0:
 507              		.file 2 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_base_types.h"
 508              		.file 3 "e:\\neuorga\\programmieren\\c_cpp\\github_os\\input\\src\\os_base\\os_ram.h"
ARM GAS  C:\Users\PRESID~1\AppData\Local\Temp\ccx2HN3t.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 os_heap.c
C:\Users\PRESID~1\AppData\Local\Temp\ccx2HN3t.s:18     .text:00000000 $t
C:\Users\PRESID~1\AppData\Local\Temp\ccx2HN3t.s:23     .text:00000000 os_calloc
C:\Users\PRESID~1\AppData\Local\Temp\ccx2HN3t.s:188    .text:000000bc os_malloc
C:\Users\PRESID~1\AppData\Local\Temp\ccx2HN3t.s:88     .text:00000048 os_realloc
C:\Users\PRESID~1\AppData\Local\Temp\ccx2HN3t.s:282    .text:00000124 os_free
C:\Users\PRESID~1\AppData\Local\Temp\ccx2HN3t.s:364    .text:00000184 GET_UINT32_OF_4UINT8
C:\Users\PRESID~1\AppData\Local\Temp\ccx2HN3t.s:272    .text:0000011c $d
C:\Users\PRESID~1\AppData\Local\Temp\ccx2HN3t.s:277    .text:00000124 $t
C:\Users\PRESID~1\AppData\Local\Temp\ccx2HN3t.s:442    .text:000001e0 SET_4UINT8_TO_UINT32
C:\Users\PRESID~1\AppData\Local\Temp\ccx2HN3t.s:355    .text:0000017c $d
C:\Users\PRESID~1\AppData\Local\Temp\ccx2HN3t.s:360    .text:00000184 $t
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.718a663455c795daf5c6dd176ef70bbe
                           .group:00000000 wm4.os_base_types.h.2.f3c0267f175f5cbacca6b71710665a02
                           .group:00000000 wm4.os_common.h.2.d75289bcbcba9f0e2c2ffeda9394ea88
                           .group:00000000 wm4.os_stack.h.2.19e5f67d3b2f1e569581f0c055512986
                           .group:00000000 wm4.os_heap.h.2.89074aae455d2462b5952479e3530dd1
                           .group:00000000 wm4.os_task_config.h.2.7cfaa082f19f6144d85c64ce1f04b914
                           .group:00000000 wm4.os_task_common.h.92.310ae0de7be5874c80e3c1d4bf919b37

UNDEFINED SYMBOLS
HEAP
