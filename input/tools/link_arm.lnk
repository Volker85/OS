/*
linker command file:
syntax depends on linker
*/
/* link os_exception_table to certain addresse:
PowerPC/ARM: 0x0 
*/
/* stc - stack cookie to detect stack overflow via MPU */
MEMORY 
{
  rom : ORIGIN = 0x08000000, LENGTH = 1024K
  stc : ORIGIN = 0x20000000, LENGTH = 10
  ram : ORIGIN = 0x20000010, LENGTH = 192K
} 

SECTIONS{
   .text :
   {
      _ivec_start = .;
      os_exception_table.o
      _ivec_end = .;
      PROVIDE(ivec_start = .);
      PROVIDE(ivec_end = .); 
   } > rom
   .text :
   {
      _const_start = .;
      os_const.o
      _const_end = .;
      PROVIDE(const_start = .);
      PROVIDE(const_end = .);   
   } > rom
   .text :
   {       
      _code_start = .;   
      lld_global.o  
      lld_interrupt.o
      lld_mmu.o
      lld_ram.o
      lld_timer.o
      lld_power.o        
      os_exception_reset.o
      os_common.o
      os_exception.o
      os_exception_isr_handler.o
      os_exception_table.o
      os_init_task_system.o
      os_main.o
      os_memory_mmu.o
      os_shutdown.o
      os_start_ext_prg.o
      os_start_init_hw.o
      os_start_init_mc.o
      os_start_init_sw.o
      os_start_os.o
      os_task_common.o
      os_task_queue.o
      os_task_scheduler.o   
      os_stack.o
      os_heap.o 
      led.o
      _code_end = .;
      PROVIDE(code_start = .);
      PROVIDE(code_end = .);       
   } > rom
   .data :
   {      
      _ram_stack_start = .;
      os_ram_stack.o   
      _ram_stack_end = .;
      PROVIDE(ram_stack_start = .);
      PROVIDE(ram_stack_end = .);
   } > ram   
   .data :
   {      
      _ram_start = .;
      os_ram.o
      os_ram_shared.o      
      _ram_end = .;
      PROVIDE(ram_start = .);
      PROVIDE(ram_end = .);
   } > ram
}
